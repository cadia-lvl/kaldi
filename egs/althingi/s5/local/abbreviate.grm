# Grammar file to expand abbreviations, numbers and ordinals
#
# 2016 Inga Run Helgadottir
#
# This grammar can be interactively tested by doing:
#
# thraxrewrite-tester --far=local/abbreviate.far --rules=ABBREVIATE --noutput=1 --input_mode=utf8 --output_mode=utf8

# It can also be tested in the following way:
# thraxrewrite-fileio --far=local/abbreviate.far --rules=ABBREVIATE
# --noutput=1 --input_mode=utf8 --output_mode=utf8 <input-text-file>
# <output-text-file>

# NOTE! If the last word of the whole speech is a number it will not
# be correctly shortened. F.ex. "fjörutíu og tveir" would become "40
# og tveir" The NARROWNUMS_MAYBE transducer requires that a space
# follows the number

import 'local/common.grm' as c;
#import 'numbers.grm' as n;
import 'local/ordinals.grm' as o;
# Use factorize since Robert already had introduced appropriate wheights
import 'local/factorize.grm' as f;

# This transducer deletes a sequence of zero or more spaces:
delspace = c.space* : "".utf8;

insspace = "".utf8 : " ".utf8;

#numbernames = n.NUMBERNAMES;
ordinalnames = o.ORDINALNAMES2; # Does not expand 1. and 2.
ordinal = Invert[ordinalnames];
namesnumber = f.NAMESNUMBER2;

# Abbreviations used in Alþingi paired with their expansions
abbr = Optimize[StringFile['text_norm/lex/abbreviate_words.txt','utf8','utf8']];
abbr2 =
Optimize[StringFile['text_norm/lex/abbreviate_if_preceded_wNumber.txt','utf8','utf8']];
abbr3 = Optimize[StringFile['text_norm/lex/abbreviate_if_followed_byNumber.txt','utf8','utf8']];
#kjordaemi = Optimize[StringFile['text_norm/lex/kjordaemi_abbr.txt','utf8','utf8']];

NARROWNUMS_MAYBE = ArcSort[Optimize[Determinize[
                          CDRewrite[namesnumber insspace,
                                    ("[BOS]".utf8 | " ".utf8),
                                    ("[EOS]".utf8 | "".utf8),
                                    c.whole_alphabet*,
                                    'sim',
                                    'obl']]],
                                  'input'];

# This abbreviates at least one rewritable word or number, per
# senctence. But doesn't take in senctences containing numerals
# and/or abbreviations (written as f.ex. 2, 4, t.d., hv.)
# So we would loose utterances
#export exp_tmp = Optimize[rewrite @ optional_exp @ EXPAND_WORD ];
#export tmp = Invert[rewrite @ optional_exp @ word];
ABBR_WORD = Optimize[
                     CDRewrite[abbr delspace,
                     ("[BOS]".utf8 | " ".utf8),
                     ("[EOS]".utf8 | " ".utf8),
                     c.whole_alphabet*,
                     'ltr',
                     'obl']];

# ABBR_NUMBER = Optimize[
#                      CDRewrite[number delspace,
#                      ("[BOS]".utf8 | " ".utf8),
#                      ("[EOS]".utf8 | " ".utf8),
#                      c.whole_alphabet*,
#                      'ltr',
#                      'opt']]; # If have 'obl' instead, all "annars
#                      # vegar" and "dag einn..." will be abbreviated

ORDINAL = ArcSort[Optimize[Determinize[
                     CDRewrite[ordinal delspace,
                     ("[BOS]".utf8 | " ".utf8),
                     ("[EOS]".utf8 | " ".utf8),
                     c.whole_alphabet*,
                     'sim',
                     'obl']]],
                     'input']; # If have 'obl' instead, all "annars
                     # vegar" and "dag einn..." will be abbreviated

abbreviate1 = Optimize[ABBR_WORD @ ORDINAL @ NARROWNUMS_MAYBE];


# Could I here add a fst that works on the output of the first
# one. F.ex. checks if the previous word is a number??

ABBR_WORD2 = CDRewrite[abbr2 delspace,
                     (c.Digits+ ".".utf8? " ".utf8),
                     ("[EOS]".utf8 | " ".utf8),
                     c.whole_alphabet*,
                     'ltr',
                     'obl'];

nr = CDRewrite[("númer".utf8 : "nr".utf8) delspace,
               ("[BOS]".utf8 | " ".utf8),
               (" ".utf8 c.Digits+),
               c.whole_alphabet*,
               'ltr',
               'obl'];

abbreviate2 = ArcSort[Optimize[Determinize[abbreviate1 @ ABBR_WORD2 @ nr]],'input'];

ABBR_WORD3 = Optimize[
                     CDRewrite[abbr3 delspace,
                     ("[BOS]".utf8 | " ".utf8),
                     (" ".utf8 ("lög nr ".utf8 | "lögum nr ".utf8 |
                     "nr ".utf8)? c.Digits+ ".".utf8?),
                     c.whole_alphabet*,
                     'ltr',
                     'obl']];

# ABBR_KJORDAEMI = CDRewrite[kjordaemi delspace,
#                      (c.Digits+ ".".utf8 " ".utf8 "þingm".utf8
#                      c.alphabet+ " ".utf8),
#                      ("[EOS]".utf8 | " ".utf8),
#                      c.whole_alphabet*,
#                      'ltr',
#                      'obl'];

export ABBREVIATE = ArcSort[
                    Optimize[Determinize[abbreviate2 @ ABBR_WORD3]],
                    'input'];

ins_periods =
Optimize[StringFile['text_norm/lex/abbr_periods.txt','utf8','utf8']];

export INS_PERIODS = CDRewrite[ins_periods,
                     ("[BOS]".utf8 | " ".utf8),
                     ".".utf8? ("[EOS]".utf8 | " ".utf8),
                     c.whole_alphabet*,
                     'ltr',
                     'obl'];
