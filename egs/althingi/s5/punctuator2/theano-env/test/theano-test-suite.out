srun: job 347328 queued and waiting for resources
srun: job 347328 has been allocated resources
/home/staff/inga/.local/lib/python2.7/site-packages/theano/misc/pycuda_init.py:35: UserWarning: PyCUDA import failed in theano.misc.pycuda_init
  warnings.warn("PyCUDA import failed in theano.misc.pycuda_init")
/home/staff/inga/.local/lib/python2.7/site-packages/theano/sandbox/gpuarray/__init__.py:10: UserWarning: theano.sandbox.gpuarray has been moved to theano.gpuarray. Please update your code and pickles. If the warning persists, clear theano's cache ('$theano/bin/theano-cache clear').
  warnings.warn(message)
#1 test_connection_pattern (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#2 test_grad (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#3 test_grad_grad (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#4 test_infer_shape (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#5 test_shared (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#6 test_shared_grad (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#7 test_size_changes (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#8 test_straightforward (theano.compile.tests.test_builders.T_OpFromGraph) ... ok
#9 test_aliased_outputs_bad (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#10 test_aliased_outputs_ok (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#11 test_aliased_outputs_ok_output (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#12 test_aliased_outputs_ok_shadow (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#13 test_badviewmap_c (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#14 test_badviewmap_ref (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#15 test_badviewmap_slice (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#16 test_goodviewmap (theano.compile.tests.test_debugmode.Test_ViewMap) ... ok
#17 test_check_isfinite (theano.compile.tests.test_debugmode.Test_check_isfinite) ... ok
#18 test_check_isfinite_disabled (theano.compile.tests.test_debugmode.Test_check_isfinite) ... ok
#19 test_f_contiguous (theano.compile.tests.test_debugmode.Test_preallocated_output) ... ok
#20 test_f_contiguous_out (theano.compile.tests.test_debugmode.Test_preallocated_output) ... ok
#21 test_output_broadcast_cuda (theano.compile.tests.test_debugmode.Test_preallocated_output) ... SKIP: Optional package Cuda disabled
#22 test_output_broadcast_tensor (theano.compile.tests.test_debugmode.Test_preallocated_output) ... ok
#23 theano.compile.tests.test_debugmode.test0 ... ok
#24 theano.compile.tests.test_debugmode.test_badthunkoutput ... ok
#25 theano.compile.tests.test_debugmode.test_badoptimization ... ok
#26 This variant of test_badoptimization() replace the working code ... ok
#27 theano.compile.tests.test_debugmode.test_stochasticoptimization ... ok
#28 theano.compile.tests.test_debugmode.test_just_c_code ... ok
#29 theano.compile.tests.test_debugmode.test_baddestroymap ... ok
#30 theano.compile.tests.test_debugmode.test_baddestroymap_c ... ok
#31 test_explicit_shared_input (theano.compile.tests.test_function.TestFunctionIn) ... ok
#32 test_in_allow_downcast_floatX (theano.compile.tests.test_function.TestFunctionIn) ... ok
#33 test_in_allow_downcast_int (theano.compile.tests.test_function.TestFunctionIn) ... ok
#34 test_in_allow_downcast_vector_floatX (theano.compile.tests.test_function.TestFunctionIn) ... ok
#35 test_in_mutable (theano.compile.tests.test_function.TestFunctionIn) ... ok
#36 test_in_shared_variable (theano.compile.tests.test_function.TestFunctionIn) ... ok
#37 test_in_strict (theano.compile.tests.test_function.TestFunctionIn) ... ok
#38 test_in_update (theano.compile.tests.test_function.TestFunctionIn) ... ok
#39 test_in_update_shared (theano.compile.tests.test_function.TestFunctionIn) ... ok
#40 test_in_update_wrong_dtype (theano.compile.tests.test_function.TestFunctionIn) ... ok
#41 theano.compile.tests.test_function.test_function_dump ... ok
#42 Tests that the contract for io.In is respected. When borrow=False, it should be ... ok
#43 test_borrow_output (theano.compile.tests.test_function_module.T_function) ... ok
#44 test_constant_output (theano.compile.tests.test_function_module.T_function) ... ok
#45 test_copy (theano.compile.tests.test_function_module.T_function) ... ok
#46 test_copy_delete_updates (theano.compile.tests.test_function_module.T_function) ... ok
#47 test_copy_share_memory (theano.compile.tests.test_function_module.T_function) ... ok
#48 Check that default values are restored ... ok
#49 test_disconnected_input (theano.compile.tests.test_function_module.T_function) ... ok
#50 test_empty (theano.compile.tests.test_function_module.T_function) ... ok
#51 test_extra_inputs (theano.compile.tests.test_function_module.T_function) ... ok
#52 Make test on free() function ... ok
#53 Ensure error is raised when trying to replace an input variable. ... ok
#54 test_input_anon_singleton (theano.compile.tests.test_function_module.T_function) ... ok
#55 test_input_anon_unpack (theano.compile.tests.test_function_module.T_function) ... ok
#56 test_masked_input (theano.compile.tests.test_function_module.T_function) ... ok
#57 test_missing_inputs (theano.compile.tests.test_function_module.T_function) ... ok
#58 test_naming_rule0 (theano.compile.tests.test_function_module.T_function) ... ok
#59 test_naming_rule1 (theano.compile.tests.test_function_module.T_function) ... ok
#60 test_naming_rule2 (theano.compile.tests.test_function_module.T_function) ... ok
#61 test_naming_rule3 (theano.compile.tests.test_function_module.T_function) ... ok
#62 test_naming_rule4 (theano.compile.tests.test_function_module.T_function) ... ok
#63 test_none (theano.compile.tests.test_function_module.T_function) ... SKIP: See #254: Using None as function output leads to [] return value
#64 test_same_names (theano.compile.tests.test_function_module.T_function) ... ok
#65 test_shared_state0 (theano.compile.tests.test_function_module.T_function) ... ok
#66 test_shared_state1 (theano.compile.tests.test_function_module.T_function) ... ok
#67 test_shared_state2 (theano.compile.tests.test_function_module.T_function) ... ok
#68 test_shared_state_not_implicit (theano.compile.tests.test_function_module.T_function) ... ok
#69 test_state_access (theano.compile.tests.test_function_module.T_function) ... ok
#70 test_swap_SharedVariable (theano.compile.tests.test_function_module.T_function) ... ok
#71 A special testcase for logistic_sgd.py in Deep Learning Tutorial ... ok
#72 test_weird_names (theano.compile.tests.test_function_module.T_function) ... ok
#73 test_broken_pickle_with_shared (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#74 test_deepcopy (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#75 test_deepcopy_shared_container (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#76 test_multiple_functions (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#77 test_optimizations_preserved (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#78 test_pickle (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#79 test_pickle_class_with_functions (theano.compile.tests.test_function_module.T_picklefunction) ... ok
#80 Regression test for bug fixed in 8625e03. ... ok
#81 test_function_name (theano.compile.tests.test_function_name.FunctionName) ... ok
#82 test_nnet (theano.compile.tests.test_misc.TestNnet) ... ok
#83 theano.compile.tests.test_mode.test_no_output_from_implace ... ok
#84 theano.compile.tests.test_mode.test_including ... ok
#85 test1 (theano.compile.tests.test_modes.T_bunch_of_modes) ... ok
#86 test_1 (theano.compile.tests.test_modes.T_old_problem) ... ok
#87 Test the code snippet example that detects NaN values. ... ok
#88 Test that we can remove optimizer ... ok
#89 Test that we can remove optimizers including inplace optimizers ... ok
#90 theano.compile.tests.test_nanguardmode.test_NanGuardMode ... /home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/numpy/lib/nanfunctions.py:326: RuntimeWarning: All-NaN slice encountered
  warnings.warn("All-NaN slice encountered", RuntimeWarning)
/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/numpy/lib/nanfunctions.py:227: RuntimeWarning: All-NaN axis encountered
  warnings.warn("All-NaN axis encountered", RuntimeWarning)
ok
#91 test_1arg (theano.compile.tests.test_ops.OpDecoratorTests) ... ok
#92 test_2arg (theano.compile.tests.test_ops.OpDecoratorTests) ... ok
#93 test_infer_shape (theano.compile.tests.test_ops.OpDecoratorTests) ... ok
#94 test_pickle (theano.compile.tests.test_ops.OpDecoratorTests) ... ok
#95 theano.compile.tests.test_ops.test_shape_i_hash ... ok
#96 test_input_aliasing_affecting_inplace_operations (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#97 test_no_aliasing_0 (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#98 test_no_aliasing_1 (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#99 test_no_aliasing_2 (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#100 test_no_aliasing_2b (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#101 test_partial_input_aliasing_affecting_inplace_operations (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#102 test_potential_output_aliasing_induced_by_updates (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#103 test_shared_constructor_copies (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#104 test_sparse_input_aliasing_affecting_inplace_operations (theano.compile.tests.test_pfunc.Test_aliasing_rules) ... ok
#105 test_allow_downcast_floatX (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#106 test_allow_input_downcast_int (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#107 test_clone0 (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#108 test_default_container (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#109 test_default_scalar_container (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#110 test_default_updates (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#111 test_default_updates_chained (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#112 test_default_updates_expressions (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#113 test_default_updates_input (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#114 test_default_updates_multiple (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#115 test_default_updates_partial_graph (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#116 Ensure the code given in pfunc.txt works as expected ... ok
#117 test_duplicate_inputs (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#118 test_duplicate_updates (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#119 test_givens (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#120 test_givens_replaces_shared_variable (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#121 test_givens_replaces_shared_variable2 (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#122 test_no_default_updates (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#123 Test that shared variables cannot be used as function inputs. ... ok
#124 test_param_allow_downcast_floatX (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#125 test_param_allow_downcast_int (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#126 test_param_allow_downcast_vector_floatX (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#127 test_param_mutable (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#128 test_param_strict (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#129 test_shared (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#130 test_shared_mutable (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#131 Test update mechanism in different settings. ... ok
#132 test_update_equiv (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#133 test_update_err_broadcast (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#134 test_update_same (theano.compile.tests.test_pfunc.Test_pfunc) ... ok
#135 test1 (theano.compile.tests.test_pfunc.Test_rebuild_strict) ... ok
#136 test_ifelse (theano.compile.tests.test_profiling.Test_profiling) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/gof/vm.py:867: UserWarning: CVM does not support memory profile, using Stack VM.
  'CVM does not support memory profile, using Stack VM.')
ok
#137 test_profiling (theano.compile.tests.test_profiling.Test_profiling) ... ok
#138 test_create_numpy_strict_false (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#139 test_ctors (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#140 test_err_symbolic_variable (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#141 test_scalar_floatX (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#142 test_scalar_strict (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#143 test_strict_generic (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#144 test_tensor_floatX (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#145 test_tensor_strict (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#146 test_use_numpy_strict_false (theano.compile.tests.test_shared.Test_SharedVariable) ... ok
#147 Failure: SkipTest (pydot not available: Install the python package pydot or pydot-ng. Install graphviz.) ... SKIP: pydot not available: Install the python package pydot or pydot-ng. Install graphviz.
#148 Failure: SkipTest (pydot not available: Install the python package pydot or pydot-ng. Install graphviz.) ... SKIP: pydot not available: Install the python package pydot or pydot-ng. Install graphviz.
#149 theano.gof.tests.test_cc.test_clinker_straightforward ... ok
#150 theano.gof.tests.test_cc.test_clinker_literal_inlining ... ok
#151 theano.gof.tests.test_cc.test_clinker_literal_cache ... ok
#152 theano.gof.tests.test_cc.test_clinker_single_node ... ok
#153 theano.gof.tests.test_cc.test_clinker_dups ... ok
#154 theano.gof.tests.test_cc.test_clinker_not_used_inputs ... ok
#155 theano.gof.tests.test_cc.test_clinker_dups_inner ... ok
#156 theano.gof.tests.test_cc.test_opwiseclinker_straightforward ... ok
#157 theano.gof.tests.test_cc.test_opwiseclinker_constant ... ok
#158 theano.gof.tests.test_cc.test_duallinker_straightforward ... ok
#159 theano.gof.tests.test_cc.test_duallinker_mismatch ... ok
#160 theano.gof.tests.test_cc.test_c_fail_error ... ok
#161 theano.gof.tests.test_cc.test_shared_input_output ... ok
#162 When an op with c_code, but no version. If we have 2 apply node ... ok
#163 theano.gof.tests.test_cmodule.test_flag_detection ... ok
#164 theano.gof.tests.test_compiledir.test_short_platform ... ok
#165 test_compute_flag (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#166 test_constant (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#167 test_disabled_during_compilation (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#168 test_empty_elemwise (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#169 test_incorrect_type (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#170 test_ndarray (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#171 test_no_c_code (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#172 test_no_perform (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#173 test_overided_function (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#174 Test the compute_test_value mechanism Scan. ... ok
#175 test_scan_err1 (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#176 test_scan_err2 (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#177 test_shared (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#178 test_string_var (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#179 test_variable_only (theano.gof.tests.test_compute_test_value.TestComputeTestValue) ... ok
#180 theano.gof.tests.test_destroyhandler.test_misc ... ok
#181 theano.gof.tests.test_destroyhandler.test_aliased_inputs_replacement ... ok
#182 theano.gof.tests.test_destroyhandler.test_indestructible ... ok
#183 theano.gof.tests.test_destroyhandler.test_usage_loop_through_views_2 ... ok
#184 theano.gof.tests.test_destroyhandler.test_destroyers_loop ... ok
#185 theano.gof.tests.test_destroyhandler.test_aliased_inputs ... ok
#186 theano.gof.tests.test_destroyhandler.test_aliased_inputs2 ... ok
#187 theano.gof.tests.test_destroyhandler.test_aliased_inputs_tolerate ... ok
#188 theano.gof.tests.test_destroyhandler.test_aliased_inputs_tolerate2 ... ok
#189 theano.gof.tests.test_destroyhandler.test_same_aliased_inputs_ignored ... ok
#190 theano.gof.tests.test_destroyhandler.test_different_aliased_inputs_ignored ... ok
#191 theano.gof.tests.test_destroyhandler.test_indestructible_through_views ... ok
#192 theano.gof.tests.test_destroyhandler.test_indirect ... ok
#193 theano.gof.tests.test_destroyhandler.test_indirect_2 ... ok
#194 theano.gof.tests.test_destroyhandler.test_long_destroyers_loop ... ok
#195 theano.gof.tests.test_destroyhandler.test_misc_2 ... ok
#196 theano.gof.tests.test_destroyhandler.test_multi_destroyers ... ok
#197 theano.gof.tests.test_destroyhandler.test_multi_destroyers_through_views ... ok
#198 theano.gof.tests.test_destroyhandler.test_repair_destroy_path ... ok
#199 theano.gof.tests.test_destroyhandler.test_usage_loop ... ok
#200 theano.gof.tests.test_destroyhandler.test_usage_loop_through_views ... ok
#201 theano.gof.tests.test_destroyhandler.test_usage_loop_insert_views ... ok
#202 theano.gof.tests.test_destroyhandler.test_value_repl ... ok
#203 theano.gof.tests.test_destroyhandler.test_value_repl_2 ... ok
#204 theano.gof.tests.test_destroyhandler.test_multiple_inplace ... ok
#205 test_clone (theano.gof.tests.test_fg.TFunctionGraph) ... ok
#206 test_constant_cache_error (theano.gof.tests.test_fg.TFunctionGraph) ... ok
#207 test_node_outputs_not_used (theano.gof.tests.test_fg.TFunctionGraph) ... ok
#208 test_pickle (theano.gof.tests.test_fg.TFunctionGraph) ... ok
#209 theano.gof.tests.test_graph.TestAutoName.test_auto_name ... ok
#210 theano.gof.tests.test_graph.TestAutoName.test_clone ... ok
#211 theano.gof.tests.test_graph.TestAutoName.test_constant ... ok
#212 theano.gof.tests.test_graph.TestAutoName.test_cudandarrayvariable ... ok
#213 theano.gof.tests.test_graph.TestAutoName.test_randomvariable ... ok
#214 theano.gof.tests.test_graph.TestAutoName.test_sparsevariable ... ok
#215 theano.gof.tests.test_graph.TestAutoName.test_tensorvariable ... ok
#216 theano.gof.tests.test_graph.TestClone.test_accurate ... ok
#217 theano.gof.tests.test_graph.TestClone.test_copy ... ok
#218 theano.gof.tests.test_graph.TestClone.test_not_destructive ... ok
#219 test_eval (theano.gof.tests.test_graph.TestEval) ... ok
#220 theano.gof.tests.test_graph.TestInputs.test_inputs ... ok
#221 theano.gof.tests.test_graph.TestInputs.test_inputs_deep ... ok
#222 Test `is_same_graph` with more complex graphs. ... ok
#223 Test `is_same_graph` when `equal_computations` cannot be used. ... ok
#224 Test `is_same_graph` with some trivial graphs (one Variable). ... ok
#225 theano.gof.tests.test_graph.TestStr.test_as_string ... ok
#226 theano.gof.tests.test_graph.TestStr.test_as_string_deep ... ok
#227 theano.gof.tests.test_graph.TestStr.test_cutoff ... ok
#228 theano.gof.tests.test_graph.TestStr.test_multiple_references ... ok
#229 Test a simple graph ... ok
#230 Test a graph with double dependencies ... ok
#231 Test a graph where the inputs have owners ... ok
#232 Test a graph which is not connected ... ok
#233 Test inputs and outputs mixed together in a chain graph ... ok
#234 Test when outputs have clients ... ok
#235 theano.gof.tests.test_graph_opt_caching.test_graph_opt_caching ... ok
#236 theano.gof.tests.test_lazy.test_ifelse ... ok
#237 theano.gof.tests.test_lazy.more_complex_test ... ok
#238 test_constant (theano.gof.tests.test_link.TestPerformLinker) ... ok
#239 test_function (theano.gof.tests.test_link.TestPerformLinker) ... ok
#240 test_input_dependency0 (theano.gof.tests.test_link.TestPerformLinker) ... ok
#241 test_input_output_same (theano.gof.tests.test_link.TestPerformLinker) ... ok
#242 test_skiphole (theano.gof.tests.test_link.TestPerformLinker) ... ok
#243 test_thunk (theano.gof.tests.test_link.TestPerformLinker) ... ok
#244 test_0 (theano.gof.tests.test_link.TestWrapLinker) ... ok
#245 test_1 (theano.gof.tests.test_link.TestWrapLinker) ... ok
#246 theano.gof.tests.test_link.test_sort_schedule_fn ... ok
#247 This is a test to a work around a NumPy bug. ... ok
#248 test_no_c_code (theano.gof.tests.test_op.TestMakeThunk) ... ok
#249 test_no_make_node (theano.gof.tests.test_op.TestMakeThunk) ... ok
#250 test_no_perform (theano.gof.tests.test_op.TestMakeThunk) ... ok
#251 theano.gof.tests.test_op.TestOp.test_op_no_input ... ok
#252 theano.gof.tests.test_op.TestOp.test_op_struct ... ok
#253 theano.gof.tests.test_op.TestOp.test_sanity_0 ... ok
#254 theano.gof.tests.test_op.TestOp.test_validate ... ok
#255 theano.gof.tests.test_op.test_test_value_python_objects ... ok
#256 theano.gof.tests.test_op.test_test_value_ndarray ... ok
#257 theano.gof.tests.test_op.test_test_value_constant ... ok
#258 theano.gof.tests.test_op.test_test_value_shared ... ok
#259 theano.gof.tests.test_op.test_test_value_op ... ok
#260 get_debug_values should return [] when debugger is off ... ok
#261 get_debug_values should return [] when debugger is ignore ... ok
#262 tests that get_debug_value returns values when available ... ok
#263 tests that get_debug_value raises an exception when ... ok
#264 tests that debug_error_message raises an ... ok
#265 theano.gof.tests.test_opt.TestEquilibrium.test_1 ... ok
#266 theano.gof.tests.test_opt.TestEquilibrium.test_2 ... ok
#267 theano.gof.tests.test_opt.TestEquilibrium.test_low_use_ratio ... ok
#268 theano.gof.tests.test_opt.TestMergeOptimizer.test_both_assert_merge_identical ... ok
#269 theano.gof.tests.test_opt.TestMergeOptimizer.test_constant_merging ... ok
#270 theano.gof.tests.test_opt.TestMergeOptimizer.test_deep_merge ... ok
#271 theano.gof.tests.test_opt.TestMergeOptimizer.test_identical_constant_args ... ok
#272 theano.gof.tests.test_opt.TestMergeOptimizer.test_merge_noinput ... ok
#273 theano.gof.tests.test_opt.TestMergeOptimizer.test_merge_outputs ... ok
#274 theano.gof.tests.test_opt.TestMergeOptimizer.test_multiple_merges ... ok
#275 theano.gof.tests.test_opt.TestMergeOptimizer.test_no_merge ... ok
#276 theano.gof.tests.test_opt.TestMergeOptimizer.test_straightforward ... ok
#277 theano.gof.tests.test_opt.TestOpSubOptimizer.test_straightforward ... ok
#278 theano.gof.tests.test_opt.TestOpSubOptimizer.test_straightforward_2 ... ok
#279 theano.gof.tests.test_opt.TestPatternOptimizer.test_ambiguous ... ok
#280 theano.gof.tests.test_opt.TestPatternOptimizer.test_constant_unification ... ok
#281 theano.gof.tests.test_opt.TestPatternOptimizer.test_constraints ... ok
#282 theano.gof.tests.test_opt.TestPatternOptimizer.test_eq ... ok
#283 theano.gof.tests.test_opt.TestPatternOptimizer.test_expand ... ok
#284 theano.gof.tests.test_opt.TestPatternOptimizer.test_match_same ... ok
#285 theano.gof.tests.test_opt.TestPatternOptimizer.test_match_same_illegal ... ok
#286 theano.gof.tests.test_opt.TestPatternOptimizer.test_multi ... ok
#287 theano.gof.tests.test_opt.TestPatternOptimizer.test_multiple ... ok
#288 theano.gof.tests.test_opt.TestPatternOptimizer.test_nested_even ... ok
#289 theano.gof.tests.test_opt.TestPatternOptimizer.test_nested_odd ... ok
#290 theano.gof.tests.test_opt.TestPatternOptimizer.test_nested_out_pattern ... ok
#291 theano.gof.tests.test_opt.TestPatternOptimizer.test_no_recurse ... ok
#292 theano.gof.tests.test_opt.TestPatternOptimizer.test_replace_output ... ok
#293 theano.gof.tests.test_opt.TestPatternOptimizer.test_replace_subgraph ... ok
#294 theano.gof.tests.test_opt.TestPatternOptimizer.test_unification_1 ... ok
#295 theano.gof.tests.test_opt.TestPatternOptimizer.test_unification_2 ... ok
#296 theano.gof.tests.test_opt.test_pre_constant_merge_slice ... ok
#297 test_0 (theano.gof.tests.test_optdb.Test_DB) ... ok
#298 theano.gof.tests.test_sched.test_dependence ... ok
#299 theano.gof.tests.test_sched.test_sort_apply_nodes ... ok
#300 theano.gof.tests.test_sched.test_reverse_dict ... ok
#301 theano.gof.tests.test_sched.test__toposort ... ok
#302 theano.gof.tests.test_sched.test_posort_easy ... ok
#303 theano.gof.tests.test_sched.test_posort ... ok
#304 theano.gof.tests.test_toolbox.TestNodeFinder.test_straightforward ... ok
#305 theano.gof.tests.test_types.test_cdata ... ok
#306 theano.gof.tests.test_utils.test_give_variables_names ... ok
#307 theano.gof.tests.test_utils.test_give_variables_names_idempotence ... ok
#308 theano.gof.tests.test_utils.test_give_variables_names_small ... ok
#309 theano.gof.tests.test_utils.test_remove ... ok
#310 theano.gof.tests.test_utils.test_stack_trace ... ok
#311 test_callback (theano.gof.tests.test_vm.TestCallbacks) ... ok
#312 test_callback_with_ifelse (theano.gof.tests.test_vm.TestCallbacks) ... ok
#313 theano.gof.tests.test_vm.test_c_thunks ... ok
#314 theano.gof.tests.test_vm.test_speed ... ok
#315 theano.gof.tests.test_vm.test_speed_lazy ... ok
#316 theano.gof.tests.test_vm.test_partial_function ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/gof/vm.py:870: UserWarning: LoopGC does not support partial evaluation, using Stack VM.
  'LoopGC does not support partial evaluation, '
ok
#317 theano.gof.tests.test_vm.test_partial_function_with_output_keys ... ok
#318 theano.gof.tests.test_vm.test_partial_function_with_updates ... ok
#319 theano.gof.tests.test_vm.test_allow_gc_cvm ... ok
#320 This already caused a bug in the trunk of Theano. ... ok
#321 theano.gof.tests.test_vm.test_reallocation ... ok
#322 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#323 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#324 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#325 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#326 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#327 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#328 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#329 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#330 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#331 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#332 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#333 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#334 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#335 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#336 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#337 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#338 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#3910 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#341 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#342 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#343 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#344 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#345 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#346 Failure: SkipTest (gnumpy not installed. Skip test of theano op with pycuda code.) ... SKIP: gnumpy not installed. Skip test of theano op with pycuda code.
#347 Failure: SkipTest (gnumpy not installed. Skip test related to it.) ... SKIP: gnumpy not installed. Skip test related to it.
#348 theano.misc.tests.test_may_share_memory.test_may_share_memory ... ok
#349 theano.misc.tests.test_may_share_memory.test_may_share_memory_scipy ... ok
#350 test_dump_load (theano.misc.tests.test_pkl_utils.T_dump_load) ... SKIP: Optional package cuda disabled
#351 test_dump_load_mrg (theano.misc.tests.test_pkl_utils.T_dump_load) ... ok
#352 test_dump_zip_names (theano.misc.tests.test_pkl_utils.T_dump_load) ... ok
#353 test0 (theano.misc.tests.test_pkl_utils.TestStripPickler) ... ok
#354 Failure: SkipTest (Pycuda not installed. Skip test of theano op with pycuda code.) ... SKIP: Pycuda not installed. Skip test of theano op with pycuda code.
#355 Failure: SkipTest (Pycuda not installed. We skip tests of Theano Ops with pycuda code.) ... SKIP: Pycuda not installed. We skip tests of Theano Ops with pycuda code.
#356 Failure: SkipTest (Pycuda not installed. Skip test of theano op with pycuda code.) ... SKIP: Pycuda not installed. Skip test of theano op with pycuda code.
#3882 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3883 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3884 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3885 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3886 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3887 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#683 Failure: SkipTest (Optional package cuda not available) ... SKIP: Optional package cuda not available
#3888 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3889 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3890 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#747 Failure: SkipTest (Optional package cuda not available) ... SKIP: Optional package cuda not available
#3891 Failure: SkipTest (Optional package cuda not available) ... SKIP: Optional package cuda not available
#3892 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3893 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3894 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3895 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3896 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3897 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3898 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3899 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3900 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#3901 Failure: SkipTest (Optional package cuda disabled) ... SKIP: Optional package cuda disabled
#871 theano.sandbox.cuda.tests.test_viewop.test_viewop_gpu ... SKIP: Optional package cuda disabled
#872 theano.sandbox.linalg.tests.test_linalg.test_rop_lop ... ok
#873 theano.sandbox.linalg.tests.test_linalg.test_spectral_radius_bound ... ok
#874 theano.sandbox.linalg.tests.test_linalg.test_transinv_to_invtrans ... ok
#875 theano.sandbox.linalg.tests.test_linalg.test_tag_solve_triangular ... ok
#876 theano.sandbox.linalg.tests.test_linalg.test_matrix_inverse_solve ... ok
#877 theano.sandbox.tests.test_multinomial.test_n_samples_1 ... ok
#878 theano.sandbox.tests.test_multinomial.test_n_samples_2 ... ok
#879 This test checks if the new change to MultinomialFromUniform is still compatible ... ok
#880 theano.sandbox.tests.test_multinomial.test_multinomial_0 ... ok
#881 theano.sandbox.tests.test_multinomial.test_multinomial_large ... ok
#882 theano.sandbox.tests.test_multinomial.test_multinomial_dtypes ... ok
#883 theano.sandbox.tests.test_multinomial.test_gpu_opt ... SKIP: Optional package cuda not available
#884 Tests that MultinomialWOReplacementFromUniform fails when asked to sample more ... ok
#885 Tests that MultinomialWOReplacementFromUniform always selects distinct elements ... ok
#886 Tests that MultinomialWOReplacementFromUniform selects elements, on average, ... ok
#887 Tests that multinomial_wo_replacement fails when asked to sample more ... ok
#888 Tests that multinomial_wo_replacement always selects distinct elements ... ok
#889 Tests that multinomial_wo_replacement selects elements, on average, ... ok
#890 Failure: GpuArrayException (Unknown device error: -1) ... ERROR
#891 test_straightforward (theano.scalar.tests.test_basic.test_ScalarOps) ... ok
#892 test_fail (theano.scalar.tests.test_basic.test_complex_mod) ... ok
#893 test_composite_clone_float32 (theano.scalar.tests.test_basic.test_composite) ... ok
#894 test_composite_printing (theano.scalar.tests.test_basic.test_composite) ... ok
#895 test_flatten (theano.scalar.tests.test_basic.test_composite) ... ok
#896 test_make_node_continue_graph (theano.scalar.tests.test_basic.test_composite) ... ok
#897 test_many_outputs (theano.scalar.tests.test_basic.test_composite) ... ok
#898 test_straightforward (theano.scalar.tests.test_basic.test_composite) ... ok
#899 test_with_constants (theano.scalar.tests.test_basic.test_composite) ... ok
#900 test_0 (theano.scalar.tests.test_basic.test_div) ... ok
#901 test_and (theano.scalar.tests.test_basic.test_logical) ... ok
#902 test_eq (theano.scalar.tests.test_basic.test_logical) ... ok
#903 test_ge (theano.scalar.tests.test_basic.test_logical) ... ok
#904 test_gt (theano.scalar.tests.test_basic.test_logical) ... ok
#905 test_le (theano.scalar.tests.test_basic.test_logical) ... ok
#906 test_lt (theano.scalar.tests.test_basic.test_logical) ... ok
#907 test_neq (theano.scalar.tests.test_basic.test_logical) ... ok
#908 test_not (theano.scalar.tests.test_basic.test_logical) ... ok
#909 test_or (theano.scalar.tests.test_basic.test_logical) ... ok
#910 test_xor (theano.scalar.tests.test_basic.test_logical) ... ok
#911 test_arctan2 ... ok
#912 theano.scalar.tests.test_basic.test_upgrade_to_float.test_true_div ... ok
#913 test_inv ... ok
   test_sqrt ... ok
   test_log ... ok
   test_log2 ... ok
   test_log10 ... ok
   test_log1p ... ok
   test_exp ... ok
   test_exp2 ... ok
   test_expm1 ... ok
   test_deg2rad ... ok
   test_rad2deg ... ok
   test_cos ... ok
   test_arccos ... ok
   test_cosh ... ok
   test_arccosh ... ok
   test_sin ... ok
   test_arcsin ... ok
   test_sinh ... ok
   test_arcsinh ... ok
   test_tan ... ok
   test_arctan ... ok
   test_tanh ... ok
   test_arctanh ... ok
#914 theano.scalar.tests.test_basic.test_grad_gt ... ok
#915 theano.scalar.tests.test_basic.test_grad_switch ... ok
#916 theano.scalar.tests.test_basic.test_grad_identity ... ok
#917 theano.scalar.tests.test_basic.test_grad_inrange ... ok
#918 theano.scalar.tests.test_basic.test_grad_abs ... ok
#919 theano.scalar.tests.test_basic.test_constant ... ok
#920 Failure: SkipTest (optional package sympy disabled) ... SKIP: optional package sympy disabled
#921 test_divide_floats (theano.scalar.tests.test_div_future.test_FutureDiv) ... ok
#922 test_divide_floats (theano.scalar.tests.test_div_no_future.test_FutureDiv) ... ok
#923 test_alloc_inputs1 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#924 test_alloc_inputs2 (theano.scan_module.tests.test_scan.T_Scan) ... SKIP: This tests depends on an optimization for scan that has not been implemented yet.
#925 test_alloc_inputs3 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#926 test_backwards (theano.scan_module.tests.test_scan.T_Scan) ... ok
#927 test_borrow_bug_jeremiah (theano.scan_module.tests.test_scan.T_Scan) ... ok
#928 test_bugFunctioProvidesIntermediateNodesAsInputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#929 test_clone (theano.scan_module.tests.test_scan.T_Scan) ... ok
#930 test_cloning_no_replace_strict_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#931 test_cloning_no_replace_strict_not_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#932 test_cloning_replace_not_strict_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#933 test_cloning_replace_not_strict_not_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#934 test_cloning_replace_strict_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#935 test_cloning_replace_strict_not_copy_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#936 test_computing_gradient (theano.scan_module.tests.test_scan.T_Scan) ... ok
#937 Test connection_pattern() in the presence of recurrent outputs ... ok
#938 test_connection_pattern2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#939 test_crash_nonseq_grad (theano.scan_module.tests.test_scan.T_Scan) ... ok
#940 test_disconnected_gradient (theano.scan_module.tests.test_scan.T_Scan) ... ok
#941 test_disconnected_gradient2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#942 test_disconnected_gradient3 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#943 test_dot_optimization (theano.scan_module.tests.test_scan.T_Scan) ... ok
#944 test_draw_as_input_to_scan (theano.scan_module.tests.test_scan.T_Scan) ... ok
#945 test_eliminate_nonseqs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#946 test_eliminate_seqs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#947 test_foldl_memory_consumption (theano.scan_module.tests.test_scan.T_Scan) ... ok
#948 test_foldr_memory_consumption (theano.scan_module.tests.test_scan.T_Scan) ... ok
#949 test_generator_one_output_scalar (theano.scan_module.tests.test_scan.T_Scan) ... ok
#950 test_gibbs_chain (theano.scan_module.tests.test_scan.T_Scan) ... ok
#951 test_grad_bug_disconnected_input (theano.scan_module.tests.test_scan.T_Scan) ... ok
#952 test_grad_connectivity_matrix (theano.scan_module.tests.test_scan.T_Scan) ... ok
#953 test_grad_dtype_change (theano.scan_module.tests.test_scan.T_Scan) ... ok
#954 test_grad_duplicate_outputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#955 test_grad_duplicate_outputs_connection_pattern (theano.scan_module.tests.test_scan.T_Scan) ... ok
#956 test_grad_find_input (theano.scan_module.tests.test_scan.T_Scan) ... ok
#957 test_grad_grad_mitsot_sitsot (theano.scan_module.tests.test_scan.T_Scan) ... ok
#958 test_grad_multiple_outs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#959 test_grad_multiple_outs_some_disconnected (theano.scan_module.tests.test_scan.T_Scan) ... ok
#960 test_grad_multiple_outs_some_disconnected_2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#961 test_grad_multiple_outs_some_truncate (theano.scan_module.tests.test_scan.T_Scan) ... ok
#962 test_grad_multiple_outs_some_uncomputable (theano.scan_module.tests.test_scan.T_Scan) ... ok
#963 test_grad_multiple_outs_taps (theano.scan_module.tests.test_scan.T_Scan) ... .
.
.
ok
#964 test_grad_multiple_outs_taps_backwards (theano.scan_module.tests.test_scan.T_Scan) ... ok
#965 test_grad_multiple_seqs_different_nsteps (theano.scan_module.tests.test_scan.T_Scan) ... ok
#966 test_grad_multiple_taps_state (theano.scan_module.tests.test_scan.T_Scan) ... ok
#967 test_grad_numeric_shared (theano.scan_module.tests.test_scan.T_Scan) ... ok
#968 test_grad_of_grad_of_state (theano.scan_module.tests.test_scan.T_Scan) ... ok
#969 test_grad_of_shared (theano.scan_module.tests.test_scan.T_Scan) ... ok
#970 test_grad_one_output (theano.scan_module.tests.test_scan.T_Scan) ... ok
#971 test_grad_two_scans (theano.scan_module.tests.test_scan.T_Scan) ... ok
#972 test_hash (theano.scan_module.tests.test_scan.T_Scan) ... ok
#973 test_hessian_bug_grad_grad_two_scans (theano.scan_module.tests.test_scan.T_Scan) ... .
ok
#974 test_infer_shape (theano.scan_module.tests.test_scan.T_Scan) ... ok
#975 test_infer_shape2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#976 test_infershape_nsteps_smaller_seq_length (theano.scan_module.tests.test_scan.T_Scan) ... ok
#977 test_infershape_seq_shorter_nsteps (theano.scan_module.tests.test_scan.T_Scan) ... SKIP: This is a generic problem with infershape that has to be discussed and figured out
#978 test_inner_storage_leak (theano.scan_module.tests.test_scan.T_Scan) ... ok
#979 test_inplace1 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#980 test_inplace2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#981 test_inplace3 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#982 test_map (theano.scan_module.tests.test_scan.T_Scan) ... ok
#983 test_map_functionality (theano.scan_module.tests.test_scan.T_Scan) ... ok
#984 test_memory_aliasing_updates (theano.scan_module.tests.test_scan.T_Scan) ... ok
#985 test_memory_reuse_with_outputs_as_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#986 test_merge (theano.scan_module.tests.test_scan.T_Scan) ... ok
#987 test_merge_3scans (theano.scan_module.tests.test_scan.T_Scan) ... ok
#988 test_monitor_mode (theano.scan_module.tests.test_scan.T_Scan) ... ok
#989 test_multiple_inputs_multiple_outputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#990 test_multiple_outs_taps (theano.scan_module.tests.test_scan.T_Scan) ... ok
#991 test_oinp_iinp_iout_oout_mappings (theano.scan_module.tests.test_scan.T_Scan) ... ok
#992 test_one_sequence_one_output_weights (theano.scan_module.tests.test_scan.T_Scan) ... ok
#993 test_one_sequence_one_output_weights_shared (theano.scan_module.tests.test_scan.T_Scan) ... ok
#994 test_only_nonseq_inputs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#995 test_only_shared_no_input_no_output (theano.scan_module.tests.test_scan.T_Scan) ... ok
#996 Verify that scan optimizations are applied before blas ... ok
#997 test_outputs_info_not_typed (theano.scan_module.tests.test_scan.T_Scan) ... SKIP: Skipping test: test_outputs_info_not_typed: This test fails because not typed outputs_info are always gived the smallest dtype. There is no upcast of outputs_info in scan for now.
#998 test_past_future_taps_shared (theano.scan_module.tests.test_scan.T_Scan) ... ok
#999 test_pickling (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1000 test_pregreedy_optimizer (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1001 test_pushout (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1002 test_pushout_all (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1003 test_pushout_dot (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1004 test_pushout_nomodif (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1005 test_pushout_nonseq (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1006 test_pushout_seqs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1007 test_pushout_seqs2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1008 test_pushout_while (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1009 test_reduce (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1010 test_reduce_memory_consumption (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1011 test_remove_constants_and_unused_inputs_scan_non_seqs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1012 test_remove_constants_and_unused_inputs_scan_seqs (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1013 test_remove_stuff (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1014 test_reordering (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1015 test_return_steps (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1016 test_rop (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1017 test_rop2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1018 test_rop_mitmot (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1019 test_same (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1020 test_save_mem (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1021 test_save_mem_reduced_number_of_steps (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1022 test_save_mem_store_steps (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1023 test_savemem_does_not_duplicate_number_of_scan_nodes (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1024 test_savemem_opt (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1025 test_savemem_opt_0_step (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1026 Bug reported by cityhall on scan when computing the gradients ... ok
#1027 test_scan_extra_inputs_hessian (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1028 test_scan_merge_nodes (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1029 Scan outputs are usually lists, whose entries correspond to the ... ok
#1030 test_seq_tap_bug_jeremiah (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1031 test_sequence_dict (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1032 test_shared_arguments_with_updates (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1033 test_shared_updates (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1034 test_simple_shared_mrg_random (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1035 test_simple_shared_random (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1036 test_strict_mode (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1037 test_strict_mode_ex (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1038 test_subtensor_multiple_slices (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1039 test_use_scan_direct_output (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1040 test_use_scan_direct_output2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1041 test_using_negative_taps_sequence (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1042 test_using_taps_input_output (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1043 test_using_taps_sequence (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1044 test_verify_second_grad_mitsot1 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1045 test_verify_second_grad_sitsot (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1046 test_while0 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1047 test_while1 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1048 test_while2 (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1049 test_while_infershape (theano.scan_module.tests.test_scan.T_Scan) ... ok
#1050 test_consistent_inner_fct (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1051 test_gibbs_chain (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1052 test_gpu3_mixture_dtype_outputs (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1053 test_gpu_memory_usage (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1054 test_inconsistent_inner_fct (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1055 test_memory_reuse_gpudimshuffle (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1056 test_one_sequence_one_output_weights_gpu1 (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1057 test_one_sequence_one_output_weights_gpu2 (theano.scan_module.tests.test_scan.T_Scan_Cuda) ... SKIP: Optional package cuda disabled
#1058 test_gibbs_chain (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1059 test_gpu3_mixture_dtype_outputs (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1060 test_gpu_memory_usage (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1061 test_memory_reuse_gpudimshuffle (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1062 test_one_sequence_one_output_weights_gpu1 (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1063 test_one_sequence_one_output_weights_gpu2 (theano.scan_module.tests.test_scan.T_Scan_Gpuarray) ... SKIP: Optional package pygpu disabled
#1064 theano.scan_module.tests.test_scan.test_speed ... ok
#1065 theano.scan_module.tests.test_scan.test_speed_rnn ... ok
#1066 theano.scan_module.tests.test_scan.test_speed_batchrnn ... ok
#1067 theano.scan_module.tests.test_scan.test_compute_test_value ... ok
#1068 theano.scan_module.tests.test_scan.test_compute_test_value_nonseq ... ok
#1069 theano.scan_module.tests.test_scan.test_compute_test_value_grad ... ok
#1070 theano.scan_module.tests.test_scan.test_compute_test_value_grad_cast ... ok
#1071 theano.scan_module.tests.test_scan.test_constant_folding_n_steps ... ok
#1072 Checks that errors are raised with bad output_info taps. ... ok
#1073 theano.scan_module.tests.test_scan.test_default_value_broadcasted ... ok
#1074 Test gradient computation of A**k. ... ok
#1075 Test forward computation of A**k. ... ok
#1076 Test that scan_checkpoint reduces memory usage. ... ok
#1077 Test that an error rises if we use taps in outputs_info. ... ok
#1078 test_batch (theano.scan_module.tests.test_scan_opt.TestGaussNewton) ... ok
#1079 test_nobatch (theano.scan_module.tests.test_scan_opt.TestGaussNewton) ... ok
#1080 Test the case where the vector input to the dot is already a nitsot ... ok
#1081 Test the case where the vector input to the dot is not already an ... ok
#1082 Test the case where the vector input to the dot is not already a ... ok
#1083 This test case comes from https://github.com/rizar/scan-grad-speed and ... ok
#1084 Test the case where the initial value for the nitsot output is ... ok
#1085 test_leaf (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1086 test_leaf_inside_scan (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1087 test_opfromgraph (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1088 test_scan (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1089 test_scan_with_shared_update (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1090 test_scan_with_shared_update2 (theano.scan_module.tests.test_scan_utils.TestMapVariables) ... ok
#1091 theano.scan_module.tests.test_scan_utils.test_equal_compuations ... ok
#1092 test_convolution (theano.sparse.sandbox.test_sp.TestSP) ... ok
#1093 test_maxpool (theano.sparse.sandbox.test_sp.TestSP) ... ok
#1094 test_multilayer_conv (theano.sparse.sandbox.test_sp.TestSP) ... ok
#1095 test_grad (theano.sparse.tests.test_basic.AddSSDataTester) ... ok
#1096 test_infer_shape (theano.sparse.tests.test_basic.AddSSDataTester) ... ok
#1097 test_op (theano.sparse.tests.test_basic.AddSSDataTester) ... ok
#1098 test_grad (theano.sparse.tests.test_basic.ArcsinTester) ... ok
#1099 test_op (theano.sparse.tests.test_basic.ArcsinTester) ... ok
#1100 test_grad (theano.sparse.tests.test_basic.ArcsinhTester) ... ok
#1101 test_op (theano.sparse.tests.test_basic.ArcsinhTester) ... ok
#1102 test_grad (theano.sparse.tests.test_basic.ArctanTester) ... ok
#1103 test_op (theano.sparse.tests.test_basic.ArctanTester) ... ok
#1104 test_grad (theano.sparse.tests.test_basic.ArctanhTester) ... ok
#1105 test_op (theano.sparse.tests.test_basic.ArctanhTester) ... ok
#1106 test_cast (theano.sparse.tests.test_basic.CastTester) ... /home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/scipy/sparse/data.py:61: ComplexWarning: Casting complex values to real discards the imaginary part
  return self._with_data(self.data.astype(t))
/home/staff/inga/.local/lib/python2.7/site-packages/theano/sparse/tests/test_basic.py:2434: ComplexWarning: Casting complex values to real discards the imaginary part
  expected = data.toarray().astype(o_dtype)
ok
#1107 test_grad (theano.sparse.tests.test_basic.CastTester) ... ok
#1108 test_infer_shape (theano.sparse.tests.test_basic.CastTester) ... ok
#1109 test_op (theano.sparse.tests.test_basic.CeilTester) ... ok
#1110 test_grad (theano.sparse.tests.test_basic.CleanTester) ... ok
#1111 test_op (theano.sparse.tests.test_basic.CleanTester) ... /home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/scipy/sparse/compressed.py:730: SparseEfficiencyWarning: Changing the sparsity structure of a csc_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/scipy/sparse/compressed.py:730: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
ok
#1112 test_grad (theano.sparse.tests.test_basic.ColScaleCSCTester) ... ok
#1113 test_infer_shape (theano.sparse.tests.test_basic.ColScaleCSCTester) ... ok
#1114 test_op (theano.sparse.tests.test_basic.ColScaleCSCTester) ... ok
#1115 test_op (theano.sparse.tests.test_basic.ConjTester) ... ok
#1116 test_grad (theano.sparse.tests.test_basic.Deg2radTester) ... ok
#1117 test_op (theano.sparse.tests.test_basic.Deg2radTester) ... ok
#1118 test_grad (theano.sparse.tests.test_basic.DiagTester) ... ok
#1119 test_infer_shape (theano.sparse.tests.test_basic.DiagTester) ... ok
#1120 test_op (theano.sparse.tests.test_basic.DiagTester) ... ok
#1121 test_csc_dense (theano.sparse.tests.test_basic.DotTests) ... ok
#1122 test_csr_dense (theano.sparse.tests.test_basic.DotTests) ... ok
#1123 test_csr_dense_grad (theano.sparse.tests.test_basic.DotTests) ... ok
#1124 test_cuda (theano.sparse.tests.test_basic.DotTests) ... SKIP: Optional package cuda not available
#1125 test_int32_dtype (theano.sparse.tests.test_basic.DotTests) ... ok
#1126 test_sparse_sparse (theano.sparse.tests.test_basic.DotTests) ... ok
#1127 test_grad (theano.sparse.tests.test_basic.EnsureSortedIndicesTester) ... ok
#1128 test_infer_shape (theano.sparse.tests.test_basic.EnsureSortedIndicesTester) ... ok
#1129 test_op (theano.sparse.tests.test_basic.EnsureSortedIndicesTester) ... ok
#1130 test_grad (theano.sparse.tests.test_basic.Expm1Tester) ... ok
#1131 test_op (theano.sparse.tests.test_basic.Expm1Tester) ... ok
#1132 test_op (theano.sparse.tests.test_basic.FloorTester) ... ok
#1133 test_grad (theano.sparse.tests.test_basic.HStackTester) ... ok
#1134 test_infer_shape (theano.sparse.tests.test_basic.HStackTester) ... ok
#1135 test_op (theano.sparse.tests.test_basic.HStackTester) ... ok
#1136 test_grad (theano.sparse.tests.test_basic.Log1pTester) ... ok
#1137 test_op (theano.sparse.tests.test_basic.Log1pTester) ... ok
#1138 test_mul_s_v (theano.sparse.tests.test_basic.MulSVTester) ... ok
#1139 test_mul_s_v_grad (theano.sparse.tests.test_basic.MulSVTester) ... ok
#1140 test_grad (theano.sparse.tests.test_basic.Rad2degTester) ... ok
#1141 test_op (theano.sparse.tests.test_basic.Rad2degTester) ... ok
#1142 test_grad (theano.sparse.tests.test_basic.Remove0Tester) ... ok
#1143 test_infer_shape (theano.sparse.tests.test_basic.Remove0Tester) ... ok
#1144 test_remove0 (theano.sparse.tests.test_basic.Remove0Tester) ... ok
#1145 test_op (theano.sparse.tests.test_basic.RintTester) ... ok
#1146 test_grad (theano.sparse.tests.test_basic.RowScaleCSCTester) ... ok
#1147 test_infer_shape (theano.sparse.tests.test_basic.RowScaleCSCTester) ... ok
#1148 test_op (theano.sparse.tests.test_basic.RowScaleCSCTester) ... ok
#1149 test_grad (theano.sparse.tests.test_basic.SamplingDotTester) ... ok
#1150 test_infer_shape (theano.sparse.tests.test_basic.SamplingDotTester) ... ok
#1151 test_op (theano.sparse.tests.test_basic.SamplingDotTester) ... ok
#1152 test_op (theano.sparse.tests.test_basic.SgnTester) ... ok
#1153 test_grad (theano.sparse.tests.test_basic.SinTester) ... ok
#1154 test_op (theano.sparse.tests.test_basic.SinTester) ... ok
#1155 test_grad (theano.sparse.tests.test_basic.SinhTester) ... ok
#1156 test_op (theano.sparse.tests.test_basic.SinhTester) ... ok
#1157 test_grad (theano.sparse.tests.test_basic.SpSumTester) ... ok
#1158 test_infer_shape (theano.sparse.tests.test_basic.SpSumTester) ... ok
#1159 test_op (theano.sparse.tests.test_basic.SpSumTester) ... ok
#1160 test_add_sd (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1161 test_add_ss (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1162 test_csm (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1163 test_csm_grad (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1164 test_dense_from_sparse (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1165 test_dot (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1166 test_getitem_2d (theano.sparse.tests.test_basic.SparseInferShapeTester) ... SKIP: infer_shape not implemented for GetItem2d yet
#1167 test_getitem_scalar (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1168 test_mul_sd (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1169 test_mul_ss (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1170 test_neg (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1171 test_remove0 (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1172 test_sparse_from_dense (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1173 test_sparse_from_list (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1174 test_structured_dot (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1175 test_structured_dot_grad (theano.sparse.tests.test_basic.SparseInferShapeTester) ... SKIP: infer_shape not implemented for the grad of structured_dot
#1176 test_transpose (theano.sparse.tests.test_basic.SparseInferShapeTester) ... ok
#1177 test_grad (theano.sparse.tests.test_basic.SqrTester) ... ok
#1178 test_op (theano.sparse.tests.test_basic.SqrTester) ... ok
#1179 test_grad (theano.sparse.tests.test_basic.SqrtTester) ... ok
#1180 test_op (theano.sparse.tests.test_basic.SqrtTester) ... ok
#1181 test_grad (theano.sparse.tests.test_basic.SquareDiagonalTester) ... ok
#1182 test_infer_shape (theano.sparse.tests.test_basic.SquareDiagonalTester) ... ok
#1183 test_op (theano.sparse.tests.test_basic.SquareDiagonalTester) ... ok
#1184 test_structured_add_s_v (theano.sparse.tests.test_basic.StructuredAddSVTester) ... ok
#1185 test_structured_add_s_v_grad (theano.sparse.tests.test_basic.StructuredAddSVTester) ... ok
#1186 test_grad (theano.sparse.tests.test_basic.StructuredAddTester) ... ok
#1187 test_op (theano.sparse.tests.test_basic.StructuredAddTester) ... ok
#1188 test_grad (theano.sparse.tests.test_basic.StructuredExpTester) ... ok
#1189 test_op (theano.sparse.tests.test_basic.StructuredExpTester) ... ok
#1190 test_grad (theano.sparse.tests.test_basic.StructuredLogTester) ... ok
#1191 test_op (theano.sparse.tests.test_basic.StructuredLogTester) ... ok
#1192 test_grad (theano.sparse.tests.test_basic.StructuredMaximumTester) ... ok
#1193 test_op (theano.sparse.tests.test_basic.StructuredMaximumTester) ... ok
#1194 test_grad (theano.sparse.tests.test_basic.StructuredMinimumTester) ... ok
#1195 test_op (theano.sparse.tests.test_basic.StructuredMinimumTester) ... ok
#1196 test_grad (theano.sparse.tests.test_basic.StructuredPowTester) ... ok
#1197 test_op (theano.sparse.tests.test_basic.StructuredPowTester) ... ok
#1198 test_grad (theano.sparse.tests.test_basic.StructuredSigmoidTester) ... ok
#1199 test_op (theano.sparse.tests.test_basic.StructuredSigmoidTester) ... ok
#1200 testAddDS (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1201 testAddSD (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1202 testAddSS (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1203 testMulDS (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1204 testMulSD (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1205 testMulSS (theano.sparse.tests.test_basic.T_AddMul) ... ok
#1206 test_dense_from_sparse (theano.sparse.tests.test_basic.T_conversion) ... ok
#1207 test_format_ndim (theano.sparse.tests.test_basic.T_conversion) ... ok
#1208 test_todense (theano.sparse.tests.test_basic.T_conversion) ... ok
#1209 test_transpose_csc (theano.sparse.tests.test_basic.T_transpose) ... ok
#1210 test_transpose_csr (theano.sparse.tests.test_basic.T_transpose) ... ok
#1211 test_grad_fail (theano.sparse.tests.test_basic.T_verify_grad_sparse) ... ok
#1212 test_grad (theano.sparse.tests.test_basic.TanTester) ... ok
#1213 test_op (theano.sparse.tests.test_basic.TanTester) ... ok
#1214 test_grad (theano.sparse.tests.test_basic.TanhTester) ... ok
#1215 test_op (theano.sparse.tests.test_basic.TanhTester) ... ok
#1216 test_adv_sub1_sparse_grad (theano.sparse.tests.test_basic.TestConstructSparseFromList) ... ok
#1217 test_err (theano.sparse.tests.test_basic.TestConstructSparseFromList) ... ok
#1218 test_GetItem2D (theano.sparse.tests.test_basic.Test_getitem) ... /home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/scipy/sparse/csr.py:282: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
  col.step in (1, None) and
SKIP: Slicing with step is supported.
#1219 test_GetItem2Lists (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1220 test_GetItem2Lists_wrong_index (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1221 test_GetItemList (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1222 test_GetItemList_wrong_index (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1223 test_GetItemScalar (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1224 test_get_item_2lists_grad (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1225 test_get_item_list_grad (theano.sparse.tests.test_basic.Test_getitem) ... ok
#1226 test_grad (theano.sparse.tests.test_basic.TrueDotTester) ... ok
#1227 test_infer_shape (theano.sparse.tests.test_basic.TrueDotTester) ... ok
#1228 test_op_sd (theano.sparse.tests.test_basic.TrueDotTester) ... ok
#1229 test_op_ss (theano.sparse.tests.test_basic.TrueDotTester) ... ok
#1230 test_grad (theano.sparse.tests.test_basic.TruncTester) ... ok
#1231 test_op (theano.sparse.tests.test_basic.TruncTester) ... ok
#1232 test (theano.sparse.tests.test_basic.UsmmTests) ... ok
#1233 test_infer_shape (theano.sparse.tests.test_basic.UsmmTests) ... ok
#1234 test_grad (theano.sparse.tests.test_basic.VStackTester) ... ok
#1235 test_infer_shape (theano.sparse.tests.test_basic.VStackTester) ... ok
#1236 test_op (theano.sparse.tests.test_basic.VStackTester) ... ok
#1237 test_ds_csc_comparison (theano.sparse.tests.test_basic.test_comparison) ... ok
#1238 test_ds_csr_comparison (theano.sparse.tests.test_basic.test_comparison) ... ok
#1239 Test assuring normal behaviour when values ... ok
#1240 test_sd_csc_comparison (theano.sparse.tests.test_basic.test_comparison) ... ok
#1241 test_sd_csr_comparison (theano.sparse.tests.test_basic.test_comparison) ... ok
#1242 test_ss_csc_comparison (theano.sparse.tests.test_basic.test_comparison) ... /home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/scipy/sparse/compressed.py:296: SparseEfficiencyWarning: Comparing sparse matrices using >= and <= is inefficient, using <, >, or !=, instead.
  "using <, >, or !=, instead.", SparseEfficiencyWarning)
ok
#1243 test_ss_csr_comparison (theano.sparse.tests.test_basic.test_comparison) ... ok
#1244 test_csm (theano.sparse.tests.test_basic.test_csm) ... ok
#1245 test_csm_grad (theano.sparse.tests.test_basic.test_csm) ... ok
#1246 Test support for gradients sparser than the input. ... ok
#1247 Test support for gradients of unsorted inputs. ... ok
#1248 test_csm_properties (theano.sparse.tests.test_basic.test_csm_properties) ... ok
#1249 test_csm_properties_grad (theano.sparse.tests.test_basic.test_csm_properties) ... ok
#1250 Test that get_value return the same type as what was gived when creating the shared variable ... ok
#1251 We test that if the SharedVariable implement it we do inplace set_value ... ok
#1252 test_return_internal_type (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1253 test_set_value (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1254 test_shape (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1255 test_shape_i (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1256 test_shared_do_alias (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1257 test_shared_dont_alias (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1258 test_specify_shape (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1259 test_specify_shape_inplace (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1260 test_specify_shape_partial (theano.sparse.tests.test_basic.test_shared_options) ... ok
#1261 Test the type.values_eq[_approx] function ... ok
#1262 test_csc_correct_output_faster_than_scipy (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1263 test_csr_correct_output_faster_than_scipy (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1264 test_dot_sparse_sparse (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1265 test_opt_unpack (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1266 test_structureddot_csc_grad (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1267 test_structureddot_csr_grad (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1268 test_upcast (theano.sparse.tests.test_basic.test_structureddot) ... ok
#1269 test (theano.sparse.tests.test_basic.test_zeros_like) ... ok
#1270 theano.sparse.tests.test_basic.test_shape_i ... ok
#1271 theano.sparse.tests.test_basic.test_shape ... ok
#1272 theano.sparse.tests.test_basic.test_may_share_memory ... ok
#1273 theano.sparse.tests.test_basic.test_sparse_shared_memory ... ok
#1274 Ensure the `size` attribute of sparse matrices behaves as in numpy. ... ok
#1275 Tests sparse.hstack and sparse.vstack (as opposed to the HStack and VStack ... ok
#1276 theano.sparse.tests.test_opt.test_local_csm_properties_csm ... ok
#1277 theano.sparse.tests.test_opt.test_local_csm_grad_c ... SKIP: Opt disabled as it don't support unsorted indices
#1278 theano.sparse.tests.test_opt.test_local_mul_s_d ... ok
#1279 theano.sparse.tests.test_opt.test_local_mul_s_v ... ok
#1280 theano.sparse.tests.test_opt.test_local_structured_add_s_v ... ok
#1281 theano.sparse.tests.test_opt.test_local_sampling_dot_csr ... ok
#1282 theano.sparse.tests.test_opt.test_local_dense_from_sparse_sparse_from_dense ... ok
#1283 theano.sparse.tests.test_opt.test_sd_csc ... ok
#1284 test_infer_shape (theano.sparse.tests.test_sp2.BinomialTester) ... ok
#1285 test_op (theano.sparse.tests.test_sp2.BinomialTester) ... ok
#1286 test_infer_shape (theano.sparse.tests.test_sp2.MultinomialTester) ... ok
#1287 test_op (theano.sparse.tests.test_sp2.MultinomialTester) ... ok
#1288 test_infer_shape (theano.sparse.tests.test_sp2.PoissonTester) ... ok
#1289 test_op (theano.sparse.tests.test_sp2.PoissonTester) ... ok
#1290 theano.sparse.tests.test_type.test_sparse_type ... ok
#1291 theano.sparse.tests.test_utils.test_hash_from_sparse ... ok
#1292 theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
#1293 theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'full', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'full', True, True, (1, 1), False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'full', True, True, (1, 1), True) ... ok
#1294 theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestAbstractConvNoOptim.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 3) ... ok
#1295 test_basic (theano.tensor.nnet.tests.test_abstract_conv.TestAssertConvShape) ... ok
#1296 test_basic (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1297 test_shape_check_conv2d (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1298 test_shape_check_conv2d_grad_wrt_inputs (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1299 test_shape_check_conv2d_grad_wrt_weights (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1300 test_shape_check_conv3d (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1301 test_shape_check_conv3d_grad_wrt_inputs (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1302 test_shape_check_conv3d_grad_wrt_weights (theano.tensor.nnet.tests.test_abstract_conv.TestAssertShape) ... ok
#1303 Test 1D kernels used in bilinear upsampling ... ok
#1304 Test 2D kernels used in bilinear upsampling ... ok
#1305 Test bilinear upsampling using 1D kernels ... ok
#1306 test_bilinear_upsampling_reshaping (theano.tensor.nnet.tests.test_abstract_conv.TestBilinearUpsampling) ... ok
#1307 Compare 1D and 2D upsampling ... ok
#3902 Test conv2d_transpose wrapper. ... ok
#1308 test_check_shape (theano.tensor.nnet.tests.test_abstract_conv.TestConvGradInputsShape) ... ok
#1309 test_get_shape (theano.tensor.nnet.tests.test_abstract_conv.TestConvGradInputsShape) ... ok
#1310 test_constant_input (theano.tensor.nnet.tests.test_abstract_conv.TestConvTypes) ... ok
#1311 test_grad_types (theano.tensor.nnet.tests.test_abstract_conv.TestConvTypes) ... ok
#1312 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((0, 1, 6, 6), (1, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((0, 1, 6, 6), (1, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 0, 6, 6), (1, 0, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 0, 6, 6), (1, 0, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 1, 6, 6), (0, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_all((1, 1, 6, 6), (0, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
#1313 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'full', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'full', True, True, (1, 1), False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'valid', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'full', True, True, (1, 1), True) ... ok
#1314 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 3) ... ok
#1315 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (1, 2, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (2, 1, 2)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((0, 1, 5, 5, 5), (1, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((0, 1, 5, 5, 5), (1, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 0, 5, 5, 5), (1, 0, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 0, 5, 5, 5), (1, 0, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 1, 5, 5, 5), (0, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_all((1, 1, 5, 5, 5), (0, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... ok
#1316 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'full', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'full', True, True, (1, 1, 1), False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'full', True, True, (1, 1, 1), True) ... ok
#1317 theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'valid', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'valid', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'half', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'full', 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 3) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, (0, 2, 1), 2) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, (0, 2, 1), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCorrConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 3) ... ok
#1318 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 6, 6), (5, 1, 2, 2), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((8, 1, 8, 8), (4, 1, 3, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 7, 7), (2, 1, 3, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((6, 1, 10, 11), (1, 1, 2, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((2, 1, 6, 5), (4, 1, 1, 3), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (1, 2)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 2), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'valid', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'half', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), 'full', True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (0, 0), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (1, 1), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 5), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (2, 4), (5, 2), True, True, (2, 1)) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 5, 9, 9), (4, 5, 3, 2), (1, 1), (0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((0, 1, 6, 6), (1, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((0, 1, 6, 6), (1, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 0, 6, 6), (1, 0, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 0, 6, 6), (1, 0, 2, 2), (1, 1), (0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 1, 6, 6), (0, 1, 2, 2), (1, 1), (0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_all((1, 1, 6, 6), (0, 1, 2, 2), (1, 1), (0, 0), True, False) ... ok
#1319 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'valid', True, True, (1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 8, 8), (1, 1), 'full', True, True, (1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'valid', True, True, (1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 9, 9), (1, 1), 'full', True, True, (1, 1), False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'valid', True, True, (1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'half', True, True, (1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7), (2, 1, 3, 3), (2, 2, 12, 12), (1, 1), 'full', True, True, (1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
#1320 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 1, 1), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 1, 1), (1, 1, 2, 2), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 2, 2), (1, 1, 1, 1), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 2, 2), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 4, 4), (1, 1, 3, 3), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 7, 7), (1, 1, 3, 3), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'valid', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'half', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 1) ... SKIP: Inconsistent shapes are not tested for old cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, 'full', 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 2, (0, 2), 2) ... SKIP: No dilation implementation for basic cpu ConvOp.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 3, (0, 2), 1) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv2d.test_gradinput_impossible_output_shapes((1, 1, 9, 9), (1, 1, 5, 5), 1, (0, 2), 3) ... SKIP: No dilation implementation for basic cpu ConvOp.
#1321 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (2, 2, 2), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 2, 3), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((2, 1, 5, 5, 5), (2, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (1, 1, 1)) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (1, 2, 1)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (2, 2, 2), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'valid', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'half', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), 'full', True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (0, 0, 0), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 2, 3), (2, 2, 3), True, True, (2, 1, 2)) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), True, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 2, 7, 5, 6), (1, 2, 2, 1, 3), (1, 1, 1), (0, 0, 0), False, True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((0, 1, 5, 5, 5), (1, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... SKIP: Not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((0, 1, 5, 5, 5), (1, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... SKIP: Not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 0, 5, 5, 5), (1, 0, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... SKIP: Not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 0, 5, 5, 5), (1, 0, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... SKIP: Not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 1, 5, 5, 5), (0, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, True) ... SKIP: Not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_all((1, 1, 5, 5, 5), (0, 1, 2, 2, 2), (1, 1, 1), (0, 0, 0), True, False) ... SKIP: Not tested for old cpu Conv3D.
#1322 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 8, 8, 8), (1, 1, 1), 'full', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 9, 9, 9), (1, 1, 1), 'full', True, True, (1, 1, 1), False) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'valid', True, True, (1, 1, 1), True) ... SKIP: Inconsistent shapes are not tested for old cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'half', True, True, (1, 1, 1), True) ... ok
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_arbitrary_output_shapes((2, 1, 7, 7, 7), (1, 1, 3, 3, 3), (2, 1, 12, 12, 12), (1, 1, 1), 'full', True, True, (1, 1, 1), True) ... ok
#1323 theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 1, 1, 1), (1, 1, 2, 2, 2), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 2, 2, 2), (1, 1, 1, 1, 1), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 2, 2, 2), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 4, 4, 4), (1, 1, 3, 3, 3), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 7, 7, 7), (1, 1, 3, 3, 3), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'valid', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'valid', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'valid', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'half', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'half', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'half', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, 'full', 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, 'full', 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, 'full', 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 2, (0, 2, 1), 2) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 3, (0, 2, 1), 1) ... SKIP: No dilation implementation for basic cpu Conv3D.
   theano.tensor.nnet.tests.test_abstract_conv.TestCpuConv3d.test_gradinput_impossible_output_shapes((1, 1, 9, 9, 9), (1, 1, 5, 5, 5), 1, (0, 2, 1), 3) ... SKIP: No dilation implementation for basic cpu Conv3D.
#1324 test_basic (theano.tensor.nnet.tests.test_abstract_conv.TestGetConvOutShape) ... ok
#1325 test_basic_3d (theano.tensor.nnet.tests.test_abstract_conv.TestGetConvOutShape) ... ok
#1326 theano.tensor.nnet.tests.test_abstract_conv.test_constant_shapes ... ok
#1327 test_dot_infershape (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1328 test_gemv_infershape (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1329 test_outer_infershape (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1330 Compares the numpy version of sparseblockgemv to sparse_block_dot. ... ok
#1331 Compares the numpy and theano versions of sparseblockgemv. ... ok
#1332 Test the fortan order for W (which can happen in the grad for some ... ok
#1333 test_sparseblockgemv_grad (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1334 test_sparseblockgemv_grad_1 (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1335 test_sparseblockgemv_grad_shape (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1336 test_sparseblockouter (theano.tensor.nnet.tests.test_blocksparse.BlockSparse_Gemv_and_Outer) ... ok
#1337 theano.tensor.nnet.tests.test_bn.test_BNComposite ... ok
#3903 theano.tensor.nnet.tests.test_bn.test_batch_normalization ... ok
#1339 theano.tensor.nnet.tests.test_bn.test_bn_feature_maps ... ok
#3904 theano.tensor.nnet.tests.test_bn.test_batch_normalization_train ... ok
#3905 theano.tensor.nnet.tests.test_bn.test_batch_normalization_train_without_running_averages ... ok
#3906 theano.tensor.nnet.tests.test_bn.test_batch_normalization_train_broadcast ... ok
#3907 theano.tensor.nnet.tests.test_bn.test_batch_normalization_test ... ok
#3908 theano.tensor.nnet.tests.test_bn.test_batch_normalization_broadcastable ... ok
#1340 Tests that basic convolutions work for odd and even ... ok
#1341 Tests that basic convolutions work for odd and even ... ok
#1342 Tests basic convolution in full mode and case where filter ... ok
#1343 gcc 4.3.0 20080428 (Red Hat 4.3.0-8) ... ok
#1344 test_img_kernel_same_shape (theano.tensor.nnet.tests.test_conv.TestConv2D) ... ok
#1345 test_infer_shape (theano.tensor.nnet.tests.test_conv.TestConv2D) ... ok
#1346 Tests scenario where filter_shape[1] != input_shape[1] ... ok
#1347 Tests that when the shape gived at build time is not the same as ... ok
#1348 Test convolutions for various pieces of missing info. ... ok
#1349 Tests convolution where the {image,filter}_shape is a Constant tensor. ... ok
#1350 Tests convolution where subsampling != (1,1) ... ok
#1351 Tests for uint datatype in filter_shape ... ok
#1352 Tests for uint datatype in image_shape. ... ok
#1353 Test mini-batch unrolling for various legal values. ... ok
#1354 Test mini-batch unrolling with kernel unrolling for various ... ok
#1355 Test mini-batch unrolling with kernel unrolling for various ... ok
#1356 Test kernel unrolling for various legal values. ... ok
#1357 Test basic convs with False. ... ok
#1358 Test basic convs with True. ... ok
#1359 Test basic convs with True. ... ok
#1360 (unroll_kern, unroll_batch) in (0,1),(1,0) is special case. ... ok
#1361 Test convolutions when we don't give a constant as shape information ... ok
#1362 Make sure errors are raised when image and kernel are not 4D tensors ... ok
#1363 Tests that basic convolutions work for odd and even ... ok
#1364 Tests that basic convolutions work for odd and even ... ok
#1365 Tests basic convolution in full mode and case where filter ... ok
#1366 gcc 4.3.0 20080428 (Red Hat 4.3.0-8) ... ok
#1367 test_img_kernel_same_shape (theano.tensor.nnet.tests.test_conv.TestDefaultConv2D) ... ok
#1368 test_infer_shape (theano.tensor.nnet.tests.test_conv.TestDefaultConv2D) ... ok
#1369 Tests scenario where filter_shape[1] != input_shape[1] ... ok
#1370 Tests that when the shape gived at build time is not the same as ... ok
#1371 Test convolutions for various pieces of missing info. ... ok
#1372 Tests convolution where the {image,filter}_shape is a Constant tensor. ... ok
#1373 Tests convolution where subsampling != (1,1) ... ok
#1374 Tests for uint datatype in filter_shape ... ok
#1375 Tests for uint datatype in image_shape. ... ok
#1376 Test mini-batch unrolling for various legal values. ... ok
#1377 Test mini-batch unrolling with kernel unrolling for various ... ok
#1378 Test mini-batch unrolling with kernel unrolling for various ... ok
#1379 Test kernel unrolling for various legal values. ... ok
#1380 Test basic convs with False. ... ok
#1381 Test basic convs with True. ... ok
#1382 Test basic convs with True. ... ok
#1383 (unroll_kern, unroll_batch) in (0,1),(1,0) is special case. ... ok
#1384 Test convolutions when we don't give a constant as shape information ... ok
#1385 Make sure errors are raised when image and kernel are not 4D tensors ... ok
#1386 theano.tensor.nnet.tests.test_conv.test_broadcast_grad ... ok
#1387 test_c_against_mat_mul (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1388 test_c_against_mat_transp_mul (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1389 test_c_against_python (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1390 test_c_against_sparse_mat_transp_mul (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1391 test_gradient (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1392 test_infer_shape (theano.tensor.nnet.tests.test_conv3d.TestConv3D) ... ok
#1393 theano.tensor.nnet.tests.test_conv3d2d.test_get_diagonal_subtensor_view ... ok
#1394 theano.tensor.nnet.tests.test_conv3d2d.test_conv3d_full ... ok
#1395 theano.tensor.nnet.tests.test_conv3d2d.test_conv3d_half ... ok
#1396 theano.tensor.nnet.tests.test_conv3d2d.test_conv3d_valid ... ok
#1397 Tests that basic correlations work for odd and even ... ok
#1398 Checks dtype upcast for CorrMM methods. ... ok
#1399 Tests correlation where filter dilation != (1,1) ... ok
#1402 Tests basic correlation in full mode and case where filter ... ok
#1403 test_img_kernel_same_shape (theano.tensor.nnet.tests.test_corr.TestCorr2D) ... ok
#1404 test_infer_shape_forward (theano.tensor.nnet.tests.test_corr.TestCorr2D) ... ok
#1405 test_infer_shape_gradI (theano.tensor.nnet.tests.test_corr.TestCorr2D) ... ok
#1406 test_infer_shape_gradW (theano.tensor.nnet.tests.test_corr.TestCorr2D) ... ok
#1407 Tests scenario where filter_shape[1] != input_shape[1] ... ok
#1408 test_non_contiguous (theano.tensor.nnet.tests.test_corr.TestCorr2D) ... ok
#1409 Tests correlation where the {image,filter}_shape is a Constant tensor. ... ok
#1410 Tests correlation where subsampling != (1,1) ... ok
#1411 Make sure errors are raised when image and kernel are not 4D tensors ... ok
#1412 Tests that basic correlations work for odd and even ... ok
#1413 Checks dtype upcast for Corr3dMM methods. ... ok
#1414 Tests correlation where filter dilation != (1,1,1) ... ok
#1415 Tests basic correlation in full mode and case where filter ... ok
#1416 test_img_kernel_same_shape (theano.tensor.nnet.tests.test_corr3d.TestCorr3D) ... ok
#1417 test_infer_shape_forward (theano.tensor.nnet.tests.test_corr3d.TestCorr3D) ... ok
#1418 test_infer_shape_gradI (theano.tensor.nnet.tests.test_corr3d.TestCorr3D) ... ok
#1419 test_infer_shape_gradW (theano.tensor.nnet.tests.test_corr3d.TestCorr3D) ... ok
#1420 Tests scenario where filter_shape[1] != input_shape[1] ... ok
#1421 test_non_contiguous (theano.tensor.nnet.tests.test_corr3d.TestCorr3D) ... ok
#1422 Tests correlation where the {image,filter}_shape is a Constant tensor. ... ok
#1423 Tests correlation where subsampling != (1,1,1) ... ok
#1424 Make sure errors are raised when image and kernel are not 5D tensors ... ok
#1425 test_grad_ignore_border (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1426 test_grad_valid (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1427 test_grad_wrap_centered (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1428 test_infer_shape (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1429 test_neibs (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1430 test_neibs2images_grad (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1431 test_neibs_bad_shape (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1432 test_neibs_bad_shape_wrap_centered (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1433 test_neibs_manual (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1434 test_neibs_manual_step (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1435 test_neibs_valid_with_inconsistent_borders (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1436 test_neibs_wrap_centered_step_manual (theano.tensor.nnet.tests.test_neighbours.T_Images2Neibs) ... ok
#1437 test_bad_build (theano.tensor.nnet.tests.test_nnet.SoftsignTester) ... ok
#1438 test_bad_runtime (theano.tensor.nnet.tests.test_nnet.SoftsignTester) ... ok
#1439 test_good (theano.tensor.nnet.tests.test_nnet.SoftsignTester) ... ok
#1440 test_grad (theano.tensor.nnet.tests.test_nnet.SoftsignTester) ... ok
#1441 test_grad_none (theano.tensor.nnet.tests.test_nnet.SoftsignTester) ... ok
#1442 test_crossentropy_softmax_1hot_with_bias_dxcale_cost (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1443 test_get_rid_of_advanced_indexing_version_of_xent (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1444 test_grad (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1445 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1446 test_optimize_xent_vector (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1447 test_optimize_xent_vector2 (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1448 test_optimize_xent_vector3 (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1449 test_optimize_xent_vector4 (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1450 test_softmax_grad_optimizations (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1451 test_softmax_grad_optimizations_vector (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1452 test_softmax_optimizations (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1453 test_softmax_optimizations_vector (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1454 test_softmax_optimizations_w_bias (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1455 test_softmax_optimizations_w_bias2 (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1456 test_softmax_optimizations_w_bias_vector (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1457 test_xent_thing_int32 (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1Hot) ... ok
#1458 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_CrossentropyCategorical1HotGrad) ... ok
#1459 test0 (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1Hot) ... ok
#1460 test1 (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1Hot) ... ok
#1461 test_vector (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1Hot) ... ok
#1462 test_vectors (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1Hot) ... ok
#1463 test0 (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1HotWithBiasDx) ... ok
#1464 test1 (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1HotWithBiasDx) ... ok
#1465 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1HotWithBiasDx) ... ok
#1466 test_neg_idx (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmax1HotWithBiasDx) ... ok
#1467 test0 (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmaxArgmax1HotWithBias) ... ok
#1468 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmaxArgmax1HotWithBias) ... ok
#1469 test_neg_idx (theano.tensor.nnet.tests.test_nnet.T_CrossentropySoftmaxArgmax1HotWithBias) ... ok
#1470 test0 (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1471 test1 (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1472 test2 (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1473 test3 (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1474 test_allclose (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1475 test_isclose (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1476 Test the Logsoftmax's grad substitution. ... ok
#1477 Test the Logsoftmax substitution ... ok
#1478 test_logsoftmax_grad_true_div_elemwise (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1479 test_matrix (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1480 test_vector (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1481 test_vector_grad (theano.tensor.nnet.tests.test_nnet.T_LogSoftmax) ... ok
#1482 test0 (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1483 test1 (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1484 test2 (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1485 test3 (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1486 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1487 test_vector (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1488 test_vector_grad (theano.tensor.nnet.tests.test_nnet.T_Softmax) ... ok
#1489 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_SoftmaxGrad) ... ok
#1490 test0 (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1491 test1 (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1492 test2 (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1493 test3 (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1494 test_broadcast (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1495 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1496 test_softmax_with_bias_trace (theano.tensor.nnet.tests.test_nnet.T_SoftmaxWithBias) ... ok
#1497 test0 (theano.tensor.nnet.tests.test_nnet.T_prepend) ... ok
#1498 basic functionality ... ok
#1499 test_infer_shape (theano.tensor.nnet.tests.test_nnet.T_prepend) ... ok
#1500 test_elemwise (theano.tensor.nnet.tests.test_nnet.T_sigmoid) ... ok
#1501 test_elemwise (theano.tensor.nnet.tests.test_nnet.T_softplus) ... ok
#1502 theano.tensor.nnet.tests.test_nnet.Test_softmax_opt.test_1d_basic ... SKIP: Optimization not enabled for the moment
#1503 theano.tensor.nnet.tests.test_nnet.Test_softmax_opt.test_basic ... ok
#1504 theano.tensor.nnet.tests.test_nnet.Test_softmax_opt.test_basic_keepdims ... ok
#1505 theano.tensor.nnet.tests.test_nnet.Test_softmax_opt.test_grad ... SKIP: Optimization not enabled for the moment
#1506 theano.tensor.nnet.tests.test_nnet.Test_softmax_opt.test_transpose_basic ... SKIP: Optimization not enabled for the moment
#1507 theano.tensor.nnet.tests.test_nnet.test_argmax_pushdown ... ok
#1508 theano.tensor.nnet.tests.test_nnet.test_argmax_pushdown_bias ... ok
#1509 This test makes sure that our functions behave sensibly when ... ok
#1510 theano.tensor.nnet.tests.test_nnet.test_softmax_graph ... ok
#1511 theano.tensor.nnet.tests.test_nnet.test_grad_softmax_grad ... ok
#1512 theano.tensor.nnet.tests.test_nnet.test_stabilize_log_softmax ... ok
#1513 theano.tensor.nnet.tests.test_nnet.test_relu ... ok
#1514 Tests the output dimensions of the h_softmax when a target is provided or ... ok
#1515 theano.tensor.nnet.tests.test_nnet.test_elu ... ok
#1516 theano.tensor.nnet.tests.test_nnet.test_binary_crossentropy_reshape ... ok
#1517 theano.tensor.nnet.tests.test_nnet.test_confusion_matrix ... ok
#1518 theano.tensor.nnet.tests.test_opt.test_blocksparse_inplace_gemv_opt ... ok
#1519 theano.tensor.nnet.tests.test_opt.test_blocksparse_inplace_outer_opt ... ok
#1520 test_bad_build (theano.tensor.nnet.tests.test_sigm.HardSigmoidTester) ... ok
#1521 test_bad_runtime (theano.tensor.nnet.tests.test_sigm.HardSigmoidTester) ... ok
#1522 test_good (theano.tensor.nnet.tests.test_sigm.HardSigmoidTester) ... ok
#1523 test_grad (theano.tensor.nnet.tests.test_sigm.HardSigmoidTester) ... ok
#1524 test_grad_none (theano.tensor.nnet.tests.test_sigm.HardSigmoidTester) ... ok
#1525 test_bad_build (theano.tensor.nnet.tests.test_sigm.SigmoidTester) ... ok
#1526 test_bad_runtime (theano.tensor.nnet.tests.test_sigm.SigmoidTester) ... ok
#1527 test_good (theano.tensor.nnet.tests.test_sigm.SigmoidTester) ... ok
#1528 test_grad (theano.tensor.nnet.tests.test_sigm.SigmoidTester) ... ok
#1529 test_grad_none (theano.tensor.nnet.tests.test_sigm.SigmoidTester) ... ok
#1530 test_bad_build (theano.tensor.nnet.tests.test_sigm.SoftplusTester) ... ok
#1531 test_bad_runtime (theano.tensor.nnet.tests.test_sigm.SoftplusTester) ... ok
#1532 test_good (theano.tensor.nnet.tests.test_sigm.SoftplusTester) ... ok
#1533 test_grad (theano.tensor.nnet.tests.test_sigm.SoftplusTester) ... ok
#1534 test_grad_none (theano.tensor.nnet.tests.test_sigm.SoftplusTester) ... ok
#1535 test_elemwise (theano.tensor.nnet.tests.test_sigm.T_sigmoid) ... ok
#1536 test_1msigmoid (theano.tensor.nnet.tests.test_sigm.T_sigmoid_opts) ... ok
#1537 test_exp_over_1_plus_exp (theano.tensor.nnet.tests.test_sigm.T_sigmoid_opts) ... ok
#1538 test_grad_log1msigm (theano.tensor.nnet.tests.test_sigm.T_sigmoid_opts) ... ok
#1539 test_local_hard_sigmoid (theano.tensor.nnet.tests.test_sigm.T_sigmoid_opts) ... ok
#1540 Test the `local_sigm_times_exp` optimization. ... ok
#1541 test_local_ultra_fast_sigmoid (theano.tensor.nnet.tests.test_sigm.T_sigmoid_opts) ... ok
#1542 Test the core function doing the `sigm_times_exp` optimization. ... ok
#1543 test_compute_mul (theano.tensor.nnet.tests.test_sigm.T_sigmoid_utils) ... ok
#1544 test_is_1pexp (theano.tensor.nnet.tests.test_sigm.T_sigmoid_utils) ... ok
#1545 test_parse_mul_tree (theano.tensor.nnet.tests.test_sigm.T_sigmoid_utils) ... ok
#1546 test_elemwise (theano.tensor.nnet.tests.test_sigm.T_softplus) ... ok
#1547 test_log1msigm_to_softplus (theano.tensor.nnet.tests.test_sigm.T_softplus_opts) ... ok
#1548 test_log1pexp_to_softplus (theano.tensor.nnet.tests.test_sigm.T_softplus_opts) ... ok
#1549 test_logsigm_to_softplus (theano.tensor.nnet.tests.test_sigm.T_softplus_opts) ... ok
#1550 test_bad_build (theano.tensor.nnet.tests.test_sigm.UltraFastSigmoidTester) ... ok
#1551 test_bad_runtime (theano.tensor.nnet.tests.test_sigm.UltraFastSigmoidTester) ... ok
#1552 test_good (theano.tensor.nnet.tests.test_sigm.UltraFastSigmoidTester) ... ok
#1553 test_grad (theano.tensor.nnet.tests.test_sigm.UltraFastSigmoidTester) ... ok
#1554 test_grad_none (theano.tensor.nnet.tests.test_sigm.UltraFastSigmoidTester) ... ok
#1555 Basic functionality of nnet.conv.ConvOp is already tested by ... ok
#1556 Test refers to a bug reported by Josh, when due to a bad merge these ... ok
#1557 Test that conv2d fails for dimensions other than 2 or 3. ... ok
#1558 test_AveragePoolGrad_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1559 test_AveragePoolGrad_grad_stride__1_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1560 test_AveragePoolGrad_grad_stride__1_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1561 test_AveragePoolGrad_grad_stride__1_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1562 test_AveragePoolGrad_grad_stride__1_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1563 test_AveragePoolGrad_grad_stride__1_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1564 test_AveragePoolGrad_grad_stride__1_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1565 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1566 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1567 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1568 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1569 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1570 test_AveragePoolGrad_grad_stride__1_1_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1571 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1572 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1573 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1574 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1575 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1576 test_AveragePoolGrad_grad_stride__1_1_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1577 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1578 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1579 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1580 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1581 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1582 test_AveragePoolGrad_grad_stride__1_1_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1583 test_AveragePoolGrad_grad_stride__1_3_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1584 test_AveragePoolGrad_grad_stride__1_3_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1585 test_AveragePoolGrad_grad_stride__1_3_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1586 test_AveragePoolGrad_grad_stride__1_3_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1587 test_AveragePoolGrad_grad_stride__1_3_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1588 test_AveragePoolGrad_grad_stride__1_3_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1589 test_AveragePoolGrad_grad_stride__1_5_1_2_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1590 test_AveragePoolGrad_grad_stride__1_5_1_2_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1591 test_AveragePoolGrad_grad_stride__1_5_1_2_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1592 test_AveragePoolGrad_grad_stride__1_5_1_2_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1593 test_AveragePoolGrad_grad_stride__1_5_1_2_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1594 test_AveragePoolGrad_grad_stride__1_5_1_2_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1595 test_AveragePoolGrad_grad_stride__2_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1596 test_AveragePoolGrad_grad_stride__2_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1597 test_AveragePoolGrad_grad_stride__2_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1598 test_AveragePoolGrad_grad_stride__2_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1599 test_AveragePoolGrad_grad_stride__2_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1600 test_AveragePoolGrad_grad_stride__2_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1601 test_AveragePoolGrad_grad_stride__2_3_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1602 test_AveragePoolGrad_grad_stride__2_3_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1603 test_AveragePoolGrad_grad_stride__2_3_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1604 test_AveragePoolGrad_grad_stride__2_3_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1605 test_AveragePoolGrad_grad_stride__2_3_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1606 test_AveragePoolGrad_grad_stride__2_3_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1607 test_AveragePoolGrad_grad_stride__2_5_1_2_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1608 test_AveragePoolGrad_grad_stride__2_5_1_2_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1609 test_AveragePoolGrad_grad_stride__2_5_1_2_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1610 test_AveragePoolGrad_grad_stride__2_5_1_2_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1611 test_AveragePoolGrad_grad_stride__2_5_1_2_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1612 test_AveragePoolGrad_grad_stride__2_5_1_2_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1613 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1614 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1615 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1616 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1617 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1618 test_AveragePoolGrad_grad_stride__3_2_2_3_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1619 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1620 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1621 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1622 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1623 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1624 test_AveragePoolGrad_grad_stride__3_3_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1625 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1626 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1627 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1628 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1629 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1630 test_AveragePoolGrad_grad_stride__3_3_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1631 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1632 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1633 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1634 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1635 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1636 test_AveragePoolGrad_grad_stride__3_3_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1637 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1638 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1639 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1640 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1641 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1642 test_AveragePoolGrad_grad_stride__5_1_2_1_1_1_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1643 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1644 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1645 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1646 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1647 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1648 test_AveragePoolGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1649 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1650 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1651 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1652 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1653 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1654 test_AveragePoolGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1655 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1656 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1657 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1658 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1659 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1660 test_AveragePoolGrad_grad_stride__5_3_10_6_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1661 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1662 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1663 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1664 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1665 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1666 test_AveragePoolGrad_grad_stride__5_3_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1667 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1668 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1669 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1670 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1671 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1672 test_AveragePoolGrad_grad_stride__5_3_3_2_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1673 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1674 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1675 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1676 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1677 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1678 test_AveragePoolGrad_grad_stride__5_3_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1679 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1680 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1681 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1682 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1683 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1684 test_AveragePoolGrad_grad_stride__5_3_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1685 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1686 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1687 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1688 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1689 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1690 test_AveragePoolGrad_grad_stride__5_3_7_5_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1691 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1692 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1693 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1694 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1695 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1696 test_AveragePoolGrad_grad_stride__5_5_1_1_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1697 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1698 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1699 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1700 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1701 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1702 test_AveragePoolGrad_grad_stride__7_7_10_10_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1703 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1704 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1705 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1706 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1707 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1708 test_AveragePoolGrad_grad_stride__9_9_1_1_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1709 test_AveragePoolPaddingStride_grad_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1710 test_DownsampleFactorMax (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1711 test_DownsampleFactorMaxGradGrad_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1712 test_DownsampleFactorMaxGrad_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1713 test_DownsampleFactorMaxGrad_grad_stride__1_1_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1714 test_DownsampleFactorMaxGrad_grad_stride__1_1_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1715 test_DownsampleFactorMaxGrad_grad_stride__1_1_1_1_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1716 test_DownsampleFactorMaxGrad_grad_stride__1_1_1_1_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1717 test_DownsampleFactorMaxGrad_grad_stride__1_1_3_3_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1718 test_DownsampleFactorMaxGrad_grad_stride__1_1_3_3_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1719 test_DownsampleFactorMaxGrad_grad_stride__1_1_5_7_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1720 test_DownsampleFactorMaxGrad_grad_stride__1_1_5_7_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1721 test_DownsampleFactorMaxGrad_grad_stride__1_3_1_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1722 test_DownsampleFactorMaxGrad_grad_stride__1_3_1_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1723 test_DownsampleFactorMaxGrad_grad_stride__1_5_1_2_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1724 test_DownsampleFactorMaxGrad_grad_stride__1_5_1_2_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1725 test_DownsampleFactorMaxGrad_grad_stride__2_1_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1726 test_DownsampleFactorMaxGrad_grad_stride__2_1_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1727 test_DownsampleFactorMaxGrad_grad_stride__2_3_1_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1728 test_DownsampleFactorMaxGrad_grad_stride__2_3_1_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1729 test_DownsampleFactorMaxGrad_grad_stride__2_5_1_2_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1730 test_DownsampleFactorMaxGrad_grad_stride__2_5_1_2_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1731 test_DownsampleFactorMaxGrad_grad_stride__3_2_2_3_1_2_8_5__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1732 test_DownsampleFactorMaxGrad_grad_stride__3_2_2_3_1_2_8_5__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1733 test_DownsampleFactorMaxGrad_grad_stride__3_3_1_1_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1734 test_DownsampleFactorMaxGrad_grad_stride__3_3_1_1_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1735 test_DownsampleFactorMaxGrad_grad_stride__3_3_3_3_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1736 test_DownsampleFactorMaxGrad_grad_stride__3_3_3_3_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1737 test_DownsampleFactorMaxGrad_grad_stride__3_3_5_7_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1738 test_DownsampleFactorMaxGrad_grad_stride__3_3_5_7_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1739 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_1_1_1_16_3_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1740 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_1_1_1_16_3_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1741 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1742 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_3_1_2_1_16_3_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1743 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1744 test_DownsampleFactorMaxGrad_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1745 test_DownsampleFactorMaxGrad_grad_stride__5_3_10_6_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1746 test_DownsampleFactorMaxGrad_grad_stride__5_3_10_6_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1747 test_DownsampleFactorMaxGrad_grad_stride__5_3_1_1_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1748 test_DownsampleFactorMaxGrad_grad_stride__5_3_1_1_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1749 test_DownsampleFactorMaxGrad_grad_stride__5_3_3_2_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1750 test_DownsampleFactorMaxGrad_grad_stride__5_3_3_2_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1751 test_DownsampleFactorMaxGrad_grad_stride__5_3_3_3_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1752 test_DownsampleFactorMaxGrad_grad_stride__5_3_3_3_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1753 test_DownsampleFactorMaxGrad_grad_stride__5_3_5_7_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1754 test_DownsampleFactorMaxGrad_grad_stride__5_3_5_7_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1755 test_DownsampleFactorMaxGrad_grad_stride__5_3_7_5_1_2_16_16__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1756 test_DownsampleFactorMaxGrad_grad_stride__5_3_7_5_1_2_16_16__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1757 test_DownsampleFactorMaxGrad_grad_stride__5_5_1_1_1_2_8_5__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1758 test_DownsampleFactorMaxGrad_grad_stride__5_5_1_1_1_2_8_5__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1759 test_DownsampleFactorMaxGrad_grad_stride__7_7_10_10_1_2_8_5__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1760 test_DownsampleFactorMaxGrad_grad_stride__7_7_10_10_1_2_8_5__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1761 test_DownsampleFactorMaxGrad_grad_stride__9_9_1_1_1_2_8_5__False (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1762 test_DownsampleFactorMaxGrad_grad_stride__9_9_1_1_1_2_8_5__True (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1763 test_DownsampleFactorMaxPaddingStride (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1764 test_DownsampleFactorMaxPaddingStride_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1765 test_DownsampleFactorMaxPaddingStride_grad_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1766 test_DownsampleFactorMaxStride (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1767 test_DownsampleFactorMaxStrideExtra (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1768 test_DownsampleFactorMax_grad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1769 test_DownsampleFactorMax_grad_stride__1_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1770 test_DownsampleFactorMax_grad_stride__1_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1771 test_DownsampleFactorMax_grad_stride__1_1_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1772 test_DownsampleFactorMax_grad_stride__1_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1773 test_DownsampleFactorMax_grad_stride__1_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1774 test_DownsampleFactorMax_grad_stride__1_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1775 test_DownsampleFactorMax_grad_stride__1_1_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1776 test_DownsampleFactorMax_grad_stride__1_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1777 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1778 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1779 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1780 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1781 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1782 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1783 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1784 test_DownsampleFactorMax_grad_stride__1_1_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1785 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1786 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1787 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1788 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1789 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1790 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1791 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1792 test_DownsampleFactorMax_grad_stride__1_1_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1793 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1794 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1795 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1796 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1797 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1798 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1799 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1800 test_DownsampleFactorMax_grad_stride__1_1_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1801 test_DownsampleFactorMax_grad_stride__1_3_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1802 test_DownsampleFactorMax_grad_stride__1_3_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1803 test_DownsampleFactorMax_grad_stride__1_3_1_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1804 test_DownsampleFactorMax_grad_stride__1_3_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1805 test_DownsampleFactorMax_grad_stride__1_3_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1806 test_DownsampleFactorMax_grad_stride__1_3_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1807 test_DownsampleFactorMax_grad_stride__1_3_1_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1808 test_DownsampleFactorMax_grad_stride__1_3_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1809 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1810 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1811 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1812 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1813 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1814 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1815 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1816 test_DownsampleFactorMax_grad_stride__1_5_1_2_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1817 test_DownsampleFactorMax_grad_stride__2_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1818 test_DownsampleFactorMax_grad_stride__2_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1819 test_DownsampleFactorMax_grad_stride__2_1_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1820 test_DownsampleFactorMax_grad_stride__2_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1821 test_DownsampleFactorMax_grad_stride__2_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1822 test_DownsampleFactorMax_grad_stride__2_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1823 test_DownsampleFactorMax_grad_stride__2_1_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1824 test_DownsampleFactorMax_grad_stride__2_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1825 test_DownsampleFactorMax_grad_stride__2_3_1_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1826 test_DownsampleFactorMax_grad_stride__2_3_1_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1827 test_DownsampleFactorMax_grad_stride__2_3_1_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1828 test_DownsampleFactorMax_grad_stride__2_3_1_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1829 test_DownsampleFactorMax_grad_stride__2_3_1_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1830 test_DownsampleFactorMax_grad_stride__2_3_1_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1831 test_DownsampleFactorMax_grad_stride__2_3_1_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1832 test_DownsampleFactorMax_grad_stride__2_3_1_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1833 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1834 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1835 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1836 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1837 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1838 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1839 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1840 test_DownsampleFactorMax_grad_stride__2_5_1_2_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1841 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1842 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1843 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1844 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1845 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1846 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1847 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1848 test_DownsampleFactorMax_grad_stride__3_2_2_3_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1849 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1850 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1851 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1852 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1853 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1854 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1855 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1856 test_DownsampleFactorMax_grad_stride__3_3_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1857 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1858 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1859 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1860 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1861 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1862 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1863 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1864 test_DownsampleFactorMax_grad_stride__3_3_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1865 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1866 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1867 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1868 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1869 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1870 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1871 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1872 test_DownsampleFactorMax_grad_stride__3_3_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1873 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1874 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1875 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1876 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1877 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1878 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1879 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1880 test_DownsampleFactorMax_grad_stride__5_1_2_1_1_1_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1881 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1882 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1883 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1884 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1885 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1886 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1887 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1888 test_DownsampleFactorMax_grad_stride__5_1_2_3_1_2_1_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1889 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1890 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1891 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1892 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1893 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1894 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1895 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1896 test_DownsampleFactorMax_grad_stride__5_1_2_5_1_4_1_2_16_3_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1897 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1898 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1899 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1900 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1901 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1902 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1903 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1904 test_DownsampleFactorMax_grad_stride__5_3_10_6_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1905 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1906 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1907 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1908 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1909 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1910 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1911 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1912 test_DownsampleFactorMax_grad_stride__5_3_1_1_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1913 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1914 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1915 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1916 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1917 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1918 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1919 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1920 test_DownsampleFactorMax_grad_stride__5_3_3_2_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1921 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1922 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1923 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1924 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1925 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1926 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1927 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1928 test_DownsampleFactorMax_grad_stride__5_3_3_3_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1929 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1930 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1931 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1932 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1933 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1934 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1935 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1936 test_DownsampleFactorMax_grad_stride__5_3_5_7_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1937 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1938 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1939 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1940 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1941 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1942 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1943 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1944 test_DownsampleFactorMax_grad_stride__5_3_7_5_1_2_16_16__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1945 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1946 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1947 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1948 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1949 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1950 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1951 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1952 test_DownsampleFactorMax_grad_stride__5_5_1_1_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1953 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1954 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1955 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1956 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1957 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1958 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1959 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1960 test_DownsampleFactorMax_grad_stride__7_7_10_10_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1961 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__False_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1962 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__False_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1963 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__False_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1964 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__False_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1965 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__True_average_exc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1966 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__True_average_inc_pad (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1967 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__True_max (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1968 test_DownsampleFactorMax_grad_stride__9_9_1_1_1_2_8_5__True_sum (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1969 test_DownsampleFactorMax_hessian (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1970 test_infer_shape (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1971 test_max_pool_2d_2D (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1972 test_max_pool_2d_2D_same_size (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1973 test_max_pool_2d_3D (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1974 test_max_pool_2d_6D (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1975 test_max_pool_3d_3D (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1976 test_max_pool_3d_3D_deprecated_interface (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:939: UserWarning: DEPRECATION: the 'ds' parameter is not going to exist anymore as it is going to be replaced by the parameter 'ws'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:939: UserWarning: DEPRECATION: the 'st' parameter is not going to exist anymore as it is going to be replaced by the parameter 'stride'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:939: UserWarning: DEPRECATION: the 'padding' parameter is not going to exist anymore as it is going to be replaced by the parameter 'pad'.
  mode=mode)
ok
#1977 test_old_pool_interface (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... SKIP: Skip old pool interface with python 2.x
#1978 test_out_shape (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1979 test_pooling_with_tensor_vars (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... ok
#1980 test_pooling_with_tensor_vars_deprecated_interface (theano.tensor.signal.tests.test_pool.TestDownsampleFactorMax) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1123: UserWarning: DEPRECATION: the 'ds' parameter is not going to exist anymore as it is going to be replaced by the parameter 'ws'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1123: UserWarning: DEPRECATION: the 'st' parameter is not going to exist anymore as it is going to be replaced by the parameter 'stride'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1123: UserWarning: DEPRECATION: the 'padding' parameter is not going to exist anymore as it is going to be replaced by the parameter 'pad'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1139: UserWarning: DEPRECATION: the 'ds' parameter is not going to exist anymore as it is going to be replaced by the parameter 'ws'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1139: UserWarning: DEPRECATION: the 'st' parameter is not going to exist anymore as it is going to be replaced by the parameter 'stride'.
  mode=mode)
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/signal/tests/test_pool.py:1139: UserWarning: DEPRECATION: the 'padding' parameter is not going to exist anymore as it is going to be replaced by the parameter 'pad'.
  mode=mode)
ok
#1981 Demonstrate stochastic gradient descent optimization for a multilayer ... ok
#1982 test_bad_build (theano.tensor.tests.test_basic.AbsInplaceTester) ... ok
#1983 test_bad_runtime (theano.tensor.tests.test_basic.AbsInplaceTester) ... ok
#1984 test_good (theano.tensor.tests.test_basic.AbsInplaceTester) ... ok
#1985 test_grad (theano.tensor.tests.test_basic.AbsInplaceTester) ... ok
#1986 test_grad_none (theano.tensor.tests.test_basic.AbsInplaceTester) ... ok
#1987 test_bad_build (theano.tensor.tests.test_basic.AbsTester) ... ok
#1988 test_bad_runtime (theano.tensor.tests.test_basic.AbsTester) ... ok
#1989 test_good (theano.tensor.tests.test_basic.AbsTester) ... ok
#1990 test_grad (theano.tensor.tests.test_basic.AbsTester) ... ok
#1991 test_grad_none (theano.tensor.tests.test_basic.AbsTester) ... ok
#1992 test_bad_build (theano.tensor.tests.test_basic.AddInplaceTester) ... ok
#1993 test_bad_runtime (theano.tensor.tests.test_basic.AddInplaceTester) ... ok
#1994 test_good (theano.tensor.tests.test_basic.AddInplaceTester) ... ok
#1995 test_grad (theano.tensor.tests.test_basic.AddInplaceTester) ... ok
#1996 test_grad_none (theano.tensor.tests.test_basic.AddInplaceTester) ... ok
#1997 test_bad_build (theano.tensor.tests.test_basic.AddTester) ... ok
#1998 test_bad_runtime (theano.tensor.tests.test_basic.AddTester) ... ok
#1999 test_good (theano.tensor.tests.test_basic.AddTester) ... ok
#2000 test_grad (theano.tensor.tests.test_basic.AddTester) ... ok
#2001 test_grad_none (theano.tensor.tests.test_basic.AddTester) ... ok
#2002 test_bad_build (theano.tensor.tests.test_basic.Alloc01GradTester) ... ok
#2003 test_bad_runtime (theano.tensor.tests.test_basic.Alloc01GradTester) ... ok
#2004 test_good (theano.tensor.tests.test_basic.Alloc01GradTester) ... ok
#2005 test_grad (theano.tensor.tests.test_basic.Alloc01GradTester) ... ok
#2006 test_grad_none (theano.tensor.tests.test_basic.Alloc01GradTester) ... ok
#2007 test_bad_build (theano.tensor.tests.test_basic.Alloc13GradTester) ... ok
#2008 test_bad_runtime (theano.tensor.tests.test_basic.Alloc13GradTester) ... ok
#2009 test_good (theano.tensor.tests.test_basic.Alloc13GradTester) ... ok
#2010 test_grad (theano.tensor.tests.test_basic.Alloc13GradTester) ... ok
#2011 test_grad_none (theano.tensor.tests.test_basic.Alloc13GradTester) ... ok
#2012 test_bad_build (theano.tensor.tests.test_basic.AllocTester) ... ok
#2013 test_bad_runtime (theano.tensor.tests.test_basic.AllocTester) ... ok
#2014 test_good (theano.tensor.tests.test_basic.AllocTester) ... ok
#2015 test_grad (theano.tensor.tests.test_basic.AllocTester) ... ok
#2016 test_grad_none (theano.tensor.tests.test_basic.AllocTester) ... ok
#2017 test_bad_build (theano.tensor.tests.test_basic.Allocb1GradTester) ... ok
#2018 test_bad_runtime (theano.tensor.tests.test_basic.Allocb1GradTester) ... ok
#2019 test_good (theano.tensor.tests.test_basic.Allocb1GradTester) ... ok
#2020 test_grad (theano.tensor.tests.test_basic.Allocb1GradTester) ... ok
#2021 test_grad_none (theano.tensor.tests.test_basic.Allocb1GradTester) ... ok
#2022 test_bad_build (theano.tensor.tests.test_basic.Allocb2GradTester) ... ok
#2023 test_bad_runtime (theano.tensor.tests.test_basic.Allocb2GradTester) ... ok
#2024 test_good (theano.tensor.tests.test_basic.Allocb2GradTester) ... ok
#2025 test_grad (theano.tensor.tests.test_basic.Allocb2GradTester) ... ok
#2026 test_grad_none (theano.tensor.tests.test_basic.Allocb2GradTester) ... ok
#2027 test_bad_build (theano.tensor.tests.test_basic.Allocb3GradTester) ... ok
#2028 test_bad_runtime (theano.tensor.tests.test_basic.Allocb3GradTester) ... ok
#2029 test_good (theano.tensor.tests.test_basic.Allocb3GradTester) ... ok
#2030 test_grad (theano.tensor.tests.test_basic.Allocb3GradTester) ... ok
#2031 test_grad_none (theano.tensor.tests.test_basic.Allocb3GradTester) ... ok
#2032 test_bad_build (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
#2033 test_bad_runtime (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
#2034 test_good (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
#2035 test_grad (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
#2036 test_grad_none (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_bad_build (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_bad_runtime (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_good (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_grad (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_grad_none (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_bad_build (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_bad_runtime (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_good (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_grad (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
   test_grad_none (theano.tensor.tests.test_basic.Allocb4GradTester) ... ok
#2037 test_bad_build (theano.tensor.tests.test_basic.ArccosInplaceTester) ... ok
#2038 test_bad_runtime (theano.tensor.tests.test_basic.ArccosInplaceTester) ... ok
#2039 test_good (theano.tensor.tests.test_basic.ArccosInplaceTester) ... ok
#2040 test_grad (theano.tensor.tests.test_basic.ArccosInplaceTester) ... ok
#2041 test_grad_none (theano.tensor.tests.test_basic.ArccosInplaceTester) ... ok
#2042 test_bad_build (theano.tensor.tests.test_basic.ArccosTester) ... ok
#2043 test_bad_runtime (theano.tensor.tests.test_basic.ArccosTester) ... ok
#2044 test_good (theano.tensor.tests.test_basic.ArccosTester) ... ok
#2045 test_grad (theano.tensor.tests.test_basic.ArccosTester) ... ok
#2046 test_grad_none (theano.tensor.tests.test_basic.ArccosTester) ... ok
#2047 test_bad_build (theano.tensor.tests.test_basic.ArccoshInplaceTester) ... ok
#2048 test_bad_runtime (theano.tensor.tests.test_basic.ArccoshInplaceTester) ... ok
#2049 test_good (theano.tensor.tests.test_basic.ArccoshInplaceTester) ... ok
#2050 test_grad (theano.tensor.tests.test_basic.ArccoshInplaceTester) ... ok
#2051 test_grad_none (theano.tensor.tests.test_basic.ArccoshInplaceTester) ... ok
#2052 test_bad_build (theano.tensor.tests.test_basic.ArccoshTester) ... ok
#2053 test_bad_runtime (theano.tensor.tests.test_basic.ArccoshTester) ... ok
#2054 test_good (theano.tensor.tests.test_basic.ArccoshTester) ... ok
#2055 test_grad (theano.tensor.tests.test_basic.ArccoshTester) ... ok
#2056 test_grad_none (theano.tensor.tests.test_basic.ArccoshTester) ... ok
#2057 test_bad_build (theano.tensor.tests.test_basic.ArcsinInplaceTester) ... ok
#2058 test_bad_runtime (theano.tensor.tests.test_basic.ArcsinInplaceTester) ... ok
#2059 test_good (theano.tensor.tests.test_basic.ArcsinInplaceTester) ... ok
#2060 test_grad (theano.tensor.tests.test_basic.ArcsinInplaceTester) ... ok
#2061 test_grad_none (theano.tensor.tests.test_basic.ArcsinInplaceTester) ... ok
#2062 test_bad_build (theano.tensor.tests.test_basic.ArcsinTester) ... ok
#2063 test_bad_runtime (theano.tensor.tests.test_basic.ArcsinTester) ... ok
#2064 test_good (theano.tensor.tests.test_basic.ArcsinTester) ... ok
#2065 test_grad (theano.tensor.tests.test_basic.ArcsinTester) ... ok
#2066 test_grad_none (theano.tensor.tests.test_basic.ArcsinTester) ... ok
#2067 test_bad_build (theano.tensor.tests.test_basic.ArcsinhInplaceTester) ... ok
#2068 test_bad_runtime (theano.tensor.tests.test_basic.ArcsinhInplaceTester) ... ok
#2069 test_good (theano.tensor.tests.test_basic.ArcsinhInplaceTester) ... ok
#2070 test_grad (theano.tensor.tests.test_basic.ArcsinhInplaceTester) ... ok
#2071 test_grad_none (theano.tensor.tests.test_basic.ArcsinhInplaceTester) ... ok
#2072 test_bad_build (theano.tensor.tests.test_basic.ArcsinhTester) ... ok
#2073 test_bad_runtime (theano.tensor.tests.test_basic.ArcsinhTester) ... ok
#2074 test_good (theano.tensor.tests.test_basic.ArcsinhTester) ... ok
#2075 test_grad (theano.tensor.tests.test_basic.ArcsinhTester) ... ok
#2076 test_grad_none (theano.tensor.tests.test_basic.ArcsinhTester) ... ok
#2077 test_bad_build (theano.tensor.tests.test_basic.Arctan2InplaceTester) ... ok
#2078 test_bad_runtime (theano.tensor.tests.test_basic.Arctan2InplaceTester) ... ok
#2079 test_good (theano.tensor.tests.test_basic.Arctan2InplaceTester) ... ok
#2080 test_grad (theano.tensor.tests.test_basic.Arctan2InplaceTester) ... ok
#2081 test_grad_none (theano.tensor.tests.test_basic.Arctan2InplaceTester) ... ok
#2082 test_bad_build (theano.tensor.tests.test_basic.Arctan2Tester) ... ok
#2083 test_bad_runtime (theano.tensor.tests.test_basic.Arctan2Tester) ... ok
#2084 test_good (theano.tensor.tests.test_basic.Arctan2Tester) ... ok
#2085 test_grad (theano.tensor.tests.test_basic.Arctan2Tester) ... ok
#2086 test_grad_none (theano.tensor.tests.test_basic.Arctan2Tester) ... ok
#2087 test_bad_build (theano.tensor.tests.test_basic.ArctanInplaceTester) ... ok
#2088 test_bad_runtime (theano.tensor.tests.test_basic.ArctanInplaceTester) ... ok
#2089 test_good (theano.tensor.tests.test_basic.ArctanInplaceTester) ... ok
#2090 test_grad (theano.tensor.tests.test_basic.ArctanInplaceTester) ... ok
#2091 test_grad_none (theano.tensor.tests.test_basic.ArctanInplaceTester) ... ok
#2092 test_bad_build (theano.tensor.tests.test_basic.ArctanTester) ... ok
#2093 test_bad_runtime (theano.tensor.tests.test_basic.ArctanTester) ... ok
#2094 test_good (theano.tensor.tests.test_basic.ArctanTester) ... ok
#2095 test_grad (theano.tensor.tests.test_basic.ArctanTester) ... ok
#2096 test_grad_none (theano.tensor.tests.test_basic.ArctanTester) ... ok
#2097 test_bad_build (theano.tensor.tests.test_basic.ArctanhInplaceTester) ... ok
#2098 test_bad_runtime (theano.tensor.tests.test_basic.ArctanhInplaceTester) ... ok
#2099 test_good (theano.tensor.tests.test_basic.ArctanhInplaceTester) ... ok
#2100 test_grad (theano.tensor.tests.test_basic.ArctanhInplaceTester) ... ok
#2101 test_grad_none (theano.tensor.tests.test_basic.ArctanhInplaceTester) ... ok
#2102 test_bad_build (theano.tensor.tests.test_basic.ArctanhTester) ... ok
#2103 test_bad_runtime (theano.tensor.tests.test_basic.ArctanhTester) ... ok
#2104 test_good (theano.tensor.tests.test_basic.ArctanhTester) ... ok
#2105 test_grad (theano.tensor.tests.test_basic.ArctanhTester) ... ok
#2106 test_grad_none (theano.tensor.tests.test_basic.ArctanhTester) ... ok
#2107 test_bad_build (theano.tensor.tests.test_basic.BatchedDotTester) ... ok
#2108 test_bad_runtime (theano.tensor.tests.test_basic.BatchedDotTester) ... ok
#2109 test_good (theano.tensor.tests.test_basic.BatchedDotTester) ... ok
#2110 test_grad (theano.tensor.tests.test_basic.BatchedDotTester) ... ok
#2111 test_grad_none (theano.tensor.tests.test_basic.BatchedDotTester) ... ok
#2112 test_cast_from_complex_to_real_raises_error (theano.tensor.tests.test_basic.CastTester) ... ok
#2113 test_cast_from_real_to_complex (theano.tensor.tests.test_basic.CastTester) ... ok
#2114 test_good_between_real_types (theano.tensor.tests.test_basic.CastTester) ... ok
#2115 test_bad_build (theano.tensor.tests.test_basic.CeilInplaceTester) ... ok
#2116 test_bad_runtime (theano.tensor.tests.test_basic.CeilInplaceTester) ... ok
#2117 test_good (theano.tensor.tests.test_basic.CeilInplaceTester) ... ok
#2118 test_grad (theano.tensor.tests.test_basic.CeilInplaceTester) ... ok
#2119 test_grad_none (theano.tensor.tests.test_basic.CeilInplaceTester) ... ok
#2120 test_bad_build (theano.tensor.tests.test_basic.CeilIntDivTester) ... ok
#2121 test_bad_runtime (theano.tensor.tests.test_basic.CeilIntDivTester) ... ok
#2122 test_good (theano.tensor.tests.test_basic.CeilIntDivTester) ... ok
#2123 test_grad (theano.tensor.tests.test_basic.CeilIntDivTester) ... ok
#2124 test_grad_none (theano.tensor.tests.test_basic.CeilIntDivTester) ... ok
#2125 test_bad_build (theano.tensor.tests.test_basic.CeilTester) ... ok
#2126 test_bad_runtime (theano.tensor.tests.test_basic.CeilTester) ... ok
#2127 test_good (theano.tensor.tests.test_basic.CeilTester) ... ok
#2128 test_grad (theano.tensor.tests.test_basic.CeilTester) ... ok
#2129 test_grad_none (theano.tensor.tests.test_basic.CeilTester) ... ok
#2130 test_bad_build (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
#2131 test_bad_runtime (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
#2132 test_good (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
#2133 test_grad (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
#2134 test_grad_none (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
   test_bad_build (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
   test_bad_runtime (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
   test_good (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
   test_grad (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
   test_grad_none (theano.tensor.tests.test_basic.Chi2SFTester) ... ok
#2135 test_bad_build (theano.tensor.tests.test_basic.ClipTester) ... ok
#2136 test_bad_runtime (theano.tensor.tests.test_basic.ClipTester) ... ok
#2137 test_good (theano.tensor.tests.test_basic.ClipTester) ... ok
#2138 test_grad (theano.tensor.tests.test_basic.ClipTester) ... ok
#2139 test_grad_none (theano.tensor.tests.test_basic.ClipTester) ... ok
#2140 test_bad_build (theano.tensor.tests.test_basic.ComplexFromPolarTester) ... ok
#2141 test_bad_runtime (theano.tensor.tests.test_basic.ComplexFromPolarTester) ... ok
#2142 test_good (theano.tensor.tests.test_basic.ComplexFromPolarTester) ... ok
#2143 test_grad (theano.tensor.tests.test_basic.ComplexFromPolarTester) ... ok
#2144 test_grad_none (theano.tensor.tests.test_basic.ComplexFromPolarTester) ... ok
#2145 test_bad_build (theano.tensor.tests.test_basic.ConjInplaceTester) ... ok
#2146 test_bad_runtime (theano.tensor.tests.test_basic.ConjInplaceTester) ... ok
#2147 test_good (theano.tensor.tests.test_basic.ConjInplaceTester) ... ok
#2148 test_grad (theano.tensor.tests.test_basic.ConjInplaceTester) ... ok
#2149 test_grad_none (theano.tensor.tests.test_basic.ConjInplaceTester) ... ok
#2150 test_bad_build (theano.tensor.tests.test_basic.ConjTester) ... ok
#2151 test_bad_runtime (theano.tensor.tests.test_basic.ConjTester) ... ok
#2152 test_good (theano.tensor.tests.test_basic.ConjTester) ... ok
#2153 test_grad (theano.tensor.tests.test_basic.ConjTester) ... ok
#2154 test_grad_none (theano.tensor.tests.test_basic.ConjTester) ... ok
#2155 test_bad_build (theano.tensor.tests.test_basic.CosInplaceTester) ... ok
#2156 test_bad_runtime (theano.tensor.tests.test_basic.CosInplaceTester) ... ok
#2157 test_good (theano.tensor.tests.test_basic.CosInplaceTester) ... ok
#2158 test_grad (theano.tensor.tests.test_basic.CosInplaceTester) ... ok
#2159 test_grad_none (theano.tensor.tests.test_basic.CosInplaceTester) ... ok
#2160 test_bad_build (theano.tensor.tests.test_basic.CosTester) ... ok
#2161 test_bad_runtime (theano.tensor.tests.test_basic.CosTester) ... ok
#2162 test_good (theano.tensor.tests.test_basic.CosTester) ... ok
#2163 test_grad (theano.tensor.tests.test_basic.CosTester) ... ok
#2164 test_grad_none (theano.tensor.tests.test_basic.CosTester) ... ok
#2165 test_bad_build (theano.tensor.tests.test_basic.CoshInplaceTester) ... ok
#2166 test_bad_runtime (theano.tensor.tests.test_basic.CoshInplaceTester) ... ok
#2167 test_good (theano.tensor.tests.test_basic.CoshInplaceTester) ... ok
#2168 test_grad (theano.tensor.tests.test_basic.CoshInplaceTester) ... ok
#2169 test_grad_none (theano.tensor.tests.test_basic.CoshInplaceTester) ... ok
#2170 test_bad_build (theano.tensor.tests.test_basic.CoshTester) ... ok
#2171 test_bad_runtime (theano.tensor.tests.test_basic.CoshTester) ... ok
#2172 test_good (theano.tensor.tests.test_basic.CoshTester) ... ok
#2173 test_grad (theano.tensor.tests.test_basic.CoshTester) ... ok
#2174 test_grad_none (theano.tensor.tests.test_basic.CoshTester) ... ok
#2175 test_bad_build (theano.tensor.tests.test_basic.Deg2radInplaceTester) ... ok
#2176 test_bad_runtime (theano.tensor.tests.test_basic.Deg2radInplaceTester) ... ok
#2177 test_good (theano.tensor.tests.test_basic.Deg2radInplaceTester) ... ok
#2178 test_grad (theano.tensor.tests.test_basic.Deg2radInplaceTester) ... ok
#2179 test_grad_none (theano.tensor.tests.test_basic.Deg2radInplaceTester) ... ok
#2180 test_bad_build (theano.tensor.tests.test_basic.Deg2radTester) ... ok
#2181 test_bad_runtime (theano.tensor.tests.test_basic.Deg2radTester) ... ok
#2182 test_good (theano.tensor.tests.test_basic.Deg2radTester) ... ok
#2183 test_grad (theano.tensor.tests.test_basic.Deg2radTester) ... ok
#2184 test_grad_none (theano.tensor.tests.test_basic.Deg2radTester) ... ok
#2185 test_bad_build (theano.tensor.tests.test_basic.DotTester) ... ok
#2186 test_bad_runtime (theano.tensor.tests.test_basic.DotTester) ... ok
#2187 test_good (theano.tensor.tests.test_basic.DotTester) ... ok
#2188 test_grad (theano.tensor.tests.test_basic.DotTester) ... ok
#2189 test_grad_none (theano.tensor.tests.test_basic.DotTester) ... ok
#2190 test_bad_build (theano.tensor.tests.test_basic.ErfInplaceTester) ... ok
#2191 test_bad_runtime (theano.tensor.tests.test_basic.ErfInplaceTester) ... ok
#2192 test_good (theano.tensor.tests.test_basic.ErfInplaceTester) ... ok
#2193 test_grad (theano.tensor.tests.test_basic.ErfInplaceTester) ... ok
#2194 test_grad_none (theano.tensor.tests.test_basic.ErfInplaceTester) ... ok
#2195 test_bad_build (theano.tensor.tests.test_basic.ErfTester) ... ok
#2196 test_bad_runtime (theano.tensor.tests.test_basic.ErfTester) ... ok
#2197 test_good (theano.tensor.tests.test_basic.ErfTester) ... ok
#2198 test_grad (theano.tensor.tests.test_basic.ErfTester) ... ok
#2199 test_grad_none (theano.tensor.tests.test_basic.ErfTester) ... ok
#2200 test_bad_build (theano.tensor.tests.test_basic.ErfcInplaceTester) ... ok
#2201 test_bad_runtime (theano.tensor.tests.test_basic.ErfcInplaceTester) ... ok
#2202 test_good (theano.tensor.tests.test_basic.ErfcInplaceTester) ... ok
#2203 test_grad (theano.tensor.tests.test_basic.ErfcInplaceTester) ... ok
#2204 test_grad_none (theano.tensor.tests.test_basic.ErfcInplaceTester) ... ok
#2205 test_bad_build (theano.tensor.tests.test_basic.ErfcTester) ... ok
#2206 test_bad_runtime (theano.tensor.tests.test_basic.ErfcTester) ... ok
#2207 test_good (theano.tensor.tests.test_basic.ErfcTester) ... ok
#2208 test_grad (theano.tensor.tests.test_basic.ErfcTester) ... ok
#2209 test_grad_none (theano.tensor.tests.test_basic.ErfcTester) ... ok
#2210 test_bad_build (theano.tensor.tests.test_basic.ErfcinvTester) ... ok
#2211 test_bad_runtime (theano.tensor.tests.test_basic.ErfcinvTester) ... ok
#2212 test_good (theano.tensor.tests.test_basic.ErfcinvTester) ... ok
#2213 test_grad (theano.tensor.tests.test_basic.ErfcinvTester) ... ok
#2214 test_grad_none (theano.tensor.tests.test_basic.ErfcinvTester) ... ok
#2215 test_bad_build (theano.tensor.tests.test_basic.ErfcxInplaceTester) ... ok
#2216 test_bad_runtime (theano.tensor.tests.test_basic.ErfcxInplaceTester) ... ok
#2217 test_good (theano.tensor.tests.test_basic.ErfcxInplaceTester) ... ok
#2218 test_grad (theano.tensor.tests.test_basic.ErfcxInplaceTester) ... ok
#2219 test_grad_none (theano.tensor.tests.test_basic.ErfcxInplaceTester) ... ok
#2220 test_bad_build (theano.tensor.tests.test_basic.ErfcxTester) ... ok
#2221 test_bad_runtime (theano.tensor.tests.test_basic.ErfcxTester) ... ok
#2222 test_good (theano.tensor.tests.test_basic.ErfcxTester) ... ok
#2223 test_grad (theano.tensor.tests.test_basic.ErfcxTester) ... ok
#2224 test_grad_none (theano.tensor.tests.test_basic.ErfcxTester) ... ok
#2225 test_bad_build (theano.tensor.tests.test_basic.ErfinvTester) ... ok
#2226 test_bad_runtime (theano.tensor.tests.test_basic.ErfinvTester) ... ok
#2227 test_good (theano.tensor.tests.test_basic.ErfinvTester) ... ok
#2228 test_grad (theano.tensor.tests.test_basic.ErfinvTester) ... ok
#2229 test_grad_none (theano.tensor.tests.test_basic.ErfinvTester) ... ok
#2230 test_bad_build (theano.tensor.tests.test_basic.Exp2InplaceTester) ... ok
#2231 test_bad_runtime (theano.tensor.tests.test_basic.Exp2InplaceTester) ... ok
#2232 test_good (theano.tensor.tests.test_basic.Exp2InplaceTester) ... ok
#2233 test_grad (theano.tensor.tests.test_basic.Exp2InplaceTester) ... ok
#2234 test_grad_none (theano.tensor.tests.test_basic.Exp2InplaceTester) ... ok
#2235 test_bad_build (theano.tensor.tests.test_basic.Exp2Tester) ... ok
#2236 test_bad_runtime (theano.tensor.tests.test_basic.Exp2Tester) ... ok
#2237 test_good (theano.tensor.tests.test_basic.Exp2Tester) ... ok
#2238 test_grad (theano.tensor.tests.test_basic.Exp2Tester) ... ok
#2239 test_grad_none (theano.tensor.tests.test_basic.Exp2Tester) ... ok
#2240 test_bad_build (theano.tensor.tests.test_basic.ExpInplaceTester) ... ok
#2241 test_bad_runtime (theano.tensor.tests.test_basic.ExpInplaceTester) ... ok
#2242 test_good (theano.tensor.tests.test_basic.ExpInplaceTester) ... ok
#2243 test_grad (theano.tensor.tests.test_basic.ExpInplaceTester) ... ok
#2244 test_grad_none (theano.tensor.tests.test_basic.ExpInplaceTester) ... ok
#2245 test_bad_build (theano.tensor.tests.test_basic.ExpTester) ... ok
#2246 test_bad_runtime (theano.tensor.tests.test_basic.ExpTester) ... ok
#2247 test_good (theano.tensor.tests.test_basic.ExpTester) ... ok
#2248 test_grad (theano.tensor.tests.test_basic.ExpTester) ... ok
#2249 test_grad_none (theano.tensor.tests.test_basic.ExpTester) ... ok
#2250 test_bad_build (theano.tensor.tests.test_basic.Expm1InplaceTester) ... ok
#2251 test_bad_runtime (theano.tensor.tests.test_basic.Expm1InplaceTester) ... ok
#2252 test_good (theano.tensor.tests.test_basic.Expm1InplaceTester) ... ok
#2253 test_grad (theano.tensor.tests.test_basic.Expm1InplaceTester) ... ok
#2254 test_grad_none (theano.tensor.tests.test_basic.Expm1InplaceTester) ... ok
#2255 test_bad_build (theano.tensor.tests.test_basic.Expm1Tester) ... ok
#2256 test_bad_runtime (theano.tensor.tests.test_basic.Expm1Tester) ... ok
#2257 test_good (theano.tensor.tests.test_basic.Expm1Tester) ... ok
#2258 test_grad (theano.tensor.tests.test_basic.Expm1Tester) ... ok
#2259 test_grad_none (theano.tensor.tests.test_basic.Expm1Tester) ... ok
#2260 test_bad_build (theano.tensor.tests.test_basic.FloorInplaceTester) ... ok
#2261 test_bad_runtime (theano.tensor.tests.test_basic.FloorInplaceTester) ... ok
#2262 test_good (theano.tensor.tests.test_basic.FloorInplaceTester) ... ok
#2263 test_grad (theano.tensor.tests.test_basic.FloorInplaceTester) ... ok
#2264 test_grad_none (theano.tensor.tests.test_basic.FloorInplaceTester) ... ok
#2265 test_bad_build (theano.tensor.tests.test_basic.FloorTester) ... ok
#2266 test_bad_runtime (theano.tensor.tests.test_basic.FloorTester) ... ok
#2267 test_good (theano.tensor.tests.test_basic.FloorTester) ... ok
#2268 test_grad (theano.tensor.tests.test_basic.FloorTester) ... ok
#2269 test_grad_none (theano.tensor.tests.test_basic.FloorTester) ... ok
#2270 test_bad_build (theano.tensor.tests.test_basic.GammaInplaceTester) ... ok
#2271 test_bad_runtime (theano.tensor.tests.test_basic.GammaInplaceTester) ... ok
#2272 test_good (theano.tensor.tests.test_basic.GammaInplaceTester) ... ok
#2273 test_grad (theano.tensor.tests.test_basic.GammaInplaceTester) ... ok
#2274 test_grad_none (theano.tensor.tests.test_basic.GammaInplaceTester) ... ok
#2275 test_bad_build (theano.tensor.tests.test_basic.GammaTester) ... ok
#2276 test_bad_runtime (theano.tensor.tests.test_basic.GammaTester) ... ok
#2277 test_good (theano.tensor.tests.test_basic.GammaTester) ... ok
#2278 test_grad (theano.tensor.tests.test_basic.GammaTester) ... ok
#2279 test_grad_none (theano.tensor.tests.test_basic.GammaTester) ... ok
#2280 test_bad_build (theano.tensor.tests.test_basic.GammalnInplaceTester) ... ok
#2281 test_bad_runtime (theano.tensor.tests.test_basic.GammalnInplaceTester) ... ok
#2282 test_good (theano.tensor.tests.test_basic.GammalnInplaceTester) ... ok
#2283 test_grad (theano.tensor.tests.test_basic.GammalnInplaceTester) ... ok
#2284 test_grad_none (theano.tensor.tests.test_basic.GammalnInplaceTester) ... ok
#2285 test_bad_build (theano.tensor.tests.test_basic.GammalnTester) ... ok
#2286 test_bad_runtime (theano.tensor.tests.test_basic.GammalnTester) ... ok
#2287 test_good (theano.tensor.tests.test_basic.GammalnTester) ... ok
#2288 test_grad (theano.tensor.tests.test_basic.GammalnTester) ... ok
#2289 test_grad_none (theano.tensor.tests.test_basic.GammalnTester) ... ok
#2290 test_bad_build (theano.tensor.tests.test_basic.IntDivInplaceTester) ... ok
#2291 test_bad_runtime (theano.tensor.tests.test_basic.IntDivInplaceTester) ... ok
#2292 test_good (theano.tensor.tests.test_basic.IntDivInplaceTester) ... ok
#2293 test_grad (theano.tensor.tests.test_basic.IntDivInplaceTester) ... ok
#2294 test_grad_none (theano.tensor.tests.test_basic.IntDivInplaceTester) ... ok
#2295 test_bad_build (theano.tensor.tests.test_basic.IntDivTester) ... ok
#2296 test_bad_runtime (theano.tensor.tests.test_basic.IntDivTester) ... ok
#2297 test_good (theano.tensor.tests.test_basic.IntDivTester) ... ok
#2298 test_grad (theano.tensor.tests.test_basic.IntDivTester) ... ok
#2299 test_grad_none (theano.tensor.tests.test_basic.IntDivTester) ... ok
#2300 test_bad_build (theano.tensor.tests.test_basic.InvInplaceTester) ... ok
#2301 test_bad_runtime (theano.tensor.tests.test_basic.InvInplaceTester) ... ok
#2302 test_good (theano.tensor.tests.test_basic.InvInplaceTester) ... ok
#2303 test_grad (theano.tensor.tests.test_basic.InvInplaceTester) ... ok
#2304 test_grad_none (theano.tensor.tests.test_basic.InvInplaceTester) ... ok
#2305 test_bad_build (theano.tensor.tests.test_basic.InvTester) ... ok
#2306 test_bad_runtime (theano.tensor.tests.test_basic.InvTester) ... ok
#2307 test_good (theano.tensor.tests.test_basic.InvTester) ... ok
#2308 test_grad (theano.tensor.tests.test_basic.InvTester) ... ok
#2309 test_grad_none (theano.tensor.tests.test_basic.InvTester) ... ok
#2310 test_bad_build (theano.tensor.tests.test_basic.J0InplaceTester) ... ok
#2311 test_bad_runtime (theano.tensor.tests.test_basic.J0InplaceTester) ... ok
#2312 test_good (theano.tensor.tests.test_basic.J0InplaceTester) ... ok
#2313 test_grad (theano.tensor.tests.test_basic.J0InplaceTester) ... ok
#2314 test_grad_none (theano.tensor.tests.test_basic.J0InplaceTester) ... ok
#2315 test_bad_build (theano.tensor.tests.test_basic.J0Tester) ... ok
#2316 test_bad_runtime (theano.tensor.tests.test_basic.J0Tester) ... ok
#2317 test_good (theano.tensor.tests.test_basic.J0Tester) ... ok
#2318 test_grad (theano.tensor.tests.test_basic.J0Tester) ... ok
#2319 test_grad_none (theano.tensor.tests.test_basic.J0Tester) ... ok
#2320 test_bad_build (theano.tensor.tests.test_basic.J1InplaceTester) ... ok
#2321 test_bad_runtime (theano.tensor.tests.test_basic.J1InplaceTester) ... ok
#2322 test_good (theano.tensor.tests.test_basic.J1InplaceTester) ... ok
#2323 test_grad (theano.tensor.tests.test_basic.J1InplaceTester) ... ok
#2324 test_grad_none (theano.tensor.tests.test_basic.J1InplaceTester) ... ok
#2325 test_bad_build (theano.tensor.tests.test_basic.J1Tester) ... ok
#2326 test_bad_runtime (theano.tensor.tests.test_basic.J1Tester) ... ok
#2327 test_good (theano.tensor.tests.test_basic.J1Tester) ... ok
#2328 test_grad (theano.tensor.tests.test_basic.J1Tester) ... ok
#2329 test_grad_none (theano.tensor.tests.test_basic.J1Tester) ... ok
#2330 test_bad_build (theano.tensor.tests.test_basic.Log10InplaceTester) ... ok
#2331 test_bad_runtime (theano.tensor.tests.test_basic.Log10InplaceTester) ... ok
#2332 test_good (theano.tensor.tests.test_basic.Log10InplaceTester) ... ok
#2333 test_grad (theano.tensor.tests.test_basic.Log10InplaceTester) ... ok
#2334 test_grad_none (theano.tensor.tests.test_basic.Log10InplaceTester) ... ok
#2335 test_bad_build (theano.tensor.tests.test_basic.Log10Tester) ... ok
#2336 test_bad_runtime (theano.tensor.tests.test_basic.Log10Tester) ... ok
#2337 test_good (theano.tensor.tests.test_basic.Log10Tester) ... ok
#2338 test_grad (theano.tensor.tests.test_basic.Log10Tester) ... ok
#2339 test_grad_none (theano.tensor.tests.test_basic.Log10Tester) ... ok
#2340 test_bad_build (theano.tensor.tests.test_basic.Log1pInplaceTester) ... ok
#2341 test_bad_runtime (theano.tensor.tests.test_basic.Log1pInplaceTester) ... ok
#2342 test_good (theano.tensor.tests.test_basic.Log1pInplaceTester) ... ok
#2343 test_grad (theano.tensor.tests.test_basic.Log1pInplaceTester) ... ok
#2344 test_grad_none (theano.tensor.tests.test_basic.Log1pInplaceTester) ... ok
#2345 test_bad_build (theano.tensor.tests.test_basic.Log1pTester) ... ok
#2346 test_bad_runtime (theano.tensor.tests.test_basic.Log1pTester) ... ok
#2347 test_good (theano.tensor.tests.test_basic.Log1pTester) ... ok
#2348 test_grad (theano.tensor.tests.test_basic.Log1pTester) ... ok
#2349 test_grad_none (theano.tensor.tests.test_basic.Log1pTester) ... ok
#2350 test_bad_build (theano.tensor.tests.test_basic.Log2InplaceTester) ... ok
#2351 test_bad_runtime (theano.tensor.tests.test_basic.Log2InplaceTester) ... ok
#2352 test_good (theano.tensor.tests.test_basic.Log2InplaceTester) ... ok
#2353 test_grad (theano.tensor.tests.test_basic.Log2InplaceTester) ... ok
#2354 test_grad_none (theano.tensor.tests.test_basic.Log2InplaceTester) ... ok
#2355 test_bad_build (theano.tensor.tests.test_basic.Log2Tester) ... ok
#2356 test_bad_runtime (theano.tensor.tests.test_basic.Log2Tester) ... ok
#2357 test_good (theano.tensor.tests.test_basic.Log2Tester) ... ok
#2358 test_grad (theano.tensor.tests.test_basic.Log2Tester) ... ok
#2359 test_grad_none (theano.tensor.tests.test_basic.Log2Tester) ... ok
#2360 test_bad_build (theano.tensor.tests.test_basic.LogInplaceTester) ... ok
#2361 test_bad_runtime (theano.tensor.tests.test_basic.LogInplaceTester) ... ok
#2362 test_good (theano.tensor.tests.test_basic.LogInplaceTester) ... ok
#2363 test_grad (theano.tensor.tests.test_basic.LogInplaceTester) ... ok
#2364 test_grad_none (theano.tensor.tests.test_basic.LogInplaceTester) ... ok
#2365 test_bad_build (theano.tensor.tests.test_basic.LogTester) ... ok
#2366 test_bad_runtime (theano.tensor.tests.test_basic.LogTester) ... ok
#2367 test_good (theano.tensor.tests.test_basic.LogTester) ... ok
#2368 test_grad (theano.tensor.tests.test_basic.LogTester) ... ok
#2369 test_grad_none (theano.tensor.tests.test_basic.LogTester) ... ok
#2370 test_bad_build (theano.tensor.tests.test_basic.MaximumInplaceTester) ... ok
#2371 test_bad_runtime (theano.tensor.tests.test_basic.MaximumInplaceTester) ... ok
#2372 test_good (theano.tensor.tests.test_basic.MaximumInplaceTester) ... ok
#2373 test_grad (theano.tensor.tests.test_basic.MaximumInplaceTester) ... ok
#2374 test_grad_none (theano.tensor.tests.test_basic.MaximumInplaceTester) ... ok
#2375 test_bad_build (theano.tensor.tests.test_basic.MaximumTester) ... ok
#2376 test_bad_runtime (theano.tensor.tests.test_basic.MaximumTester) ... ok
#2377 test_good (theano.tensor.tests.test_basic.MaximumTester) ... ok
#2378 test_grad (theano.tensor.tests.test_basic.MaximumTester) ... ok
#2379 test_grad_none (theano.tensor.tests.test_basic.MaximumTester) ... ok
#2380 test_bad_build (theano.tensor.tests.test_basic.MinimumInplaceTester) ... ok
#2381 test_bad_runtime (theano.tensor.tests.test_basic.MinimumInplaceTester) ... ok
#2382 test_good (theano.tensor.tests.test_basic.MinimumInplaceTester) ... ok
#2383 test_grad (theano.tensor.tests.test_basic.MinimumInplaceTester) ... ok
#2384 test_grad_none (theano.tensor.tests.test_basic.MinimumInplaceTester) ... ok
#2385 test_bad_build (theano.tensor.tests.test_basic.MinimumTester) ... ok
#2386 test_bad_runtime (theano.tensor.tests.test_basic.MinimumTester) ... ok
#2387 test_good (theano.tensor.tests.test_basic.MinimumTester) ... ok
#2388 test_grad (theano.tensor.tests.test_basic.MinimumTester) ... ok
#2389 test_grad_none (theano.tensor.tests.test_basic.MinimumTester) ... ok
#2390 test_bad_build (theano.tensor.tests.test_basic.ModInplaceTester) ... ok
#2391 test_bad_runtime (theano.tensor.tests.test_basic.ModInplaceTester) ... ok
#2392 test_good (theano.tensor.tests.test_basic.ModInplaceTester) ... ok
#2393 test_grad (theano.tensor.tests.test_basic.ModInplaceTester) ... ok
#2394 test_grad_none (theano.tensor.tests.test_basic.ModInplaceTester) ... ok
#2395 test_bad_build (theano.tensor.tests.test_basic.ModTester) ... ok
#2396 test_bad_runtime (theano.tensor.tests.test_basic.ModTester) ... ok
#2397 test_good (theano.tensor.tests.test_basic.ModTester) ... ok
#2398 test_grad (theano.tensor.tests.test_basic.ModTester) ... ok
#2399 test_grad_none (theano.tensor.tests.test_basic.ModTester) ... ok
#2400 test_bad_build (theano.tensor.tests.test_basic.MulInplaceTester) ... ok
#2401 test_bad_runtime (theano.tensor.tests.test_basic.MulInplaceTester) ... ok
#2402 test_good (theano.tensor.tests.test_basic.MulInplaceTester) ... ok
#2403 test_grad (theano.tensor.tests.test_basic.MulInplaceTester) ... ok
#2404 test_grad_none (theano.tensor.tests.test_basic.MulInplaceTester) ... ok
#2405 test_bad_build (theano.tensor.tests.test_basic.MulTester) ... ok
#2406 test_bad_runtime (theano.tensor.tests.test_basic.MulTester) ... ok
#2407 test_good (theano.tensor.tests.test_basic.MulTester) ... ok
#2408 test_grad (theano.tensor.tests.test_basic.MulTester) ... ok
#2409 test_grad_none (theano.tensor.tests.test_basic.MulTester) ... ok
#2410 test_bad_build (theano.tensor.tests.test_basic.NegInplaceTester) ... ok
#2411 test_bad_runtime (theano.tensor.tests.test_basic.NegInplaceTester) ... ok
#2412 test_good (theano.tensor.tests.test_basic.NegInplaceTester) ... ok
#2413 test_grad (theano.tensor.tests.test_basic.NegInplaceTester) ... ok
#2414 test_grad_none (theano.tensor.tests.test_basic.NegInplaceTester) ... ok
#2415 test_bad_build (theano.tensor.tests.test_basic.NegTester) ... ok
#2416 test_bad_runtime (theano.tensor.tests.test_basic.NegTester) ... ok
#2417 test_good (theano.tensor.tests.test_basic.NegTester) ... ok
#2418 test_grad (theano.tensor.tests.test_basic.NegTester) ... ok
#2419 test_grad_none (theano.tensor.tests.test_basic.NegTester) ... ok
#2420 test_bad_build (theano.tensor.tests.test_basic.OnesLikeTester) ... ok
#2421 test_bad_runtime (theano.tensor.tests.test_basic.OnesLikeTester) ... ok
#2422 test_good (theano.tensor.tests.test_basic.OnesLikeTester) ... ok
#2423 test_grad (theano.tensor.tests.test_basic.OnesLikeTester) ... ok
#2424 test_grad_none (theano.tensor.tests.test_basic.OnesLikeTester) ... ok
#2425 test_bad_build (theano.tensor.tests.test_basic.PowInplaceTester) ... ok
#2426 test_bad_runtime (theano.tensor.tests.test_basic.PowInplaceTester) ... ok
#2427 test_good (theano.tensor.tests.test_basic.PowInplaceTester) ... ok
#2428 test_grad (theano.tensor.tests.test_basic.PowInplaceTester) ... ok
#2429 test_grad_none (theano.tensor.tests.test_basic.PowInplaceTester) ... ok
#2430 test_bad_build (theano.tensor.tests.test_basic.PowTester) ... ok
#2431 test_bad_runtime (theano.tensor.tests.test_basic.PowTester) ... ok
#2432 test_good (theano.tensor.tests.test_basic.PowTester) ... ok
#2433 test_grad (theano.tensor.tests.test_basic.PowTester) ... ok
#2434 test_grad_none (theano.tensor.tests.test_basic.PowTester) ... ok
#2435 test_bad_build (theano.tensor.tests.test_basic.PsiInplaceTester) ... ok
#2436 test_bad_runtime (theano.tensor.tests.test_basic.PsiInplaceTester) ... ok
#2437 test_good (theano.tensor.tests.test_basic.PsiInplaceTester) ... ok
#2438 test_grad (theano.tensor.tests.test_basic.PsiInplaceTester) ... ok
#2439 test_grad_none (theano.tensor.tests.test_basic.PsiInplaceTester) ... ok
#2440 test_bad_build (theano.tensor.tests.test_basic.PsiTester) ... ok
#2441 test_bad_runtime (theano.tensor.tests.test_basic.PsiTester) ... ok
#2442 test_good (theano.tensor.tests.test_basic.PsiTester) ... ok
#2443 test_grad (theano.tensor.tests.test_basic.PsiTester) ... ok
#2444 test_grad_none (theano.tensor.tests.test_basic.PsiTester) ... ok
#2445 test_bad_build (theano.tensor.tests.test_basic.Rad2degInplaceTester) ... ok
#2446 test_bad_runtime (theano.tensor.tests.test_basic.Rad2degInplaceTester) ... ok
#2447 test_good (theano.tensor.tests.test_basic.Rad2degInplaceTester) ... ok
#2448 test_grad (theano.tensor.tests.test_basic.Rad2degInplaceTester) ... ok
#2449 test_grad_none (theano.tensor.tests.test_basic.Rad2degInplaceTester) ... ok
#2450 test_bad_build (theano.tensor.tests.test_basic.Rad2degTester) ... ok
#2451 test_bad_runtime (theano.tensor.tests.test_basic.Rad2degTester) ... ok
#2452 test_good (theano.tensor.tests.test_basic.Rad2degTester) ... ok
#2453 test_grad (theano.tensor.tests.test_basic.Rad2degTester) ... ok
#2454 test_grad_none (theano.tensor.tests.test_basic.Rad2degTester) ... ok
#2455 test_bad_build (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroInplaceTester) ... ok
#2456 test_bad_runtime (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroInplaceTester) ... ok
#2457 test_good (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroInplaceTester) ... ok
#2458 test_grad (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroInplaceTester) ... ok
#2459 test_grad_none (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroInplaceTester) ... ok
#2460 test_bad_build (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroTester) ... ok
#2461 test_bad_runtime (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroTester) ... ok
#2462 test_good (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroTester) ... ok
#2463 test_grad (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroTester) ... ok
#2464 test_grad_none (theano.tensor.tests.test_basic.RoundHalfAwayFromZeroTester) ... ok
#2465 test_bad_build (theano.tensor.tests.test_basic.RoundHalfToEvenInplaceTester) ... ok
#2466 test_bad_runtime (theano.tensor.tests.test_basic.RoundHalfToEvenInplaceTester) ... ok
#2467 test_good (theano.tensor.tests.test_basic.RoundHalfToEvenInplaceTester) ... ok
#2468 test_grad (theano.tensor.tests.test_basic.RoundHalfToEvenInplaceTester) ... ok
#2469 test_grad_none (theano.tensor.tests.test_basic.RoundHalfToEvenInplaceTester) ... ok
#2470 test_bad_build (theano.tensor.tests.test_basic.RoundHalfToEvenTester) ... ok
#2471 test_bad_runtime (theano.tensor.tests.test_basic.RoundHalfToEvenTester) ... ok
#2472 test_good (theano.tensor.tests.test_basic.RoundHalfToEvenTester) ... ok
#2473 test_grad (theano.tensor.tests.test_basic.RoundHalfToEvenTester) ... ok
#2474 test_grad_none (theano.tensor.tests.test_basic.RoundHalfToEvenTester) ... ok
#2475 test_bad_build (theano.tensor.tests.test_basic.SecondBroadcastTester) ... ok
#2476 test_bad_runtime (theano.tensor.tests.test_basic.SecondBroadcastTester) ... ok
#2477 test_good (theano.tensor.tests.test_basic.SecondBroadcastTester) ... ok
#2478 test_grad (theano.tensor.tests.test_basic.SecondBroadcastTester) ... ok
#2479 test_grad_none (theano.tensor.tests.test_basic.SecondBroadcastTester) ... ok
#2480 test_bad_build (theano.tensor.tests.test_basic.SecondSameRankTester) ... ok
#2481 test_bad_runtime (theano.tensor.tests.test_basic.SecondSameRankTester) ... ok
#2482 test_good (theano.tensor.tests.test_basic.SecondSameRankTester) ... ok
#2483 test_grad (theano.tensor.tests.test_basic.SecondSameRankTester) ... ok
#2484 test_grad_none (theano.tensor.tests.test_basic.SecondSameRankTester) ... ok
#2485 test_bad_build (theano.tensor.tests.test_basic.SgnInplaceTester) ... ok
#2486 test_bad_runtime (theano.tensor.tests.test_basic.SgnInplaceTester) ... ok
#2487 test_good (theano.tensor.tests.test_basic.SgnInplaceTester) ... ok
#2488 test_grad (theano.tensor.tests.test_basic.SgnInplaceTester) ... ok
#2489 test_grad_none (theano.tensor.tests.test_basic.SgnInplaceTester) ... ok
#2490 test_bad_build (theano.tensor.tests.test_basic.SgnTester) ... ok
#2491 test_bad_runtime (theano.tensor.tests.test_basic.SgnTester) ... ok
#2492 test_good (theano.tensor.tests.test_basic.SgnTester) ... ok
#2493 test_grad (theano.tensor.tests.test_basic.SgnTester) ... ok
#2494 test_grad_none (theano.tensor.tests.test_basic.SgnTester) ... ok
#2495 test_bad_build (theano.tensor.tests.test_basic.SinInplaceTester) ... ok
#2496 test_bad_runtime (theano.tensor.tests.test_basic.SinInplaceTester) ... ok
#2497 test_good (theano.tensor.tests.test_basic.SinInplaceTester) ... ok
#2498 test_grad (theano.tensor.tests.test_basic.SinInplaceTester) ... ok
#2499 test_grad_none (theano.tensor.tests.test_basic.SinInplaceTester) ... ok
#2500 test_bad_build (theano.tensor.tests.test_basic.SinTester) ... ok
#2501 test_bad_runtime (theano.tensor.tests.test_basic.SinTester) ... ok
#2502 test_good (theano.tensor.tests.test_basic.SinTester) ... ok
#2503 test_grad (theano.tensor.tests.test_basic.SinTester) ... ok
#2504 test_grad_none (theano.tensor.tests.test_basic.SinTester) ... ok
#2505 test_bad_build (theano.tensor.tests.test_basic.SinhInplaceTester) ... ok
#2506 test_bad_runtime (theano.tensor.tests.test_basic.SinhInplaceTester) ... ok
#2507 test_good (theano.tensor.tests.test_basic.SinhInplaceTester) ... ok
#2508 test_grad (theano.tensor.tests.test_basic.SinhInplaceTester) ... ok
#2509 test_grad_none (theano.tensor.tests.test_basic.SinhInplaceTester) ... ok
#2510 test_bad_build (theano.tensor.tests.test_basic.SinhTester) ... ok
#2511 test_bad_runtime (theano.tensor.tests.test_basic.SinhTester) ... ok
#2512 test_good (theano.tensor.tests.test_basic.SinhTester) ... ok
#2513 test_grad (theano.tensor.tests.test_basic.SinhTester) ... ok
#2514 test_grad_none (theano.tensor.tests.test_basic.SinhTester) ... ok
#2515 test_bad_build (theano.tensor.tests.test_basic.SqrInplaceTester) ... ok
#2516 test_bad_runtime (theano.tensor.tests.test_basic.SqrInplaceTester) ... ok
#2517 test_good (theano.tensor.tests.test_basic.SqrInplaceTester) ... ok
#2518 test_grad (theano.tensor.tests.test_basic.SqrInplaceTester) ... ok
#2519 test_grad_none (theano.tensor.tests.test_basic.SqrInplaceTester) ... ok
#2520 test_bad_build (theano.tensor.tests.test_basic.SqrTester) ... ok
#2521 test_bad_runtime (theano.tensor.tests.test_basic.SqrTester) ... ok
#2522 test_good (theano.tensor.tests.test_basic.SqrTester) ... ok
#2523 test_grad (theano.tensor.tests.test_basic.SqrTester) ... ok
#2524 test_grad_none (theano.tensor.tests.test_basic.SqrTester) ... ok
#2525 test_bad_build (theano.tensor.tests.test_basic.SqrtInplaceTester) ... ok
#2526 test_bad_runtime (theano.tensor.tests.test_basic.SqrtInplaceTester) ... ok
#2527 test_good (theano.tensor.tests.test_basic.SqrtInplaceTester) ... ok
#2528 test_grad (theano.tensor.tests.test_basic.SqrtInplaceTester) ... ok
#2529 test_grad_none (theano.tensor.tests.test_basic.SqrtInplaceTester) ... ok
#2530 test_bad_build (theano.tensor.tests.test_basic.SqrtTester) ... ok
#2531 test_bad_runtime (theano.tensor.tests.test_basic.SqrtTester) ... ok
#2532 test_good (theano.tensor.tests.test_basic.SqrtTester) ... ok
#2533 test_grad (theano.tensor.tests.test_basic.SqrtTester) ... ok
#2534 test_grad_none (theano.tensor.tests.test_basic.SqrtTester) ... ok
#2535 test_bad_build (theano.tensor.tests.test_basic.SubInplaceTester) ... ok
#2536 test_bad_runtime (theano.tensor.tests.test_basic.SubInplaceTester) ... ok
#2537 test_good (theano.tensor.tests.test_basic.SubInplaceTester) ... ok
#2538 test_grad (theano.tensor.tests.test_basic.SubInplaceTester) ... ok
#2539 test_grad_none (theano.tensor.tests.test_basic.SubInplaceTester) ... ok
#2540 test_bad_build (theano.tensor.tests.test_basic.SubTester) ... ok
#2541 test_bad_runtime (theano.tensor.tests.test_basic.SubTester) ... ok
#2542 test_good (theano.tensor.tests.test_basic.SubTester) ... ok
#2543 test_grad (theano.tensor.tests.test_basic.SubTester) ... ok
#2544 test_grad_none (theano.tensor.tests.test_basic.SubTester) ... ok
#2545 test_bad_build (theano.tensor.tests.test_basic.SwitchTester) ... ok
#2546 test_bad_runtime (theano.tensor.tests.test_basic.SwitchTester) ... ok
#2547 test_good (theano.tensor.tests.test_basic.SwitchTester) ... ok
#2548 test_grad (theano.tensor.tests.test_basic.SwitchTester) ... ok
#2549 test_grad_none (theano.tensor.tests.test_basic.SwitchTester) ... ok
#2550 test_broadcasted (theano.tensor.tests.test_basic.T_Choose) ... ok
#2551 test_dtype_error (theano.tensor.tests.test_basic.T_Choose) ... ok
#2552 test_infer_shape (theano.tensor.tests.test_basic.T_Choose) ... ok
#2553 test_numpy_compare (theano.tensor.tests.test_basic.T_Choose) ... ok
#2554 test_numpy_compare_tuple (theano.tensor.tests.test_basic.T_Choose) ... ok
#2555 test_clip_repeat_grad (theano.tensor.tests.test_basic.T_Clip) ... ok
#2556 test_clip_repeat_verify_grad (theano.tensor.tests.test_basic.T_Clip) ... ok
#2557 test_complex_value (theano.tensor.tests.test_basic.T_Clip) ... ok
#2558 test_get_vector_length (theano.tensor.tests.test_basic.T_GetVectorLength) ... ok
#2559 Test that the broadcastable flags for the output of ... ok
#2560 Test that the broadcastable flag of the join axis ... ok
#2561 Test that joining together several inputs which are all ... ok
#2562 test_broadcastable_flags_many_dims_and_inputs (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2563 test_broadcastable_single_input_broadcastable_dimension (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2564 test_concatenate_same (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2565 test_infer_shape_join (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2566 Fast test of concatenate as this is an alias for join. ... ok
#2567 test_join_matrix0 (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2568 test_join_matrix1 (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2569 test_join_matrix1_using_horizontal_stack (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2570 test_join_matrix1_using_vertical_stack (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2571 constant join negative axis ... ok
#2572 variable join axis ... ok
#2573 variable join negative axis ... ok
#2574 test_join_matrix_dtypes (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2575 test_join_matrix_ints (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2576 test_join_scalar (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2577 test_join_vector (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2578 test_mixed_ndim_error (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2579 test_rebroadcast (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2580 test_roll (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2581 test_split_0elem (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2582 test_split_neg (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2583 test_stack_hessian (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2584 test_stack_hessian2 (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2585 test_stack_mixed_type_constants (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2586 Test the new numpy-like interface: stack(tensors, axis=0). ... /usr/lib/python2.7/unittest/case.py:329: DeprecationWarning: stack(*tensors) interface is deprecated, use stack(tensors, axis=0) instead.
  testMethod()
ok
#2587 test_stack_scalar (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2588 Test that calling stack() on scalars instantiates MakeVector, ... ok
#2589 Test that calling stack() on scalars instantiates MakeVector, ... ok
#2590 Test that calling stack() on scalars instantiates MakeVector, ... ok
#2591 test_stack_vector (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2592 test_vector_len (theano.tensor.tests.test_basic.T_Join_and_Split) ... ok
#2593 test_multiple_power (theano.tensor.tests.test_basic.T_Power) ... ok
#2594 test_numpy_compare (theano.tensor.tests.test_basic.T_Power) ... ok
#2595 test_wrong_shape (theano.tensor.tests.test_basic.T_Power) ... ok
#2596 test_basic0 (theano.tensor.tests.test_basic.T_Shape) ... ok
#2597 test_basic1 (theano.tensor.tests.test_basic.T_Shape) ... ok
#2598 test_basic2 (theano.tensor.tests.test_basic.T_Shape) ... ok
#2599 test_complex_all_ops (theano.tensor.tests.test_basic.T_add) ... ok
#2600 test_grad_col (theano.tensor.tests.test_basic.T_add) ... ok
#2601 test_grad_row (theano.tensor.tests.test_basic.T_add) ... ok
#2602 test_grad_scalar_l (theano.tensor.tests.test_basic.T_add) ... ok
#2603 test_grad_scalar_r (theano.tensor.tests.test_basic.T_add) ... ok
#2604 test2 (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2605 test2_invalid (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2606 test2_invalid_neg (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2607 test2_valid_neg (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2608 test3 (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2609 test_grad_argmax (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2610 test_grad_argmin (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2611 test_list (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2612 test_scalar (theano.tensor.tests.test_basic.T_argmin_argmax) ... ok
#2613 test_bool (theano.tensor.tests.test_basic.T_as_tensor_variable) ... ok
#2614 test_empty_dtype (theano.tensor.tests.test_basic.T_as_tensor_variable) ... ok
#2615 test_memmap (theano.tensor.tests.test_basic.T_as_tensor_variable) ... ok
#2616 test_ndarray_bool (theano.tensor.tests.test_basic.T_as_tensor_variable) ... ok
#2617 test_complex (theano.tensor.tests.test_basic.T_ceil) ... ok
#2618 test_impls (theano.tensor.tests.test_basic.T_divimpl) ... ok
#2619 test_complex (theano.tensor.tests.test_basic.T_exp) ... ok
#2620 test_grad_0 (theano.tensor.tests.test_basic.T_exp) ... ok
#2621 test_grad_1 (theano.tensor.tests.test_basic.T_exp) ... ok
#2622 test_int (theano.tensor.tests.test_basic.T_exp) ... ok
#2623 test_assert (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2624 test_copy (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2625 test_elemwise (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2626 test_get_scalar_constant_value (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2627 test_make_vector (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2628 test_numpy_array (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2629 test_second (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2630 test_shape_i (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2631 test_subtensor_of_constant (theano.tensor.tests.test_basic.T_get_scalar_constant_value) ... ok
#2632 test_fit_int64 (theano.tensor.tests.test_basic.T_long_tensor) ... ok
#2633 test_too_big (theano.tensor.tests.test_basic.T_long_tensor) ... ok
#2634 test0 (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2635 test1 (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2636 test2 (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2637 test2_invalid (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2638 test2_invalid_neg (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2639 test2_valid_neg (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2640 test3 (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2641 The test checks that the gradient of argmax(x).sum() is 0 ... ok
#2642 test_grad (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2643 test_multiple_axes (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2644 test_numpy_input (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2645 Ensure the original broadcastable flags are preserved by Max/Argmax. ... ok
#2646 test_zero_shape (theano.tensor.tests.test_basic.T_max_and_argmax) ... ok
#2647 test0 (theano.tensor.tests.test_basic.T_mean) ... ok
#2648 test_list (theano.tensor.tests.test_basic.T_mean) ... ok
#2649 test_mean_f16 (theano.tensor.tests.test_basic.T_mean) ... ok
#2650 test_regression_mean_of_ndarray_failure (theano.tensor.tests.test_basic.T_mean) ... ok
#2651 test2 (theano.tensor.tests.test_basic.T_min_max) ... ok
#2652 test2_invalid (theano.tensor.tests.test_basic.T_min_max) ... ok
#2653 test2_invalid_neg (theano.tensor.tests.test_basic.T_min_max) ... ok
#2654 test2_valid_neg (theano.tensor.tests.test_basic.T_min_max) ... ok
#2655 test3 (theano.tensor.tests.test_basic.T_min_max) ... ok
#2656 test3b (theano.tensor.tests.test_basic.T_min_max) ... ok
#2657 test_grad_max (theano.tensor.tests.test_basic.T_min_max) ... ok
#2658 test_grad_min (theano.tensor.tests.test_basic.T_min_max) ... ok
#2659 test_list (theano.tensor.tests.test_basic.T_min_max) ... ok
#2660 test_scalar (theano.tensor.tests.test_basic.T_min_max) ... ok
#2661 trigger bug in ticket #162 ... ok
#2662 Test the combined graph of the graph of outer ... ok
#2663 test_outer (theano.tensor.tests.test_basic.T_outer) ... ok
#2664 test_0 (theano.tensor.tests.test_basic.T_reshape) ... ok
#2665 test_bad_shape (theano.tensor.tests.test_basic.T_reshape) ... ok
#2666 test_empty_shp (theano.tensor.tests.test_basic.T_reshape) ... ok
#2667 test_m1 (theano.tensor.tests.test_basic.T_reshape) ... ok
#2668 test_reshape (theano.tensor.tests.test_basic.T_reshape) ... ok
#2669 test_reshape_long_in_shape (theano.tensor.tests.test_basic.T_reshape) ... ok
#2670 test0 (theano.tensor.tests.test_basic.T_scalarfromtensor) ... ok
#2671 test_list (theano.tensor.tests.test_basic.T_sum) ... ok
#2672 Ensure that overflow errors are a little bit harder to get ... ok
#2673 test_doubleswap (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2674 test_interface (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2675 test_no_dimensional_input (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2676 test_not_enough_dimension (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2677 test_numpy_compare (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2678 test_unidimensional_input (theano.tensor.tests.test_basic.T_swapaxes) ... ok
#2679 test0 (theano.tensor.tests.test_basic.T_tensorfromscalar) ... ok
#2680 test1 (theano.tensor.tests.test_basic.T_tensorfromscalar) ... ok
#2681 test2 (theano.tensor.tests.test_basic.T_tensorfromscalar) ... ok
#2682 test_bad_build (theano.tensor.tests.test_basic.TanInplaceTester) ... ok
#2683 test_bad_runtime (theano.tensor.tests.test_basic.TanInplaceTester) ... ok
#2684 test_good (theano.tensor.tests.test_basic.TanInplaceTester) ... ok
#2685 test_grad (theano.tensor.tests.test_basic.TanInplaceTester) ... ok
#2686 test_grad_none (theano.tensor.tests.test_basic.TanInplaceTester) ... ok
#2687 test_bad_build (theano.tensor.tests.test_basic.TanTester) ... ok
#2688 test_bad_runtime (theano.tensor.tests.test_basic.TanTester) ... ok
#2689 test_good (theano.tensor.tests.test_basic.TanTester) ... ok
#2690 test_grad (theano.tensor.tests.test_basic.TanTester) ... ok
#2691 test_grad_none (theano.tensor.tests.test_basic.TanTester) ... ok
#2692 test_bad_build (theano.tensor.tests.test_basic.TanhInplaceTester) ... ok
#2693 test_bad_runtime (theano.tensor.tests.test_basic.TanhInplaceTester) ... ok
#2694 test_good (theano.tensor.tests.test_basic.TanhInplaceTester) ... ok
#2695 test_grad (theano.tensor.tests.test_basic.TanhInplaceTester) ... ok
#2696 test_grad_none (theano.tensor.tests.test_basic.TanhInplaceTester) ... ok
#2697 test_bad_build (theano.tensor.tests.test_basic.TanhTester) ... ok
#2698 test_bad_runtime (theano.tensor.tests.test_basic.TanhTester) ... ok
#2699 test_good (theano.tensor.tests.test_basic.TanhTester) ... ok
#2700 test_grad (theano.tensor.tests.test_basic.TanhTester) ... ok
#2701 test_grad_none (theano.tensor.tests.test_basic.TanhTester) ... ok
#2702 Test behaviour of ARange Op on integer inputs ... ok
#2703 Test that arange constructor uses the correct default start ... ok
#2704 Test that arange constructor uses the correct default step ... ok
#2705 Checks that the same Op is returned on repeated calls to arange ... ok
#2706 Test arange constructor, on float32 outputs ... ok
#2707 Test arange constructor, on float64 outputs ... ok
#2708 test_infer_shape (theano.tensor.tests.test_basic.TestARange) ... ok
#2709 Test arange constructor, on integer outputs ... ok
#2710 Test that arange computes output type adequately ... ok
#2711 test_alloc_constant_folding (theano.tensor.tests.test_basic.TestAlloc) ... ok
#2712 test_alloc_output (theano.tensor.tests.test_basic.TestAlloc) ... ok
#2713 test_ones (theano.tensor.tests.test_basic.TestAlloc) ... ok
#2714 test_zeros (theano.tensor.tests.test_basic.TestAlloc) ... ok
#2715 test_above_output_len (theano.tensor.tests.test_basic.TestAsTensorVariable) ... ok
#2716 test_below_zero_output (theano.tensor.tests.test_basic.TestAsTensorVariable) ... ok
#2717 test_list (theano.tensor.tests.test_basic.TestAsTensorVariable) ... ok
#2718 test_one_output (theano.tensor.tests.test_basic.TestAsTensorVariable) ... ok
#2719 test_strip_leading_broadcastable (theano.tensor.tests.test_basic.TestAsTensorVariable) ... ok
#2720 test_infer_shape (theano.tensor.tests.test_basic.TestInferShape) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/tests/test_basic.py:7896: UserWarning: Tile op is deprecated, use tile function instead.
  [Tile(ndim)(advec, aivec_val)],
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/tests/test_basic.py:7904: UserWarning: Tile op is deprecated, use tile function instead.
  [Tile(ndim)(admat, aivec_val)],
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/tests/test_basic.py:7912: UserWarning: Tile op is deprecated, use tile function instead.
  [Tile(ndim)(adtens4, aivec_val)],
ok
#2721 Test the inversion of one permutation (int vector) ... ok
#2722 Test the inversion of several permutations at a time ... ok
#2723 test_mgrid_numpy_equiv (theano.tensor.tests.test_basic.TestNdGrid) ... ok
#2724 test_mgrid_theano_variable_numpy_equiv (theano.tensor.tests.test_basic.TestNdGrid) ... ok
#2725 test_ogrid_numpy_equiv (theano.tensor.tests.test_basic.TestNdGrid) ... ok
#2726 test_ogrid_theano_variable_numpy_equiv (theano.tensor.tests.test_basic.TestNdGrid) ... ok
#2727 Test PermuteRowElements(vector, vector) ... ok
#2728 Test PermuteRowElements(vector, matrix) ... ok
#2729 Test broadcasting in PermuteRowElements(matrix, vector) ... ok
#2730 Test PermuteRowElements(matrix, matrix) ... ok
#2731 Test permute_row_elements on a more complex broadcasting pattern: ... ok
#2732 test_bad_number_of_shape (theano.tensor.tests.test_basic.TestSpecifyShape) ... ok
#2733 test_bad_shape (theano.tensor.tests.test_basic.TestSpecifyShape) ... ok
#2734 test_argmax (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2735 test_argmin (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2736 test_argsort (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2737 test_clip (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2738 test_conj (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2739 test_cumprod (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2740 test_cumsum (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2741 test_diagonal (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2742 test_dot (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2743 test_ravel (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2744 test_real_imag (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2745 test_repeat (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2746 test_round (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/basic.py:2144: UserWarning: theano.tensor.round() changed its default from `half_away_from_zero` to `half_to_even` to have the same default as NumPy. Use the Theano flag `warn.round=False` to disable this warning.
  "theano.tensor.round() changed its default from"
ok
#2747 test_std (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2748 test_take (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2749 test_trace (theano.tensor.tests.test_basic.TestTensorInstanceMethods) ... ok
#2750 test_bad_build (theano.tensor.tests.test_basic.TrueDivInplaceTester) ... ok
#2751 test_bad_runtime (theano.tensor.tests.test_basic.TrueDivInplaceTester) ... ok
#2752 test_good (theano.tensor.tests.test_basic.TrueDivInplaceTester) ... ok
#2753 test_grad (theano.tensor.tests.test_basic.TrueDivInplaceTester) ... ok
#2754 test_grad_none (theano.tensor.tests.test_basic.TrueDivInplaceTester) ... ok
#2755 test_bad_build (theano.tensor.tests.test_basic.TrueDivTester) ... ok
#2756 test_bad_runtime (theano.tensor.tests.test_basic.TrueDivTester) ... ok
#2757 test_good (theano.tensor.tests.test_basic.TrueDivTester) ... ok
#2758 test_grad (theano.tensor.tests.test_basic.TrueDivTester) ... ok
#2759 test_grad_none (theano.tensor.tests.test_basic.TrueDivTester) ... ok
#2760 test_bad_build (theano.tensor.tests.test_basic.TruncInplaceTester) ... ok
#2761 test_bad_runtime (theano.tensor.tests.test_basic.TruncInplaceTester) ... ok
#2762 test_good (theano.tensor.tests.test_basic.TruncInplaceTester) ... ok
#2763 test_grad (theano.tensor.tests.test_basic.TruncInplaceTester) ... ok
#2764 test_grad_none (theano.tensor.tests.test_basic.TruncInplaceTester) ... ok
#2765 test_bad_build (theano.tensor.tests.test_basic.TruncTester) ... ok
#2766 test_bad_runtime (theano.tensor.tests.test_basic.TruncTester) ... ok
#2767 test_good (theano.tensor.tests.test_basic.TruncTester) ... ok
#2768 test_grad (theano.tensor.tests.test_basic.TruncTester) ... ok
#2769 test_grad_none (theano.tensor.tests.test_basic.TruncTester) ... ok
#2770 test_bad_build (theano.tensor.tests.test_basic.ZerosLikeTester) ... ok
#2771 test_bad_runtime (theano.tensor.tests.test_basic.ZerosLikeTester) ... ok
#2772 test_good (theano.tensor.tests.test_basic.ZerosLikeTester) ... ok
#2773 test_grad (theano.tensor.tests.test_basic.ZerosLikeTester) ... ok
#2774 test_grad_none (theano.tensor.tests.test_basic.ZerosLikeTester) ... ok
#2775 test_Op_dims (theano.tensor.tests.test_basic.t_dot) ... ok
#2776 test_align_1_1 (theano.tensor.tests.test_basic.t_dot) ... ok
#2777 test_align_1_2 (theano.tensor.tests.test_basic.t_dot) ... ok
#2778 test_align_1_3 (theano.tensor.tests.test_basic.t_dot) ... ok
#2779 test_align_2_1 (theano.tensor.tests.test_basic.t_dot) ... ok
#2780 test_align_2_2 (theano.tensor.tests.test_basic.t_dot) ... ok
#2781 test_align_2_3 (theano.tensor.tests.test_basic.t_dot) ... ok
#2782 test_align_3_1 (theano.tensor.tests.test_basic.t_dot) ... ok
#2783 test_align_3_2 (theano.tensor.tests.test_basic.t_dot) ... ok
#2784 test_align_3_3 (theano.tensor.tests.test_basic.t_dot) ... ok
#2785 test_broadcastable_patterns (theano.tensor.tests.test_basic.t_dot) ... ok
#2786 test_dot_0d_0d (theano.tensor.tests.test_basic.t_dot) ... ok
#2787 test_dot_0d_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2788 test_dot_0d_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2789 test_dot_0d_3d (theano.tensor.tests.test_basic.t_dot) ... ok
#2790 test_dot_1d0_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2791 test_dot_1d0_1d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2792 test_dot_1d0_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2793 test_dot_1d0_2d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2794 test_dot_1d_0d (theano.tensor.tests.test_basic.t_dot) ... ok
#2795 test_dot_1d_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2796 test_dot_1d_1d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2797 test_dot_1d_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2798 test_dot_1d_2d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2799 test_dot_1d_3d (theano.tensor.tests.test_basic.t_dot) ... ok
#2800 test_dot_2d0_0_2d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2801 test_dot_2d0_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2802 test_dot_2d0_1d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2803 test_dot_2d0_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2804 test_dot_2d0_2d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2805 test_dot_2d_0_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2806 test_dot_2d_0d (theano.tensor.tests.test_basic.t_dot) ... ok
#2807 test_dot_2d_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2808 test_dot_2d_1d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2809 test_dot_2d_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2810 test_dot_2d_2d0 (theano.tensor.tests.test_basic.t_dot) ... ok
#2811 test_dot_2d_3d (theano.tensor.tests.test_basic.t_dot) ... ok
#2812 test_dot_3d_0d (theano.tensor.tests.test_basic.t_dot) ... ok
#2813 test_dot_3d_1d (theano.tensor.tests.test_basic.t_dot) ... ok
#2814 test_dot_3d_2d (theano.tensor.tests.test_basic.t_dot) ... ok
#2815 test_dot_3d_3d (theano.tensor.tests.test_basic.t_dot) ... ok
#2816 test_grad (theano.tensor.tests.test_basic.t_dot) ... ok
#2817 test_arithmetic_cast (theano.tensor.tests.test_basic.test_arithmetic_cast) ... SKIP: Known issue withnumpy see #761
#2818 test_and (theano.tensor.tests.test_basic.test_bitwise) ... ok
#2819 test_eye (theano.tensor.tests.test_basic.test_bitwise) ... ok
#2820 test_inv (theano.tensor.tests.test_basic.test_bitwise) ... ok
#2821 test_or (theano.tensor.tests.test_basic.test_bitwise) ... ok
#2822 test_xor (theano.tensor.tests.test_basic.test_bitwise) ... ok
#2823 test_broadcast_bigdim (theano.tensor.tests.test_basic.test_broadcast) ... ok
#2824 test_infer_shape (theano.tensor.tests.test_basic.test_broadcast) ... ok
#2825 test_patternbroadcast (theano.tensor.tests.test_basic.test_broadcast) ... ok
#2826 test that the unbroadcast fct don't insert not needed broadcast ... ok
#2827 test_allclose (theano.tensor.tests.test_basic.test_comparison) ... ok
#2828 test_eq (theano.tensor.tests.test_basic.test_comparison) ... ok
#2829 test_ge (theano.tensor.tests.test_basic.test_comparison) ... ok
#2830 test_gt (theano.tensor.tests.test_basic.test_comparison) ... ok
#2831 test_isclose (theano.tensor.tests.test_basic.test_comparison) ... ok
#2832 test_le (theano.tensor.tests.test_basic.test_comparison) ... ok
#2833 test_lt (theano.tensor.tests.test_basic.test_comparison) ... ok
#2834 test_neq (theano.tensor.tests.test_basic.test_comparison) ... ok
#2835 test_fail (theano.tensor.tests.test_basic.test_complex_mod) ... ok
#2836 grad: Test returning a single zero value from grad ... ok
#2837 grad: Test passing a single variable param ... ok
#2838 grad: Test returning some zero value from grad ... ok
#2839 grad: Test passing multiple variable params ... ok
#2840 grad: Test that a non-scalar cost raises a TypeError ... ok
#2841 Tests that the theano grad method returns a list if it is passed a list ... ok
#2842 Ensure that a zero gradient has the proper shape. ... ok
#2843 Matrix reciprocal by gradient descent ... ok
#2844 test_flatnonzero (theano.tensor.tests.test_basic.test_nonzero) ... ok
#2845 test_nonzero (theano.tensor.tests.test_basic.test_nonzero) ... ok
#2846 test_nonzero_values (theano.tensor.tests.test_basic.test_nonzero) ... ok
#2847 Ensure dtype string comparisons are consistent. ... ok
#2848 A copy or deepcopy of the ndarray type should not create a new object. ... ok
#2849 test_interface (theano.tensor.tests.test_basic.test_ptp) ... ok
#2850 test_matrix_first_axis (theano.tensor.tests.test_basic.test_ptp) ... ok
#2851 test_matrix_neg_axis (theano.tensor.tests.test_basic.test_ptp) ... ok
#2852 test_matrix_no_axis (theano.tensor.tests.test_basic.test_ptp) ... ok
#2853 test_matrix_second_axis (theano.tensor.tests.test_basic.test_ptp) ... ok
#2854 Should return 0 for all scalar ... ok
#2855 test_vector (theano.tensor.tests.test_basic.test_ptp) ... ok
#2856 test_matrix (theano.tensor.tests.test_basic.test_size) ... ok
#2857 test_scalar (theano.tensor.tests.test_basic.test_size) ... ok
#2858 test_shared (theano.tensor.tests.test_basic.test_size) ... ok
#2859 test_vector (theano.tensor.tests.test_basic.test_size) ... ok
#2860 test0 (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2861 test_broadcastable1 (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2862 test_broadcastable2 (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2863 test_raise_error (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2864 test_scalar0 (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2865 test_scalar_axes (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2866 test_weird_valid_axes (theano.tensor.tests.test_basic.test_tensordot) ... ok
#2867 test_tri (theano.tensor.tests.test_basic.test_triangle) ... ok
#2868 test_tril_triu (theano.tensor.tests.test_basic.test_triangle) ... ok
#2869 theano.tensor.tests.test_basic.test_py_c_match ... ok
#2870 theano.tensor.tests.test_basic.test_eye('int8', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int8', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int16', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int32', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('int64', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float32', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('float64', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint8', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('uint16', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex64', 5, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3, 5) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 5, 3) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3, 3, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3, 5, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 3, 5, -1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 5, 3, 1) ... ok
   theano.tensor.tests.test_basic.test_eye('complex128', 5, 3, -1) ... ok
#2871 theano.tensor.tests.test_basic.test_identity('int8',) ... ok
   theano.tensor.tests.test_basic.test_identity('int16',) ... ok
   theano.tensor.tests.test_basic.test_identity('int32',) ... ok
   theano.tensor.tests.test_basic.test_identity('int64',) ... ok
   theano.tensor.tests.test_basic.test_identity('float32',) ... ok
   theano.tensor.tests.test_basic.test_identity('float64',) ... ok
   theano.tensor.tests.test_basic.test_identity('uint8',) ... ok
   theano.tensor.tests.test_basic.test_identity('uint16',) ... ok
   theano.tensor.tests.test_basic.test_identity('complex64',) ... ok
   theano.tensor.tests.test_basic.test_identity('complex128',) ... ok
#2872 theano.tensor.tests.test_basic.test_batched_dot ... ok
#2873 theano.tensor.tests.test_basic.test_batched_dot_not_contiguous(0,) ... ok
   theano.tensor.tests.test_basic.test_batched_dot_not_contiguous(1,) ... ok
#2874 theano.tensor.tests.test_basic.test_batched_tensordot ... ok
#2875 theano.tensor.tests.test_basic.test_tensor_values_eq_approx ... ok
#2876 theano.tensor.tests.test_basic.test_nan_inf_constant_signature ... ok
#2877 theano.tensor.tests.test_basic.test_isnan ... ok
#2878 theano.tensor.tests.test_basic.test_basic_allclose ... ok
#2879 Test join to work inplace. ... ok
#2880 Test join when only 1 input is given. ... ok
#2881 theano.tensor.tests.test_basic.test_make_column_matrix_broadcastable ... ok
#2882 theano.tensor.tests.test_basic.test_flatten_outdimNone ... ok
#2883 theano.tensor.tests.test_basic.test_flatten_scalar ... ok
#2884 theano.tensor.tests.test_basic.test_flatten_outdim1 ... ok
#2885 theano.tensor.tests.test_basic.test_flatten_outdim2 ... ok
#2886 theano.tensor.tests.test_basic.test_flatten_outdim2_of_3 ... ok
#2887 theano.tensor.tests.test_basic.test_flatten_broadcastable ... ok
#2888 theano.tensor.tests.test_basic.test_flatten_outdim_invalid ... ok
#2889 tests is_flat method for constant and symbolic variables, ... ok
#2890 theano.tensor.tests.test_basic.test_tile ... ok
#2891 theano.tensor.tests.test_basic.test_tile_grad ... ok
#2892 theano.tensor.tests.test_basic.test_smallest_stack ... ok
#2893 theano.tensor.tests.test_basic.test_smallest ... ok
#2894 theano.tensor.tests.test_basic.test_reshape_member_fn ... ok
#2895 theano.tensor.tests.test_basic.test_var ... ok
#2896 theano.tensor.tests.test_basic.test_default ... ok
#2897 theano.tensor.tests.test_basic.test_default_state ... ok
#2898 theano.tensor.tests.test_basic.test_autocast ... ok
#2899 theano.tensor.tests.test_basic.test_len ... ok
#2900 We add this test as not all language and C implementation give the same ... ok
#2901 Confirm that divmod is equivalent to the python version. ... ok
#2902 This test generate an Elemwise of Composite as: ... ok
#2903 theano.tensor.tests.test_basic.test_unalign ... ok
#2904 theano.tensor.tests.test_basic.test_dimshuffle_duplicate ... ok
#2905 theano.tensor.tests.test_basic.test_transpose ... ok
#2906 theano.tensor.tests.test_basic.test_stacklists ... ok
#2907 theano.tensor.tests.test_basic.test_norm ... ok
#2908 theano.tensor.tests.test_basic.test_allocempty ... ok
#2909 theano.tensor.tests.test_basic.test_symbolic_slice ... ok
#2910 test0 (theano.tensor.tests.test_blas.T_real_matrix) ... ok
#2911 test_dot22 (theano.tensor.tests.test_blas.TestBlasStrides) ... ok
#2912 test_dot22scalar (theano.tensor.tests.test_blas.TestBlasStrides) ... ok
#2913 test_gemm (theano.tensor.tests.test_blas.TestBlasStrides) ... ok
#2914 test_gemm_non_contiguous: Test if GEMM works well with non-contiguous matrices. ... ok
#2915 test_gemv (theano.tensor.tests.test_blas.TestBlasStrides) ... ok
#2916 test_ger_strides (theano.tensor.tests.test_blas.TestBlasStrides) ... ok
#2917 test_a_strides (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2918 test_a_strides_transpose (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2919 test_default_beta_y (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2920 test_simple (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2921 test_simple_transpose (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2922 test_upcasting_scalar_nogemv (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2923 test_x_stride (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2924 test_x_stride_transpose (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2925 test_y_stride (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2926 test_y_stride_transpose (theano.tensor.tests.test_blas.TestDgemv) ... ok
#2927 Test matrix dot vector ... ok
#2928 Test vector dot matrix ... ok
#2929 Currently we generate a gemv for that case ... ok
#2930 test_gemv1 (theano.tensor.tests.test_blas.TestGemv) ... ok
#2931 test vector2+dot(vector1,matrix) ... ok
#2932 test gemv with some broadcasted input ... ok
#2933 test_gemv_dimensions (theano.tensor.tests.test_blas.TestGemv) ... ok
#2934 test_A_plus_outer (theano.tensor.tests.test_blas.TestGer) ... ok
#2935 test_A_plus_scaled_outer (theano.tensor.tests.test_blas.TestGer) ... ok
#2936 test local_gemm_to_ger opt ... ok
#2937 test local_gemm_to_ger opt ... ok
#2938 test local_gemm_to_ger opt ... ok
#2939 test local_gemm_to_ger opt ... ok
#2940 test_c128_1_9 (theano.tensor.tests.test_blas.TestGer) ... ok
#2941 test_c64_7_1 (theano.tensor.tests.test_blas.TestGer) ... ok
#2942 test_f32_0_0 (theano.tensor.tests.test_blas.TestGer) ... ok
#2943 test_f32_0_1 (theano.tensor.tests.test_blas.TestGer) ... ok
#2944 test_f32_1_0 (theano.tensor.tests.test_blas.TestGer) ... ok
#2945 test_f32_1_1 (theano.tensor.tests.test_blas.TestGer) ... ok
#2946 test_f32_1_2 (theano.tensor.tests.test_blas.TestGer) ... ok
#2947 test_f32_4_4 (theano.tensor.tests.test_blas.TestGer) ... ok
#2948 test_f32_7_1 (theano.tensor.tests.test_blas.TestGer) ... ok
#2949 test_f64_4_5 (theano.tensor.tests.test_blas.TestGer) ... ok
#2950 test_inplace (theano.tensor.tests.test_blas.TestGer) ... ok
#2951 test_outer (theano.tensor.tests.test_blas.TestGer) ... ok
#2952 test_scaled_A_plus_scaled_outer (theano.tensor.tests.test_blas.TestGer) ... ok
#2953 test_eq (theano.tensor.tests.test_blas.TestGer_OpContract) ... ok
#2954 test_hash (theano.tensor.tests.test_blas.TestGer_OpContract) ... ok
#2955 test_name (theano.tensor.tests.test_blas.TestGer_OpContract) ... ok
#2956 test_fails_for_mixed_dtypes (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2957 test_fails_for_nonmatrix_A (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2958 test_fails_for_nonscalar_alpha (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2959 test_fails_for_nonvector_x_or_y (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2960 test_fails_on_invalid_dtypes (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2961 test_works_on_all_valid_dtypes (theano.tensor.tests.test_blas.TestGer_make_node) ... ok
#2962 test_a_strides (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2963 test_a_strides_transpose (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2964 test_default_beta_y (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2965 test_simple (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2966 test_simple_transpose (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2967 test_upcasting_scalar_nogemv (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2968 test_x_stride (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2969 test_x_stride_transpose (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2970 test_y_stride (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2971 test_y_stride_transpose (theano.tensor.tests.test_blas.TestSgemv) ... ok
#2972 Test that it works on scalar constants ... ok
#2973 Test that it fails on nonscalar constants ... ok
#2974 Test that it works on scalar variables ... ok
#2975 Test that it fails on nonscalar variables ... ok
#2976 test0 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2977 test0a (theano.tensor.tests.test_blas.t_gemm) ... ok
#2978 test10 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2979 test11 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2980 test12 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2981 test2 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2982 test4 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2983 test5 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2984 test6 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2985 test7 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2986 test8 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2987 test9 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2988 test that only first input can be overwritten ... ok
#2989 test that only first input can be overwritten ... ok
#2990 test that only first input can be overwritten ... ok
#2991 test that only first input can be overwritten ... ok
#2992 test that dot args can be aliased ... ok
#2993 test_factorised_scalar (theano.tensor.tests.test_blas.t_gemm) ... ok
#2994 test_non_contiguous (theano.tensor.tests.test_blas.t_gemm) ... ok
#2995 test_shape_0 (theano.tensor.tests.test_blas.t_gemm) ... ok
#2996 test_transposes (theano.tensor.tests.test_blas.t_gemm) ... ok
#2997 test_dot22 (theano.tensor.tests.test_blas.test_infer_shape) ... ok
#2998 test_dot22scalar (theano.tensor.tests.test_blas.test_infer_shape) ... ok
#2999 test_gemm (theano.tensor.tests.test_blas.test_infer_shape) ... ok
#3000 test_gemv (theano.tensor.tests.test_blas.test_infer_shape) ... ok
#3001 test_ger (theano.tensor.tests.test_blas.test_infer_shape) ... ok
#3002 theano.tensor.tests.test_blas.test_dot_eq ... ok
#3003 theano.tensor.tests.test_blas.test_res_is_a ... ok
#3004 Many subgraphs whose dots can be eliminated ... ok
#3005 This is the pattern that shows up in the autoencoder ... ok
#3006 theano.tensor.tests.test_blas.test_gemm_canonicalize ... ok
#3007 theano.tensor.tests.test_blas.test_gemm_factor ... ok
#3008 theano.tensor.tests.test_blas.test_upcasting_scalar_nogemm ... ok
#3009 theano.tensor.tests.test_blas.test_gemm_nested ... ok
#3010 theano.tensor.tests.test_blas.test_gemm_opt_wishlist ... ok
#3011 Many subgraphs whose dots can be eliminated.  This adds a ... ok
#3012 theano.tensor.tests.test_blas.test_gemm_opt_vector_stuff ... ok
#3013 This test that the gemm optimizer remove the dot22 that was ... ok
#3014 theano.tensor.tests.test_blas.test_inplace0 ... ok
#3015 theano.tensor.tests.test_blas.test_inplace1 ... ok
#3016 theano.tensor.tests.test_blas.test_dot22 ... ok
#3017 theano.tensor.tests.test_blas.test_dot22scalar ... ok
#3018 Test that in `dot22_to_dot22scalar` we properly cast integers to floats. ... ok
#3019 This test that the bug in gh-1507 is really fixed ... ok
#3020 theano.tensor.tests.test_blas.test_dot_w_self ... ok
#3021 test_dot22 (theano.tensor.tests.test_blas_c.TestBlasStrides) ... ok
#3022 test_dot22scalar (theano.tensor.tests.test_blas_c.TestBlasStrides) ... ok
#3023 test_gemm (theano.tensor.tests.test_blas_c.TestBlasStrides) ... ok
#3024 test_gemm_non_contiguous: Test if GEMM works well with non-contiguous matrices. ... ok
#3025 test_gemv (theano.tensor.tests.test_blas_c.TestBlasStrides) ... ok
#3026 test_ger_strides (theano.tensor.tests.test_blas_c.TestBlasStrides) ... ok
#3027 test_dot22 (theano.tensor.tests.test_blas_c.TestBlasStridesC) ... ok
#3028 test_dot22scalar (theano.tensor.tests.test_blas_c.TestBlasStridesC) ... ok
#3029 test_gemm (theano.tensor.tests.test_blas_c.TestBlasStridesC) ... ok
#3030 test_gemm_non_contiguous: Test if GEMM works well with non-contiguous matrices. ... ok
#3031 test_gemv (theano.tensor.tests.test_blas_c.TestBlasStridesC) ... ok
#3032 test_ger_strides (theano.tensor.tests.test_blas_c.TestBlasStridesC) ... ok
#3033 test_force_gemv_init (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3034 test_gemv1 (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3035 test_gemv_dimensions (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3036 test_multiple_inplace (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3037 test_nan_beta_0 (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3038 test_optimizations_mv (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3039 test_optimizations_vm (theano.tensor.tests.test_blas_c.TestCGemv) ... ok
#3040 test_a_strides (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3041 test_a_strides_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3042 test_default_beta_y (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3043 test_simple (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3044 test_simple_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3045 test_upcasting_scalar_nogemv (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3046 test_x_stride (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3047 test_x_stride_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3048 test_y_stride (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3049 test_y_stride_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat32) ... ok
#3050 test_a_strides (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3051 test_a_strides_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3052 test_default_beta_y (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3053 test_simple (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3054 test_simple_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3055 test_upcasting_scalar_nogemv (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3056 test_x_stride (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3057 test_x_stride_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3058 test_y_stride (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3059 test_y_stride_transpose (theano.tensor.tests.test_blas_c.TestCGemvFloat64) ... ok
#3060 test_A_plus_outer (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3061 test_A_plus_scaled_outer (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3062 test_eq (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3063 test_hash (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3064 test_int_fails (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3065 test_optimization_pipeline (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3066 test_optimization_pipeline_float (theano.tensor.tests.test_blas_c.TestCGer) ... ok
#3067 test_dot22 (theano.tensor.tests.test_blas_scipy.TestBlasStrides) ... ok
#3068 test_dot22scalar (theano.tensor.tests.test_blas_scipy.TestBlasStrides) ... ok
#3069 test_gemm (theano.tensor.tests.test_blas_scipy.TestBlasStrides) ... ok
#3070 test_gemm_non_contiguous: Test if GEMM works well with non-contiguous matrices. ... ok
#3071 test_gemv (theano.tensor.tests.test_blas_scipy.TestBlasStrides) ... ok
#3072 test_ger_strides (theano.tensor.tests.test_blas_scipy.TestBlasStrides) ... ok
#3073 test_dot22 (theano.tensor.tests.test_blas_scipy.TestBlasStridesScipy) ... ok
#3074 test_dot22scalar (theano.tensor.tests.test_blas_scipy.TestBlasStridesScipy) ... ok
#3075 test_gemm (theano.tensor.tests.test_blas_scipy.TestBlasStridesScipy) ... ok
#3076 test_gemm_non_contiguous: Test if GEMM works well with non-contiguous matrices. ... ok
#3077 test_gemv (theano.tensor.tests.test_blas_scipy.TestBlasStridesScipy) ... ok
#3078 test_ger_strides (theano.tensor.tests.test_blas_scipy.TestBlasStridesScipy) ... ok
#3079 test_A_plus_outer (theano.tensor.tests.test_blas_scipy.TestScipyGer) ... ok
#3080 test_A_plus_scaled_outer (theano.tensor.tests.test_blas_scipy.TestScipyGer) ... ok
#3081 test_outer (theano.tensor.tests.test_blas_scipy.TestScipyGer) ... ok
#3082 test_scaled_A_plus_scaled_outer (theano.tensor.tests.test_blas_scipy.TestScipyGer) ... ok
#3083 test_0 (theano.tensor.tests.test_casting.test_casting) ... ok
#3084 test_basic (theano.tensor.tests.test_casting.test_casting) ... ok
#3085 test_bug_complext_10_august_09 (theano.tensor.tests.test_casting.test_casting) ... ok
#3086 test_convert_to_complex (theano.tensor.tests.test_casting.test_casting) ... ok
#3087 test_illegal (theano.tensor.tests.test_casting.test_casting) ... ok
#3088 test0 (theano.tensor.tests.test_complex.TestRealImag) ... ok
#3089 test_abs_grad (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_abs_grad: Complex grads not enabled, see #178
#3090 test_cast (theano.tensor.tests.test_complex.TestRealImag) ... ok
#3091 test_complex (theano.tensor.tests.test_complex.TestRealImag) ... ok
#3092 test_complex_grads (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_complex_grads: Complex grads not enabled, see #178
#3093 test_mul_mixed (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_mul_mixed: Complex grads not enabled, see #178
#3094 test_mul_mixed0 (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_mul_mixed0: Complex grads not enabled, see #178
#3095 test_mul_mixed1 (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_mul_mixed1: Complex grads not enabled, see #178
#3096 test_on_real_input (theano.tensor.tests.test_complex.TestRealImag) ... ok
#3097 test_polar_grads (theano.tensor.tests.test_complex.TestRealImag) ... SKIP: Skipping test: test_polar_grads: Complex grads not enabled, see #178
#3098 test_mean_custom_dtype (theano.tensor.tests.test_elemwise.T_mean_dtype) ... ok
#3099 test_mean_default_dtype (theano.tensor.tests.test_elemwise.T_mean_dtype) ... ok
#3100 test_mean_precision (theano.tensor.tests.test_elemwise.T_mean_dtype) ... ok
#3101 test_prod_without_zeros_custom_acc_dtype (theano.tensor.tests.test_elemwise.T_prod_without_zeros_dtype) ... ok
#3102 test_prod_without_zeros_custom_dtype (theano.tensor.tests.test_elemwise.T_prod_without_zeros_dtype) ... ok
#3103 test_prod_without_zeros_default_acc_dtype (theano.tensor.tests.test_elemwise.T_prod_without_zeros_dtype) ... ok
#3104 test_prod_without_zeros_default_dtype (theano.tensor.tests.test_elemwise.T_prod_without_zeros_dtype) ... ok
#3105 test_reduce_custom_acc_dtype (theano.tensor.tests.test_elemwise.T_reduce_dtype) ... ok
#3106 test_reduce_custom_dtype (theano.tensor.tests.test_elemwise.T_reduce_dtype) ... ok
#3107 test_reduce_default_acc_dtype (theano.tensor.tests.test_elemwise.T_reduce_dtype) ... ok
#3108 test_reduce_default_dtype (theano.tensor.tests.test_elemwise.T_reduce_dtype) ... ok
#3109 test_reduce_precision (theano.tensor.tests.test_elemwise.T_reduce_dtype) ... ok
#3110 test_all_grad (theano.tensor.tests.test_elemwise.TestBitOpReduceGrad) ... ok
#3111 test_any_grad (theano.tensor.tests.test_elemwise.TestBitOpReduceGrad) ... ok
#3112 test_elemwise_grad_bool (theano.tensor.tests.test_elemwise.TestElemwise) ... ok
#3113 test_infer_shape (theano.tensor.tests.test_elemwise.TestElemwise) ... ok
#3114 test_input_dimensions_overflow (theano.tensor.tests.test_elemwise.TestElemwise) ... ok
#3115 test_c (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3116 test_c_inplace (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3117 test_fill (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3118 test_fill_grad (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3119 test_fill_var (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3120 test_perform (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3121 test_perform_inplace (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3122 test_same_inputs (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3123 test_weird_strides (theano.tensor.tests.test_elemwise.test_Broadcast) ... ok
#3124 test_c (theano.tensor.tests.test_elemwise.test_CAReduce) ... ok
#3125 test_c_nan (theano.tensor.tests.test_elemwise.test_CAReduce) ... ok
#3126 test_infer_shape (theano.tensor.tests.test_elemwise.test_CAReduce) ... ok
#3127 test_perform (theano.tensor.tests.test_elemwise.test_CAReduce) ... ok
#3128 test_perform_nan (theano.tensor.tests.test_elemwise.test_CAReduce) ... ok
#3129 test_c_or_py (theano.tensor.tests.test_elemwise.test_DimShuffle) ... ok
#3130 test_infer_shape (theano.tensor.tests.test_elemwise.test_DimShuffle) ... ok
#3131 test_perform (theano.tensor.tests.test_elemwise.test_DimShuffle) ... ok
#3132 test_too_big_rank (theano.tensor.tests.test_elemwise.test_DimShuffle) ... ok
#3133 test_isinf (theano.tensor.tests.test_elemwise.test_IsInf_IsNan) ... ok
#3134 test_isnan (theano.tensor.tests.test_elemwise.test_IsInf_IsNan) ... ok
#3135 test_mul_without_zeros_zeros (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3136 test_other_grad_tests (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3137 test_pickle_bug (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3138 test_prod_no_zeros_in_input (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3139 test_prod_without_zeros (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3140 test_prod_without_zeros_grad (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3141 test_verify_grad (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3142 test_verify_grad_with_zeros (theano.tensor.tests.test_elemwise.test_Prod) ... ok
#3143 test_argmax_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3144 test_max_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3145 test_mean_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3146 test_min_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3147 test_sum_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3148 test_var_axes (theano.tensor.tests.test_elemwise.test_reduce_axes) ... ok
#3149 A user test that failed. ... ok
#3150 theano.tensor.tests.test_elemwise.test_clip_grad ... ok
#3151 Test absence of useless sum. ... ok
#3152 theano.tensor.tests.test_elemwise.test_elemwise_grad_broadcast ... ok
#3153 theano.tensor.tests.test_elemwise.test_clip_grad_int ... ok
#3154 Regression test for unimplemented gradient in an Elemwise Op. ... ok
#3155 test_op (theano.tensor.tests.test_extra_ops.CompressTester) ... ok
#3156 test_grad (theano.tensor.tests.test_extra_ops.SqueezeTester) ... ok
#3157 test_infer_shape (theano.tensor.tests.test_extra_ops.SqueezeTester) ... ok
#3158 test_op (theano.tensor.tests.test_extra_ops.SqueezeTester) ... ok
#3159 test_var_interface (theano.tensor.tests.test_extra_ops.SqueezeTester) ... ok
#3160 test_infer_shape (theano.tensor.tests.test_extra_ops.TestBartlett) ... ok
#3161 test_perform (theano.tensor.tests.test_extra_ops.TestBartlett) ... ok
#3162 test_bincountFn (theano.tensor.tests.test_extra_ops.TestBinCount) ... ok
#3163 test_cum_op (theano.tensor.tests.test_extra_ops.TestCumOp) ... ok
#3164 test_grad (theano.tensor.tests.test_extra_ops.TestCumOp) ... ok
#3165 test_infer_shape (theano.tensor.tests.test_extra_ops.TestCumOp) ... ok
#3166 test_diffOp (theano.tensor.tests.test_extra_ops.TestDiffOp) ... ok
#3167 test_grad (theano.tensor.tests.test_extra_ops.TestDiffOp) ... ok
#3168 test_infer_shape (theano.tensor.tests.test_extra_ops.TestDiffOp) ... ok
#3169 test_gradient (theano.tensor.tests.test_extra_ops.TestFillDiagonal) ... ok
#3170 test_infer_shape (theano.tensor.tests.test_extra_ops.TestFillDiagonal) ... ok
#3171 test_perform (theano.tensor.tests.test_extra_ops.TestFillDiagonal) ... ok
#3172 test_gradient (theano.tensor.tests.test_extra_ops.TestFillDiagonalOffset) ... ok
#3173 test_infer_shape (theano.tensor.tests.test_extra_ops.TestFillDiagonalOffset) ... ok
#3174 test_perform (theano.tensor.tests.test_extra_ops.TestFillDiagonalOffset) ... ok
#3175 test_broadcastable (theano.tensor.tests.test_extra_ops.TestRepeatOp) ... ok
#3176 test_grad (theano.tensor.tests.test_extra_ops.TestRepeatOp) ... ok
#3177 test_infer_shape (theano.tensor.tests.test_extra_ops.TestRepeatOp) ... ok
#3178 test_repeatOp (theano.tensor.tests.test_extra_ops.TestRepeatOp) ... ok
#3179 test_grad (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3180 test_infer_shape (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3181 test_searchsortedOp_on_float_sorter (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3182 test_searchsortedOp_on_int_sorter (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3183 test_searchsortedOp_on_no_1d_inp (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3184 test_searchsortedOp_on_right_side (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3185 test_searchsortedOp_on_sorted_input (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3186 test_searchsortedOp_wrong_side_kwd (theano.tensor.tests.test_extra_ops.TestSearchsortedOp) ... ok
#3187 Basic test for a matrix. ... ok
#3188 Basic test for a vector. ... ok
#3189 Testing the infer_shape with a matrix. ... ok
#3190 Testing the infer_shape with a vector. ... ok
#3191 theano.tensor.tests.test_extra_ops.test_cpu_contiguous ... ok
#3192 theano.tensor.tests.test_extra_ops.test_to_one_hot ... ok
#3193 test_1Drfft (theano.tensor.tests.test_fft.TestFFT) ... ok
#3194 test_grad_rfft (theano.tensor.tests.test_fft.TestFFT) ... ok
#3195 test_irfft (theano.tensor.tests.test_fft.TestFFT) ... ok
#3196 test_norm_rfft (theano.tensor.tests.test_fft.TestFFT) ... ok
#3197 test_params (theano.tensor.tests.test_fft.TestFFT) ... ok
#3198 test_rfft (theano.tensor.tests.test_fft.TestFFT) ... ok
#3199 test_rfft_float (theano.tensor.tests.test_fft.TestFFT) ... ok
#3200 test_gradient (theano.tensor.tests.test_fourier.TestFourier) ... SKIP: Skipping test: test_gradient: Complex grads not enabled, see #178
#3201 test_infer_shape (theano.tensor.tests.test_fourier.TestFourier) ... ok
#3202 test_perform (theano.tensor.tests.test_fourier.TestFourier) ... ok
#3203 theano.tensor.tests.test_gc.test_no_reuse ... ok
#3204 theano.tensor.tests.test_gc.test_gc_never_pickles_temporaries ... ok
#3205 In the original merge optimization, the following graph took ... ok
#3206 test_grad_inc_set (theano.tensor.tests.test_inc_subtensor.Test_inc_subtensor) ... ok
#3207 Increments or sets part of a tensor by a scalar using full slice and ... ok
#3208 Increments or sets part of a tensor by a scalar using full slice and ... ok
#3209 test_wrong_broadcast (theano.tensor.tests.test_inc_subtensor.Test_inc_subtensor) ... ok
#3210 test_wrong_dims (theano.tensor.tests.test_inc_subtensor.Test_inc_subtensor) ... ok
#3211 test0 (theano.tensor.tests.test_io.T_load_tensor) ... ok
#3212 test1 (theano.tensor.tests.test_io.T_load_tensor) ... ok
#3213 test_invalid_modes (theano.tensor.tests.test_io.T_load_tensor) ... ok
#3214 test_memmap (theano.tensor.tests.test_io.T_load_tensor) ... ok
#3215 test_keepdims (theano.tensor.tests.test_keepdims.TestKeepDims) ... ok
#3216 test_norm (theano.tensor.tests.test_keepdims.TestKeepDims) ... ok
#3217 numpy arrays don't compare equal like other python objects ... ok
#3218 theano.tensor.tests.test_misc.test_bug_2009_06_02_trac_387 ... ok
#3219 Regression test for a bug where output was borrowed by mistake. ... ok
#3220 theano.tensor.tests.test_misc.test_deepcopied_type_filter ... ok
#3221 theano.tensor.tests.test_mpi.test_recv ... ok
#3222 theano.tensor.tests.test_mpi.test_send ... ok
#3223 theano.tensor.tests.test_mpi.test_can_make_function ... ok
#3224 theano.tensor.tests.test_mpi.test_mpi_roundtrip ... ok
#3225 theano.tensor.tests.test_mpi.test_mpi_send_wait_cmp ... ok
#3226 theano.tensor.tests.test_mpi.test_mpi_tag_ordering ... ok
#3227 theano.tensor.tests.test_mpi.test_mpi_schedule ... ok
#3228 test_non_square_matrix (theano.tensor.tests.test_nlinalg.Matrix_power) ... ok
#3229 test_numpy_compare (theano.tensor.tests.test_nlinalg.Matrix_power) ... ok
#3230 test_non_tensorial_input (theano.tensor.tests.test_nlinalg.T_NormTests) ... ok
#3231 test_numpy_compare (theano.tensor.tests.test_nlinalg.T_NormTests) ... ok
#3232 test_tensor_input (theano.tensor.tests.test_nlinalg.T_NormTests) ... ok
#3233 test_wrong_type_of_ord_for_matrix (theano.tensor.tests.test_nlinalg.T_NormTests) ... ok
#3234 test_wrong_type_of_ord_for_vector (theano.tensor.tests.test_nlinalg.T_NormTests) ... ok
#3235 test_correct_solution (theano.tensor.tests.test_nlinalg.T_lstsq) ... ok
#3236 test_wrong_coefficient_matrix (theano.tensor.tests.test_nlinalg.T_lstsq) ... ok
#3237 test_wrong_rcond_dimension (theano.tensor.tests.test_nlinalg.T_lstsq) ... ok
#3238 test_eval (theano.tensor.tests.test_nlinalg.test_Eig) ... ok
#3239 test_infer_shape (theano.tensor.tests.test_nlinalg.test_Eig) ... ok
#3240 test_eval (theano.tensor.tests.test_nlinalg.test_Eigh) ... ok
#3241 test_grad (theano.tensor.tests.test_nlinalg.test_Eigh) ... ok
#3242 test_infer_shape (theano.tensor.tests.test_nlinalg.test_Eigh) ... ok
#3243 test_uplo (theano.tensor.tests.test_nlinalg.test_Eigh) ... ok
#3244 test_eval (theano.tensor.tests.test_nlinalg.test_Eigh_float32) ... ok
#3245 test_grad (theano.tensor.tests.test_nlinalg.test_Eigh_float32) ... ok
#3246 test_infer_shape (theano.tensor.tests.test_nlinalg.test_Eigh_float32) ... ok
#3247 test_uplo (theano.tensor.tests.test_nlinalg.test_Eigh_float32) ... ok
#3248 test_infer_shape (theano.tensor.tests.test_nlinalg.test_MatrixInverse) ... ok
#3249 test_inverse_correctness (theano.tensor.tests.test_nlinalg.test_MatrixInverse) ... ok
#3250 test_eval (theano.tensor.tests.test_nlinalg.test_TensorInv) ... ok
#3251 test_infer_shape (theano.tensor.tests.test_nlinalg.test_TensorInv) ... ok
#3252 test_alloc_diag (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3253 test_alloc_diag_grad (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3254 test_diag (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3255 test_extract_diag (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3256 test_extract_diag_empty (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3257 test_extract_diag_grad (theano.tensor.tests.test_nlinalg.test_diag) ... ok
#3258 theano.tensor.tests.test_nlinalg.test_pseudoinverse_correctness ... ok
#3259 theano.tensor.tests.test_nlinalg.test_matrix_dot ... ok
#3260 theano.tensor.tests.test_nlinalg.test_qr_modes ... ok
#3261 theano.tensor.tests.test_nlinalg.test_svd ... ok
#3262 theano.tensor.tests.test_nlinalg.test_tensorsolve ... ok
#3263 theano.tensor.tests.test_nlinalg.test_inverse_singular ... ok
#3264 theano.tensor.tests.test_nlinalg.test_inverse_grad ... ok
#3265 theano.tensor.tests.test_nlinalg.test_det ... ok
#3266 theano.tensor.tests.test_nlinalg.test_det_grad ... ok
#3267 theano.tensor.tests.test_nlinalg.test_det_shape ... ok
#3268 theano.tensor.tests.test_nlinalg.test_trace ... ok
#3269 test_local_useless_rebroadcast (theano.tensor.tests.test_opt.T_Rebroadcast) ... ok
#3270 test_rebroadcast_rebroadcast (theano.tensor.tests.test_opt.T_Rebroadcast) ... ok
#3271 test_local_useless_tile (theano.tensor.tests.test_opt.T_Tile) ... ok
#3272 test (theano.tensor.tests.test_opt.T_cast_cast) ... ok
#3273 test optimization for consecutive functional inverses ... ok
#3274 test_local_erf_minus_one (theano.tensor.tests.test_opt.T_local_erf) ... ok
#3275 test_local_one_minus_erf (theano.tensor.tests.test_opt.T_local_erf) ... ok
#3276 test_local_one_plus_erf (theano.tensor.tests.test_opt.T_local_erf) ... ok
#3277 test opt: (-1)+erfc(-x)=>erf(x) ... ok
#3278 test_local_grad_log_erfc_neg (theano.tensor.tests.test_opt.T_local_erfc) ... ok
#3279 test_local_log_erfc (theano.tensor.tests.test_opt.T_local_erfc) ... ok
#3280 test opt: 1-erfc(x) => erf(x) and -erfc(x)+1 => erf(x) ... ok
#3281 test_prod_upcast (theano.tensor.tests.test_opt.T_local_opt_alloc) ... ok
#3282 test_sum_upcast (theano.tensor.tests.test_opt.T_local_opt_alloc) ... ok
#3283 test_local_reduce_broadcast_all_0 (theano.tensor.tests.test_opt.T_local_reduce) ... ok
#3284 test_local_reduce_broadcast_all_1 (theano.tensor.tests.test_opt.T_local_reduce) ... ok
#3285 test_local_reduce_broadcast_some_0 (theano.tensor.tests.test_opt.T_local_reduce) ... ok
#3286 test_local_reduce_broadcast_some_1 (theano.tensor.tests.test_opt.T_local_reduce) ... ok
#3287 test_local_reduce_join (theano.tensor.tests.test_opt.T_local_reduce) ... ok
#3288 test_local_sum_prod_all_to_none (theano.tensor.tests.test_opt.T_local_sum_prod) ... ok
#3289 test_local_sum_prod_alloc (theano.tensor.tests.test_opt.T_local_sum_prod) ... ok
#3290 test_local_sum_prod_mul_by_scalar (theano.tensor.tests.test_opt.T_local_sum_prod) ... ok
#3291 test_local_sum_prod_mul_by_scalar_stack_trace (theano.tensor.tests.test_opt.T_local_sum_prod) ... ok
#3292 Test that local_sum_sum works when specifying dtypes manually. ... ok
#3293 Test that local_sum_sum works when combining two sums on an int8 array. ... ok
#3294 test_local_sum_sum_prod_prod (theano.tensor.tests.test_opt.T_local_sum_prod) ... ok
#3295 test_local_prod_div_dimshuffle (theano.tensor.tests.test_opt.T_local_sum_prod_dimshuffle) ... ok
#3296 test_local_sum_div_dimshuffle (theano.tensor.tests.test_opt.T_local_sum_prod_dimshuffle) ... ok
#3297 test_local_div_switch_sink (theano.tensor.tests.test_opt.T_local_switch_sink) ... ok
#3298 test_local_mul_switch_sink (theano.tensor.tests.test_opt.T_local_switch_sink) ... ok
#3299 test_add (theano.tensor.tests.test_opt.T_useless_elemwise) ... ok
#3300 test_eq (theano.tensor.tests.test_opt.T_useless_elemwise) ... ok
#3301 test_identity (theano.tensor.tests.test_opt.T_useless_elemwise) ... ok
#3302 test_mul (theano.tensor.tests.test_opt.T_useless_elemwise) ... ok
#3303 test_neq (theano.tensor.tests.test_opt.T_useless_elemwise) ... ok
#3304 test_local_useless_composite (theano.tensor.tests.test_opt.TestCompositeCodegen) ... ok
#3305 test_nested_composite (theano.tensor.tests.test_opt.TestCompositeCodegen) ... ok
#3306 test_nested_gpu (theano.tensor.tests.test_opt.TestCompositeCodegen) ... SKIP: cuda not available
#3307 Tests removing the extra floor_div by 1 introduced by ... ok
#3308 Simple test case for removing dividing by 1 ... ok
#3309 Simple test case for removing dividing by a tensor of ones ... ok
#3310 test_infer_shape (theano.tensor.tests.test_opt.TestMakeVector) ... ok
#3311 test_make_vector (theano.tensor.tests.test_opt.TestMakeVector) ... ok
#3312 test_scalar (theano.tensor.tests.test_opt.TestShapeFeature) ... ok
#3313 test_vector (theano.tensor.tests.test_opt.TestShapeFeature) ... ok
#3314 test_vector2 (theano.tensor.tests.test_opt.TestShapeFeature) ... ok
#3315 test_vector_dim (theano.tensor.tests.test_opt.TestShapeFeature) ... ok
#3316 test_vector_dim_err (theano.tensor.tests.test_opt.TestShapeFeature) ... ok
#3317 test_infer_shape (theano.tensor.tests.test_opt.TestShape_i) ... ok
#3318 test_perform (theano.tensor.tests.test_opt.TestShape_i) ... ok
#3319 test_local_reshape (theano.tensor.tests.test_opt.Test_Reshape) ... ok
#3320 test_advancedincsubtensor1_allocs0 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3321 test_advancedincsubtensor1_allocs0t (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3322 test_advancedincsubtensor1_allocs1 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3323 test_advancedincsubtensor_allocs0 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3324 test_advancedincsubtensor_allocs0t (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3325 test_advancedincsubtensor_allocs1 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3326 test_dot_allocs_0 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3327 test_incsubtensor_allocs0 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3328 test_incsubtensor_allocs0t (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3329 test_incsubtensor_allocs1 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3330 test_setsubtensor_allocs0 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3331 test_setsubtensor_allocs1 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3332 test_setsubtensor_allocs1t (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3333 test_setsubtensor_allocs2 (theano.tensor.tests.test_opt.Test_alloc_zero) ... ok
#3334 test_matrix_col (theano.tensor.tests.test_opt.Test_lift_transpose_through_dot) ... ok
#3335 test_matrix_matrix (theano.tensor.tests.test_opt.Test_lift_transpose_through_dot) ... ok
#3336 test_row_matrix (theano.tensor.tests.test_opt.Test_lift_transpose_through_dot) ... ok
#3337 test0 (theano.tensor.tests.test_opt.Test_local_canonicalize_alloc) ... ok
#3338 test1 (theano.tensor.tests.test_opt.Test_local_canonicalize_alloc) ... ok
#3339 test2 (theano.tensor.tests.test_opt.Test_local_canonicalize_alloc) ... ok
#3340 test_useless_alloc_with_shape_one (theano.tensor.tests.test_opt.Test_local_canonicalize_alloc) ... ok
#3341 test_error (theano.tensor.tests.test_opt.Test_local_elemwise_alloc) ... ok
#3342 test_multi_input_single_alloc (theano.tensor.tests.test_opt.Test_local_elemwise_alloc) ... ok
#3343 test_remove_alloc_w_dimshuffle (theano.tensor.tests.test_opt.Test_local_elemwise_alloc) ... ok
#3344 test_remove_alloc_wo_dimshuffle (theano.tensor.tests.test_opt.Test_local_elemwise_alloc) ... ok
#3345 test_1 (theano.tensor.tests.test_opt.Test_local_reshape_to_dimshuffle) ... ok
#3346 test_and (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3347 test_equality_shapes (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3348 test_inequality_with_self (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3349 test_local_useless_elemwise_comparison (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3350 test_or (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3351 test_shape_add_inequality (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3352 test_shape_inequality_with_self (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3353 test_stacktrace (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3354 test_xor (theano.tensor.tests.test_opt.Test_local_useless_elemwise_comparison) ... ok
#3355 test_advanced_inc_subtensor (theano.tensor.tests.test_opt.Test_local_useless_inc_subtensor_alloc) ... ok
#3356 test_advanced_inc_subtensor1 (theano.tensor.tests.test_opt.Test_local_useless_inc_subtensor_alloc) ... ok
#3357 test_incsubtensor (theano.tensor.tests.test_opt.Test_local_useless_inc_subtensor_alloc) ... ok
#3358 test_0 (theano.tensor.tests.test_opt.Test_local_useless_reshape) ... ok
#3359 test_1 (theano.tensor.tests.test_opt.Test_local_useless_reshape) ... ok
#3360 test_2 (theano.tensor.tests.test_opt.Test_local_useless_reshape) ... ok
#3361 test_basic (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3362 test_broadcasted (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3363 test_different_dtypes (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3364 test_fewer_dims (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3365 test_multiple_idx (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3366 test_not_applied (theano.tensor.tests.test_opt.Test_subtensor_inc_subtensor) ... ok
#3367 test0 (theano.tensor.tests.test_opt.test_assert) ... ok
#3368 test_infer_shape (theano.tensor.tests.test_opt.test_assert) ... ok
#3369 test_local_remove_all_assert1 (theano.tensor.tests.test_opt.test_assert) ... ok
#3370 test_local_remove_useless_assert1 (theano.tensor.tests.test_opt.test_assert) ... ok
#3371 test_local_remove_useless_assert3 (theano.tensor.tests.test_opt.test_assert) ... ok
#3372 test_test_local_remove_useless_assert2 (theano.tensor.tests.test_opt.test_assert) ... ok
#3373 test that if we have ... ok
#3374 Regression test for bug in canonicalization of NaN values. ... ok
#3375 test those case take from the comment in Canonizer ... SKIP: Not implemented
#3376 verify that the Canonizer merge sequential Elemwise({mul,add}) part 1 ... ok
#3377 verify that the Canonizer merge sequential Elemwise({mul,add}) part 2. ... SKIP: Current implementation of Canonizer does not implement all cases. Skip the corresponding test.
#3378 test_muldiv (theano.tensor.tests.test_opt.test_canonize) ... ok
#3379 test those case take from the comment in Canonizer ... ok
#3380 test_multiple_case_that_fail (theano.tensor.tests.test_opt.test_canonize) ... SKIP: Current implementation of Canonizer does not implement all cases. Skip the corresponding test.
#3381 test_dimshuffle_on_broadcastable (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3382 test_double_transpose (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3383 test_elim3 (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3384 test_lift (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3385 test_merge2 (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3386 test_recursive_lift (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3387 test_useless_dimshuffle (theano.tensor.tests.test_opt.test_dimshuffle_lift) ... ok
#3388 test_elemwise_fusion (theano.tensor.tests.test_opt.test_fusion) ... ok
#3389 test_elemwise_fusion_4d (theano.tensor.tests.test_opt.test_fusion) ... ok
#3390 test_fusion_35inputs (theano.tensor.tests.test_opt.test_fusion) ... ok
#3391 test_fusion_inplace (theano.tensor.tests.test_opt.test_fusion) ... ok
#3392 test_gpu_fusion (theano.tensor.tests.test_opt.test_fusion) ... SKIP: cuda not available
#3393 test_gpu_fusion_Xd (theano.tensor.tests.test_opt.test_fusion) ... SKIP: cuda not available
#3394 In the past, pickle of Composite generated in tha case ... ok
#3395 test_kording_bug (theano.tensor.tests.test_opt.test_greedy_distribute) ... ok
#3396 test_main (theano.tensor.tests.test_opt.test_greedy_distribute) ... ok
#3397 test0 (theano.tensor.tests.test_opt.test_local_adv_sub1_adv_inc_sub1) ... ok
#3398 test_assert (theano.tensor.tests.test_opt.test_local_adv_sub1_adv_inc_sub1) ... ok
#3399 test_stack_trace (theano.tensor.tests.test_opt.test_local_adv_sub1_adv_inc_sub1) ... ok
#3400 test_elemwise (theano.tensor.tests.test_opt.test_local_merge_switch_same_cond) ... ok
#3401 test0 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3402 test0b (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3403 test1 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3404 test2 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3405 test3 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3406 test4 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3407 test5 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3408 test6 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3409 test7 (theano.tensor.tests.test_opt.test_local_subtensor_lift) ... ok
#3410 test_AdvancedSubtensor1_idx (theano.tensor.tests.test_opt.test_local_subtensor_make_vector) ... ok
#3411 test_scalar_idx (theano.tensor.tests.test_opt.test_local_subtensor_make_vector) ... ok
#3412 test_slice_idx_step (theano.tensor.tests.test_opt.test_local_subtensor_make_vector) ... ok
#3413 test_slice_idx_stop (theano.tensor.tests.test_opt.test_local_subtensor_make_vector) ... ok
#3414 test_stack_trace (theano.tensor.tests.test_opt.test_local_subtensor_make_vector) ... ok
#3415 test_const (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3416 test_const2 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3417 test_const3 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3418 test_const4 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3419 test_const5 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3420 test_const6 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3421 test_const_general (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3422 test_none_index (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3423 test_none_slice (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3424 test_scalar (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3425 test_scalar2 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3426 test_scalar3 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3427 test_scalar4 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3428 test_scalar5 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3429 test_scalar6 (theano.tensor.tests.test_opt.test_local_subtensor_merge) ... ok
#3430 test_broadcast1 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3431 test_broadcast2 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3432 test_broadcast3 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3433 test_const0 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3434 test_const1 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3435 test_left_is_right (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3436 test_shape_le_0 (theano.tensor.tests.test_opt.test_local_useless_switch) ... ok
#3437 test0 (theano.tensor.tests.test_opt.test_shapeoptimizer) ... ok
#3438 test_broadcasted_dims (theano.tensor.tests.test_opt.test_shapeoptimizer) ... ok
#3439 test_constant (theano.tensor.tests.test_opt.test_shapeoptimizer) ... ok
#3440 This test the error in gh-1122 that is a caused by the ... ok
#3441 test_local_track_shape_i (theano.tensor.tests.test_opt.test_shapeoptimizer) ... ok
#3442 test_no_cycle (theano.tensor.tests.test_opt.test_shapeoptimizer) ... SKIP: cuda not available
#3443 test_no_shapeopt (theano.tensor.tests.test_opt.test_shapeoptimizer) ... ok
#3444 theano.tensor.tests.test_opt.test_local_useless_dimshuffle_in_reshape ... ok
#3445 theano.tensor.tests.test_opt.test_add_canonizer_problem0 ... ok
#3446 theano.tensor.tests.test_opt.test_local_merge_abs ... ok
#3447 theano.tensor.tests.test_opt.test_merge_abs_bugfix ... ok
#3448 Test that int division is preserved ... ok
#3449 theano.tensor.tests.test_opt.test_const_type_in_mul_canonizer ... ok
#3450 theano.tensor.tests.test_opt.test_log1p ... ok
#3451 theano.tensor.tests.test_opt.test_log_add ... SKIP: log(add(exp)) is not stabilized when adding more than 2 elements, see #623
#3452 theano.tensor.tests.test_opt.test_local_useless_slice ... ok
#3453 theano.tensor.tests.test_opt.test_local_useless_inc_subtensor ... ok
#3454 theano.tensor.tests.test_opt.test_local_useless_subtensor ... ok
#3455 theano.tensor.tests.test_opt.test_local_subtensor_remove_broadcastable_index ... ok
#3456 theano.tensor.tests.test_opt.test_local_IncSubtensor_serialize ... ok
#3457 theano.tensor.tests.test_opt.test_local_set_to_inc_subtensor ... ok
#3458 theano.tensor.tests.test_opt.test_local_subtensor_of_dot ... ok
#3459 theano.tensor.tests.test_opt.test_local_subtensor_of_alloc ... ok
#3460 theano.tensor.tests.test_opt.test_local_fill_useless ... ok
#3461 theano.tensor.tests.test_opt.test_local_elemwise_sub_zeros ... ok
#3462 theano.tensor.tests.test_opt.test_local_mul_specialize ... ok
#3463 theano.tensor.tests.test_opt.test_local_pow_specialize ... ok
#3464 theano.tensor.tests.test_opt.test_local_pow_specialize_device_more_aggressive_on_cpu ... ok
#3465 Test that constant folding get registered at fast_compile ... ok
#3466 Currently Theano enable the constant_folding optimization before stabilization optimization. ... SKIP: Theano optimizes constant before stabilization. This breaks stabilization optimization in some cases. See #504.
#3467 theano.tensor.tests.test_opt.test_local_join_1 ... ok
#3468 theano.tensor.tests.test_opt.test_local_join_empty ... ok
#3469 theano.tensor.tests.test_opt.test_local_join_make_vector ... ok
#3470 theano.tensor.tests.test_opt.test_local_add_specialize ... ok
#3471 theano.tensor.tests.test_opt.test_local_tensor_scalar_tensor ... ok
#3472 theano.tensor.tests.test_opt.test_local_scalar_tensor_scalar ... ok
#3473 theano.tensor.tests.test_opt.test_local_div_to_inv ... ok
#3474 theano.tensor.tests.test_opt.test_local_useless_split ... ok
#3475 theano.tensor.tests.test_opt.test_local_flatten_lift ... ok
#3476 theano.tensor.tests.test_opt.test_local_reshape_lift ... ok
#3477 theano.tensor.tests.test_opt.test_local_upcast_elemwise_constant_inputs ... ok
#3478 theano.tensor.tests.test_opt.test_assert_op_gradient ... ok
#3479 Tests 0/x -> 0 ... ok
#3480 theano.tensor.tests.test_opt.test_local_sumsqr2dot ... ok
#3481 theano.tensor.tests.test_opt.test_local_expm1 ... ok
#3482 theano.tensor.tests.test_opt.test_local_merge_alloc ... ok
#3483 theano.tensor.tests.test_opt.test_local_useless_alloc ... ok
#3484 theano.tensor.tests.test_opt.test_local_log_sum_exp1 ... ok
#3485 theano.tensor.tests.test_opt.test_local_log_sum_exp2 ... ok
#3486 theano.tensor.tests.test_opt.test_local_log_sum_exp3 ... ok
#3487 test_optimization (theano.tensor.tests.test_opt_uncanonicalize.T_max_and_argmax) ... ok
#3488 test_optimization_max (theano.tensor.tests.test_opt_uncanonicalize.T_min_max) ... ok
#3489 test_optimization_min (theano.tensor.tests.test_opt_uncanonicalize.T_min_max) ... ok
#3490 theano.tensor.tests.test_opt_uncanonicalize.test_local_alloc_dimshuffle ... ok
#3491 theano.tensor.tests.test_opt_uncanonicalize.test_local_reshape_dimshuffle ... ok
#3492 theano.tensor.tests.test_opt_uncanonicalize.test_local_dimshuffle_alloc ... ok
#3493 theano.tensor.tests.test_opt_uncanonicalize.test_local_dimshuffle_subtensor ... ok
#3494 Test that arguments to RandomFunction are honored ... ok
#3495 test_basic_usage (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3496 Test that raw_random.binomial generates the same results ... ok
#3497 test_binomial_vector (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3498 test_broadcast_arguments (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3499 Test that raw_random.choice generates the same ... ok
#3500 test_default_shape (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3501 test_dtype (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3502 test_dtype_normal_uniform_687 (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3503 test_infer_shape (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3504 test_inplace_norun (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3505 Test that FAST_RUN includes the random_make_inplace optimization ... ok
#3506 test_mixed_shape (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3507 test_mixed_shape_bcastable (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3508 Test that raw_random.multinomial generates the same ... ok
#3509 test_multinomial_tensor3_a (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3510 test_multinomial_tensor3_b (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3511 test_multinomial_vector (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3512 Test that when not running inplace, the RandomState is ... ok
#3513 Test that raw_random.normal generates the same results as numpy. ... ok
#3514 test_normal_vector (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3515 Test that raw_random.permutation generates the same ... ok
#3516 Test that raw_random.permutation_helper generates the same ... ok
#3517 test_pkl (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3518 Test that raw_random.poisson generates the same ... ok
#3519 Test that random_function helper function accepts argument ndim ... ok
#3520 Test that random_function helper function accepts ndim_added as ... ok
#3521 Test if random_function helper works with args but without shape ... ok
#3522 Test if random_function helper works without args or shape ... ok
#3523 test_random_integers (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3524 test_random_integers_vector (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3525 test_symbolic_shape (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3526 Test that raw_random.uniform generates the same results as numpy. ... ok
#3527 test_uniform_vector (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3528 test_vector_arguments (theano.tensor.tests.test_raw_random.T_random_function) ... ok
#3529 test_basics (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3530 test_binomial_vector (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3531 test_broadcast_arguments (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3532 Test that RandomStreams.choice generates the same results as numpy ... ok
#3533 test_default_dtype (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3534 test_default_shape (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3535 test_default_updates (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3536 test_dtype (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3537 test_get_value_borrow (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3538 test_get_value_internal_type (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3539 test_getitem (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3540 test_mixed_shape (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3541 test_mixed_shape_bcastable (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3542 Test that RandomStreams.multinomial generates the same results as numpy ... ok
#3543 test_multinomial_vector (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3544 Test that when we have multiple random number generators, we do not alias ... ok
#3545 Test that the behaviour of 'ndim' optional parameter ... ok
#3546 Test that RandomStreams.normal generates the same results as numpy ... ok
#3547 test_normal_vector (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3548 Test that RandomStreams.permutation generates the same results as numpy ... ok
#3549 Test that RandomStreams.poisson generates the same results as numpy ... ok
#3550 test_random_integers (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3551 test_random_integers_vector (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3552 Test that random state can be transferred from one theano graph to another. ... ok
#3553 test_seed_fn (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3554 test_set_value_borrow (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3555 test_setitem (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3556 test_shared_constructor_borrow (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3557 Test that RandomStreams.shuffle_row_elements generates the right results ... ok
#3558 test_symbolic_shape (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3559 test_tutorial (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3560 Test that RandomStreams.uniform generates the same results as numpy ... ok
#3561 test_uniform_vector (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3562 test_vector_arguments (theano.tensor.tests.test_shared_randomstreams.T_SharedRandomStreams) ... ok
#3563 Test that get_value return the same type as what was gived when creating the shared variable ... ok
#3564 We test that if the SharedVariable implement it we do inplace set_value ... ok
#3565 test_return_internal_type (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3566 test_set_value (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3567 test_shape (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3568 test_shape_i (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3569 test_shared_do_alias (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3570 test_shared_dont_alias (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3571 test_specify_shape (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3572 test_specify_shape_inplace (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3573 test_specify_shape_partial (theano.tensor.tests.test_sharedvar.test_shared_options) ... ok
#3574 Test the type.values_eq[_approx] function ... ok
#3575 theano.tensor.tests.test_sharedvar.test_scalar_shared_options ... ok
#3576 test_numpy_2d (theano.tensor.tests.test_slinalg.TestKron) ... ok
#3577 test_perform (theano.tensor.tests.test_slinalg.TestKron) ... ok
#3578 test_infer_shape (theano.tensor.tests.test_slinalg.test_Solve) ... ok
#3579 test_solve_correctness (theano.tensor.tests.test_slinalg.test_Solve) ... ok
#3580 test_solve_dtype (theano.tensor.tests.test_slinalg.test_Solve) ... ok
#3581 test_solve_grad (theano.tensor.tests.test_slinalg.test_Solve) ... ok
#3582 theano.tensor.tests.test_slinalg.test_cholesky(array([[ 3.43991423, -0.15664861,  0.70377976, -3.23871064, -0.05301417], ... ok
   theano.tensor.tests.test_slinalg.test_cholesky(array([[ 3.43991423, -0.15664861,  0.70377976, -3.23871064, -0.05301417], ... ok
   theano.tensor.tests.test_slinalg.test_cholesky(array([[ 3.43991423, -0.15664861,  0.70377976, -3.23871064, -0.05301417], ... ok
#3583 theano.tensor.tests.test_slinalg.test_cholesky_grad ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_grad ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_grad ... ok
#3584 theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([2, 2]), (2, 2)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([3, 3]), (3, 3)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
   theano.tensor.tests.test_slinalg.test_cholesky_and_cholesky_grad_shape(array([5, 5]), (5, 5)) ... ok
#3585 theano.tensor.tests.test_slinalg.test_eigvalsh ... ok
#3586 theano.tensor.tests.test_slinalg.test_eigvalsh_grad ... ok
#3587 theano.tensor.tests.test_slinalg.test_expm ... ok
#3588 theano.tensor.tests.test_slinalg.test_expm_grad_1 ... ok
#3589 theano.tensor.tests.test_slinalg.test_expm_grad_2 ... ok
#3590 theano.tensor.tests.test_slinalg.test_expm_grad_3 ... ok
#3591 test_sort (theano.tensor.tests.test_sort.TensorInferShapeTester) ... ok
#3592 test1 (theano.tensor.tests.test_sort.test_sort) ... ok
#3593 test2 (theano.tensor.tests.test_sort.test_sort) ... ok
#3594 test3 (theano.tensor.tests.test_sort.test_sort) ... ok
#3595 test4 (theano.tensor.tests.test_sort.test_sort) ... ok
#3596 test5 (theano.tensor.tests.test_sort.test_sort) ... ok
#3597 test_None (theano.tensor.tests.test_sort.test_sort) ... ok
#3598 test_grad_negative_axis_2d (theano.tensor.tests.test_sort.test_sort) ... ok
#3599 test_grad_negative_axis_3d (theano.tensor.tests.test_sort.test_sort) ... ok
#3600 test_grad_negative_axis_4d (theano.tensor.tests.test_sort.test_sort) ... ok
#3601 test_grad_none_axis (theano.tensor.tests.test_sort.test_sort) ... ok
#3602 test_grad_nonnegative_axis_2d (theano.tensor.tests.test_sort.test_sort) ... ok
#3603 test_grad_nonnegative_axis_3d (theano.tensor.tests.test_sort.test_sort) ... ok
#3604 test_grad_nonnegative_axis_4d (theano.tensor.tests.test_sort.test_sort) ... ok
#3605 test_grad_vector (theano.tensor.tests.test_sort.test_sort) ... ok
#3606 theano.tensor.tests.test_sort.test_argsort ... ok
#3607 theano.tensor.tests.test_sort.test_argsort_grad ... ok
#3608 test0_err_invalid (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3609 test1_0_dims (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3610 test1_err_bounds (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3611 test1_err_invalid (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3612 test1_err_subslice (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3613 test1_ok_elem (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3614 test1_ok_range_finite (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3615 test1_ok_range_infinite (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3616 test1_ok_strided (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3617 test2_err_bounds0 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3618 test2_err_bounds1 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3619 test2_ok_col (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3620 test2_ok_cols_infinite (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3621 test2_ok_elem (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3622 test2_ok_range_finite (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3623 test2_ok_row (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3624 test2_ok_rows_finite (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3625 test2_ok_strided (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3626 test3_ok_mat (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3627 test_adv1_inc_sub_notlastdim (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3628 test_adv1_inc_sub_notlastdim_1_2dval_broadcast (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3629 test_adv1_inc_sub_notlastdim_1_2dval_no_broadcast (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3630 test_adv1_inc_sub_notlastdim_2didx (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3631 test_adv_constant_arg (theano.tensor.tests.test_subtensor.T_subtensor) ... /home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/var.py:507: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.
  if(inp == [] or inp == ()) else inp for inp in args])
/home/staff/inga/.local/lib/python2.7/site-packages/theano/tensor/var.py:507: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.
  if(inp == [] or inp == ()) else inp for inp in args])
ok
#3632 test_adv_sub1_broadcast (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3633 test_adv_sub1_idx_broadcast (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3634 Test advanced increment and set. ... ok
#3635 test_ellipsis (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3636 test_err_bound_list (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3637 test_err_invalid_2list_dtype (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3638 test_err_invalid_list (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3639 test_grad_0d (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3640 test_grad_1d (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3641 test_grad_2d_inc_set_subtensor (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3642 test_grad_advanced_inc_subtensor (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3643 test_grad_list (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3644 Test increment and set with broadcast ... ok
#3645 test_list_slice (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3646 test_long (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3647 test_long_too_big (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3648 newaxis support comes from logic in the __getitem__ of TensorType ... ok
#3649 test_ok_list (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3650 test_shape_i_const (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3651 test_shape_i_scalar (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3652 test_shape_list (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3653 test_slice_canonical_form_0 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3654 test_slice_canonical_form_1 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3655 test_slice_canonical_form_2 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3656 test_slice_canonical_form_3 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3657 test_slice_canonical_form_4 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3658 test_slice_canonical_form_5 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3659 test_slice_canonical_form_6 (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3660 test_slice_symbol (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3661 test_take (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3662 test_wrong_exception_regression (theano.tensor.tests.test_subtensor.T_subtensor) ... ok
#3663 test_adv_subtensor_w_int_and_matrix (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3664 test_adv_subtensor_w_matrix_and_int (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3665 test_adv_subtensor_w_matrix_and_none (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3666 test_adv_subtensor_w_none_and_matrix (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3667 test_adv_subtensor_w_slice_and_matrix (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3668 test_advanced_indexing (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3669 test_cant_adv_idx_into_scalar (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3670 test_grad (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3671 test_inc_adv_subtensor1_with_broadcasting (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3672 test_inc_adv_subtensor_w_2vec (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3673 test_inc_adv_subtensor_w_matrix (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3674 test_inc_adv_subtensor_with_broadcasting (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3675 test_inc_adv_subtensor_with_index_broadcasting (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3676 test_index_into_mat_w_row (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3677 test_index_into_vec_w_matrix (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3678 test_index_into_vec_w_vec (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3679 test_index_w_int_and_vec (theano.tensor.tests.test_subtensor.TestAdvancedSubtensor) ... ok
#3680 test_1d_inc_adv_selection (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3681 test_1d_inc_adv_selection_w_broadcasting (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3682 test_1d_set_adv_selection (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3683 test_assigning_matrix_to_vector_selection (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3684 test_cant_adv_idx_into_scalar (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3685 test_inc_bcastableidx (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3686 test_index_into_vec_w_vec (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3687 test_matrix_idx (theano.tensor.tests.test_subtensor.TestIncSubtensor1) ... ok
#3688 test_adv_sub (theano.tensor.tests.test_subtensor.TestInferShape) ... ok
#3689 test_infer_shape (theano.tensor.tests.test_subtensor.TestInferShape) ... ok
#3690 theano.tensor.tests.test_type_other.test_make_slice_merge ... ok
#3691 Tests equals ... ok
#3692 test_err (theano.tensor.tests.test_utils.Tshape_of_variables) ... ok
#3693 test_simple (theano.tensor.tests.test_utils.Tshape_of_variables) ... ok
#3694 test_subtensor (theano.tensor.tests.test_utils.Tshape_of_variables) ... ok
#3695 theano.tensor.tests.test_utils.test_hash_from_ndarray ... ok
#3696 theano.tensor.tests.test_var.test_numpy_method ... ok
#3909 theano.tensor.tests.test_var.test_empty_list_indexing ... ok
#3697 theano.tensor.tests.test_var.test_copy ... ok
#3698 theano.tensor.tests.test_var.test_None_dimShuffle_replace ... ok
#3699 test0 (theano.tensor.tests.test_xlogx.T_XlogX) ... ok
#3700 test1 (theano.tensor.tests.test_xlogx.T_XlogX) ... ok
#3701 test2 (theano.tensor.tests.test_xlogx.T_XlogY0) ... ok
#3702 test3 (theano.tensor.tests.test_xlogx.T_XlogY0) ... ok
#3703 test_correct_answer (theano.typed_list.tests.test_basic.TestMakeList) ... ok
#3704 test_wrong_shape (theano.typed_list.tests.test_basic.TestMakeList) ... ok
#3705 test_inplace (theano.typed_list.tests.test_basic.test_append) ... ok
#3706 test_interfaces (theano.typed_list.tests.test_basic.test_append) ... ok
#3707 test_sanity_check (theano.typed_list.tests.test_basic.test_append) ... ok
#3708 test_interface (theano.typed_list.tests.test_basic.test_count) ... ok
#3709 test_non_tensor_type (theano.typed_list.tests.test_basic.test_count) ... ok
#3710 test_sanity_check (theano.typed_list.tests.test_basic.test_count) ... ok
#3711 test_sparse (theano.typed_list.tests.test_basic.test_count) ... ok
#3712 test_inplace (theano.typed_list.tests.test_basic.test_extend) ... ok
#3713 test_interface (theano.typed_list.tests.test_basic.test_extend) ... ok
#3714 test_sanity_check (theano.typed_list.tests.test_basic.test_extend) ... ok
#3715 test_constant_input (theano.typed_list.tests.test_basic.test_get_item) ... ok
#3716 test_interface (theano.typed_list.tests.test_basic.test_get_item) ... ok
#3717 test_sanity_check_single (theano.typed_list.tests.test_basic.test_get_item) ... ok
#3718 test_sanity_check_slice (theano.typed_list.tests.test_basic.test_get_item) ... ok
#3719 test_wrong_input (theano.typed_list.tests.test_basic.test_get_item) ... ok
#3720 test_interface (theano.typed_list.tests.test_basic.test_index) ... ok
#3721 test_non_tensor_type (theano.typed_list.tests.test_basic.test_index) ... ok
#3722 test_sanity_check (theano.typed_list.tests.test_basic.test_index) ... ok
#3723 test_sparse (theano.typed_list.tests.test_basic.test_index) ... ok
#3724 test_inplace (theano.typed_list.tests.test_basic.test_insert) ... ok
#3725 test_interface (theano.typed_list.tests.test_basic.test_insert) ... ok
#3726 test_sanity_check (theano.typed_list.tests.test_basic.test_insert) ... ok
#3727 test_interface (theano.typed_list.tests.test_basic.test_length) ... ok
#3728 test_sanity_check (theano.typed_list.tests.test_basic.test_length) ... ok
#3729 test_inplace (theano.typed_list.tests.test_basic.test_remove) ... ok
#3730 test_interface (theano.typed_list.tests.test_basic.test_remove) ... ok
#3731 test_sanity_check (theano.typed_list.tests.test_basic.test_remove) ... ok
#3732 test_inplace (theano.typed_list.tests.test_basic.test_reverse) ... ok
#3733 test_interface (theano.typed_list.tests.test_basic.test_reverse) ... ok
#3734 test_sanity_check (theano.typed_list.tests.test_basic.test_reverse) ... ok
#3735 test_append_inplace (theano.typed_list.tests.test_opt.test_inplace) ... ok
#3736 test_extend_inplace (theano.typed_list.tests.test_opt.test_inplace) ... ok
#3737 test_insert_inplace (theano.typed_list.tests.test_opt.test_inplace) ... ok
#3738 test_remove_inplace (theano.typed_list.tests.test_opt.test_inplace) ... ok
#3739 test_reverse_inplace (theano.typed_list.tests.test_opt.test_inplace) ... ok
#3740 theano.typed_list.tests.test_opt.test_constant_folding ... ok
#3741 Testing nested list with one level of depth ... ok
#3742 Nested list with different depth aren't the same ... ok
#3743 test for comparison between uneven nested list ... ok
#3744 Simple test on typed list type filter ... ok
#3745 test case for get_depth utilitary function ... ok
#3746 Test checking if values contained are themselves ... ok
#3747 test for the 'depth' optionnal argument ... ok
#3748 Typed List Value should raises an error ... ok
#3749 Typed list types should only be equal ... ok
#3750 test_variable_is_Typed_List_variable (theano.typed_list.tests.test_type.test_typed_list_type) ... ok
#3751 Typed list type should raises an ... ok
#3752 Typed list type should raises an ... ok
#3753 test_scipy_paper_example1 (theano.tests.diverse_tests.T_scipy) ... ok
#3754 This just sees if things compile well and if they run ... ok
#3755 theano.tests.test_2nd_order_grads.test001_jacobian_vector ... ok
#3756 theano.tests.test_2nd_order_grads.test002_jacobian_matrix ... ok
#3757 theano.tests.test_2nd_order_grads.test003_jacobian_scalar ... ok
#3758 theano.tests.test_2nd_order_grads.test004_hessian ... ok
#3759 Test that disconnected inputs are properly handled by jacobian. ... ok
#3760 test_connection_pattern (theano.tests.test_breakpoint.TestPdbBreakpoint) ... ok
#3761 test_fprop (theano.tests.test_breakpoint.TestPdbBreakpoint) ... ok
#3762 test_grad (theano.tests.test_breakpoint.TestPdbBreakpoint) ... ok
#3763 test_infer_shape (theano.tests.test_breakpoint.TestPdbBreakpoint) ... ok
#3764 test_invalid_default (theano.tests.test_config.T_config) ... ok
#3765 theano.tests.test_determinism.test_determinism_1 ... ok
#3766 Tests that one can compose two theano functions when the outputs are ... ok
#3767 Tests that debug mode works where outputs is a dictionary. ... ok
#3768 Tests that debug mode works where the outputs argument is a list. ... ok
#3769 Tests that named variables work when outputs is a dictionary ... ok
#3770 Tests that an exception is thrown if a non-string key is used in ... ok
#3771 Tests that theano.function works when outputs is a dictionary ... ok
#3772 Test that theano.function works if outputs is a list. ... ok
#3773 Tests that the output keys are sorted correctly. ... ok
#3774 Test if flake8 is respected. ... SKIP: flake8 is not installed
#3775 test_grad (theano.tests.test_gradient.TestConsiderConstant) ... /usr/lib/python2.7/unittest/case.py:329: UserWarning: consider_constant() is deprecated, use zero_grad() or disconnected_grad() instead.
  testMethod()
ok
#3776 test_op_removed (theano.tests.test_gradient.TestConsiderConstant) ... ok
#3777 test_connection_pattern (theano.tests.test_gradient.TestDisconnectedGrad) ... ok
#3778 test_disconnected_paths (theano.tests.test_gradient.TestDisconnectedGrad) ... ok
#3779 test_grad (theano.tests.test_gradient.TestDisconnectedGrad) ... ok
#3780 test_op_removed (theano.tests.test_gradient.TestDisconnectedGrad) ... ok
#3781 test_grad (theano.tests.test_gradient.TestZeroGrad) ... ok
#3782 test_op_removed (theano.tests.test_gradient.TestZeroGrad) ... ok
#3783 test_disconnected_nan (theano.tests.test_gradient.test_grad) ... ok
#3784 test_downcast_dtype (theano.tests.test_gradient.test_grad) ... ok
#3785 test_grad_constant (theano.tests.test_gradient.test_grad) ... ok
#3786 test_grad_cubic (theano.tests.test_gradient.test_grad) ... ok
#3787 test_grad_disconnected (theano.tests.test_gradient.test_grad) ... ok
#3788 test_grad_duplicate_input (theano.tests.test_gradient.test_grad) ... ok
#3789 test_grad_grad_cubic (theano.tests.test_gradient.test_grad) ... ok
#3790 test_grad_grad_quadratic (theano.tests.test_gradient.test_grad) ... ok
#3791 test_grad_int (theano.tests.test_gradient.test_grad) ... ok
#3792 test_grad_name (theano.tests.test_gradient.test_grad) ... ok
#3793 test_grad_quadratic (theano.tests.test_gradient.test_grad) ... ok
#3794 test_grad_quadratic_vector (theano.tests.test_gradient.test_grad) ... ok
#3795 test_undefined_grad_func (theano.tests.test_gradient.test_grad) ... ok
#3796 test_undefined_grad_grad (theano.tests.test_gradient.test_grad) ... ok
#3797 test_unimplemented_grad_func (theano.tests.test_gradient.test_grad) ... ok
#3798 test_unimplemented_grad_grad (theano.tests.test_gradient.test_grad) ... ok
#3799 Test grad is called correctly for a 1-to-1 op ... ok
#3800 Test grad is called correctly for a 1-to-many op ... ok
#3801 Test grad is called correctly for a many-to-1 op ... ok
#3802 Test grad is called correctly for a many-to-many op ... ok
#3803 Test that it is not ok to return None from op.grad() ... ok
#3804 Test that it is not ok to return the wrong number of gradient terms ... ok
#3805 theano.tests.test_gradient.test_known_grads ... ok
#3806 theano.tests.test_gradient.test_dxdx ... ok
#3807 theano.tests.test_gradient.test_known_grads_integers ... ok
#3808 theano.tests.test_gradient.test_undefined_cost_grad ... ok
#3809 theano.tests.test_gradient.test_disconnected_cost_grad ... ok
#3810 theano.tests.test_gradient.test_subgraph_grad ... ok
#3811 theano.tests.test_gradient.test_grad_clip ... ok
#3812 test_broadcast_mismatch (theano.tests.test_ifelse.test_ifelse) ... ok
#3813 test_dtype_mismatch (theano.tests.test_ifelse.test_ifelse) ... ok
#3814 test_grad_cast_input (theano.tests.test_ifelse.test_ifelse) ... ok
#3815 test_grad_int_value (theano.tests.test_ifelse.test_ifelse) ... ok
#3816 test_grad_lazy_if (theano.tests.test_ifelse.test_ifelse) ... ok
#3817 Regression test for test values of `ifelse` gradient. ... ok
#3818 test_lazy_if (theano.tests.test_ifelse.test_ifelse) ... ok
#3819 test_lazy_if_on_generics (theano.tests.test_ifelse.test_ifelse) ... ok
#3820 test_merge (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3821 test_merge_ifs_true_false (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3822 test_mixed_dtype (theano.tests.test_ifelse.test_ifelse) ... ok
#3823 test_multiple_out (theano.tests.test_ifelse.test_ifelse) ... ok
#3824 test_multiple_out_crash (theano.tests.test_ifelse.test_ifelse) ... ok
#3825 test_multiple_out_grad (theano.tests.test_ifelse.test_ifelse) ... ok
#3826 test_ndim_mismatch (theano.tests.test_ifelse.test_ifelse) ... ok
#3827 test_not_lazy_if_inplace (theano.tests.test_ifelse.test_ifelse) ... ok
#3828 test_pushout1 (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3829 test_pushout2 (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3830 test_pushout3 (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3831 test_remove_useless_inputs1 (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3832 test_remove_useless_inputs2 (theano.tests.test_ifelse.test_ifelse) ... SKIP: Optimization temporarily disabled
#3833 test_sparse_tensor_error (theano.tests.test_ifelse.test_ifelse) ... ok
#3834 theano.tests.test_pickle_unpickle_theano_fn.test_pickle_unpickle_with_reoptimization ... ok
#3835 theano.tests.test_pickle_unpickle_theano_fn.test_pickle_unpickle_without_reoptimization ... ok
#3836 This is a REALLY PARTIAL TEST. ... SKIP: pydot not available
#3837 theano.tests.test_printing.test_pydotprint_return_image ... SKIP: pydot not available
#3838 This is a REALLY PARTIAL TEST. ... SKIP: pydot not available
#3839 Just check that pydotprint does not crash with profile. ... SKIP: pydot not available
#3840 evaluates a reference output to make sure the ... ok
#3841 theano.tests.test_printing.test_debugprint ... ok
#3842 theano.tests.test_printing.test_scan_debugprint1 ... ok
#3843 theano.tests.test_printing.test_scan_debugprint2 ... ok
#3844 theano.tests.test_printing.test_scan_debugprint3 ... ok
#3845 theano.tests.test_printing.test_scan_debugprint4 ... ok
#3846 theano.tests.test_printing.test_scan_debugprint5 ... ok
#3847 theano.tests.test_printing.test_printing_scan ... SKIP: pydot not available
#3848 theano.tests.test_printing.test_subtensor ... ok
#3849 Tests that when we record a sequence of events, then ... ok
#3850 Tests that when we record a sequence of events, then ... ok
#3851 Like test_record_good, but some events are recorded by the ... ok
#3852 Like test_record_bad, but some events are recorded by the ... ok
#3853 test_Rop_dot_bug_18Oct2013_Jeremiah (theano.tests.test_rop.test_RopLop) ... ok
#3854 test_alloc (theano.tests.test_rop.test_RopLop) ... ok
#3855 test_argmax (theano.tests.test_rop.test_RopLop) ... ok
#3856 test_conv (theano.tests.test_rop.test_RopLop) ... ok
#3857 test_dimshuffle (theano.tests.test_rop.test_RopLop) ... ok
#3858 test_dot (theano.tests.test_rop.test_RopLop) ... SKIP: Rop does not handle non-differentiable inputs correctly. Bug exposed by fixing Add.grad method.
#3859 test_downsample (theano.tests.test_rop.test_RopLop) ... ok
#3860 test_elemwise0 (theano.tests.test_rop.test_RopLop) ... SKIP: Rop does not handle non-differentiable inputs correctly. Bug exposed by fixing Add.grad method.
#3861 test_elemwise1 (theano.tests.test_rop.test_RopLop) ... ok
#3862 test_flatten (theano.tests.test_rop.test_RopLop) ... ok
#3863 test_incsubtensor1 (theano.tests.test_rop.test_RopLop) ... ok
#3864 test_incsubtensor2 (theano.tests.test_rop.test_RopLop) ... ok
#3865 test_invalid_input (theano.tests.test_rop.test_RopLop) ... ok
#3866 test_join (theano.tests.test_rop.test_RopLop) ... ok
#3867 test_max (theano.tests.test_rop.test_RopLop) ... ok
#3868 test_multiple_outputs (theano.tests.test_rop.test_RopLop) ... ok
#3869 test_print (theano.tests.test_rop.test_RopLop) ... ok
#3870 test_rebroadcast (theano.tests.test_rop.test_RopLop) ... ok
#3871 test_reshape (theano.tests.test_rop.test_RopLop) ... ok
#3872 test_setsubtensor1 (theano.tests.test_rop.test_RopLop) ... ok
#3873 test_setsubtensor2 (theano.tests.test_rop.test_RopLop) ... ok
#3874 test_shape (theano.tests.test_rop.test_RopLop) ... ok
#3875 test_softmax (theano.tests.test_rop.test_RopLop) ... ok
#3876 test_specifyshape (theano.tests.test_rop.test_RopLop) ... ok
#3877 test_subtensor (theano.tests.test_rop.test_RopLop) ... ok
#3878 test_sum (theano.tests.test_rop.test_RopLop) ... ok
#3879 test_updates_add (theano.tests.test_updates.test_ifelse) ... ok
#3880 test_updates_init (theano.tests.test_updates.test_ifelse) ... ok
#3881 test_updates_setitem (theano.tests.test_updates.test_ifelse) ... ok

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_abstractconv.py", line 15, in <module>
    from .config import mode_with_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_basic_ops.py", line 27, in <module>
    from .config import mode_with_gpu, mode_without_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_blas.py", line 14, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_blocksparse.py", line 9, in <module>
    from .config import mode_with_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_cgpukernelbase.py", line 9, in <module>
    from .config import mode_with_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_dnn.py", line 23, in <module>
    from .config import mode_with_gpu, mode_without_gpu, test_ctx_name, ref_cast
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_elemwise.py", line 12, in <module>
    from .config import mode_with_gpu, mode_without_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_extra_ops.py", line 16, in <module>
    from .config import mode_with_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_fft.py", line 11, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_gemmcorr.py", line 13, in <module>
    from .config import mode_with_gpu, mode_without_gpu, ref_cast
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_gemmcorr3d.py", line 13, in <module>
    from .config import mode_with_gpu, mode_without_gpu, ref_cast
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_linalg.py", line 8, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_multinomial.py", line 14, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_neighbours.py", line 4, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_nerv.py", line 10, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_nnet.py", line 10, in <module>
    from .config import mode_with_gpu, mode_without_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_opt.py", line 22, in <module>
    from .config import mode_with_gpu, test_ctx_name, SkipTest
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_pickle.py", line 24, in <module>
    from . import config as _  # noqa
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_pool.py", line 15, in <module>
    from .config import mode_with_gpu, mode_without_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_reduction.py", line 10, in <module>
    from .config import mode_with_gpu, mode_without_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_scan.py", line 13, in <module>
    from .config import mode_with_gpu, test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_subtensor.py", line 20, in <module>
    from .config import mode_with_gpu
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/test_type.py", line 12, in <module>
    from .config import test_ctx_name
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

======================================================================
ERROR: Failure: GpuArrayException (Unknown device error: -1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/loader.py", line 418, in loadTestsFromName
    addr.filename, addr.module)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/home/staff/inga/punctuator2/theano-env/local/lib/python2.7/site-packages/nose/importer.py", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/sandbox/tests/test_rng_mrg.py", line 21, in <module>
    import theano.gpuarray.tests.config
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/tests/config.py", line 12, in <module>
    theano.gpuarray.init_dev('cuda')
  File "/home/staff/inga/.local/lib/python2.7/site-packages/theano/gpuarray/__init__.py", line 60, in init_dev
    sched=config.gpuarray.sched)
  File "pygpu/gpuarray.pyx", line 614, in pygpu.gpuarray.init (pygpu/gpuarray.c:9208)
  File "pygpu/gpuarray.pyx", line 566, in pygpu.gpuarray.pygpu_init (pygpu/gpuarray.c:8899)
  File "pygpu/gpuarray.pyx", line 1021, in pygpu.gpuarray.GpuContext.__cinit__ (pygpu/gpuarray.c:13261)
GpuArrayException: Unknown device error: -1

----------------------------------------------------------------------
Ran 5464 tests in 10460.995s

FAILED (SKIP=706, errors=24)
0.0581646137166
0.0581646137166
0.0581646137166
0.0581646137166
tensors_lens_sum: 3tensors_lens_sum: 3tensors_lens_sum: 3srun: error: terra: task 0: Exited with exit code 1
